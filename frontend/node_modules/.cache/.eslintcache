[{"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\index.js":"1","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\reportWebVitals.js":"2","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\App.js":"3","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\api\\reducers\\index.js":"4","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\MainPage\\Main.js":"5","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\api\\auth\\auth.js":"6","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LoginPage.js":"7","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\RegisterPage.js":"8","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\api\\reducers\\friend_reducer.js":"9","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\api\\reducers\\user_reducer.js":"10","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\api\\actions\\main_action.js":"11","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\LeftPage.js":"12","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\api\\actions\\user_action.js":"13","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\FriendList\\FriendList.js":"14","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\ChatList\\ChatList.js":"15","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\api\\actions\\friend_action.js":"16","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\FriendList\\Title\\LeftTitle.js":"17","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\FriendList\\MyProfile\\MyProfile.js":"18","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\PlusFriend.js":"19","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\SearchFriend.js":"20"},{"size":1062,"mtime":1619430972667,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1619430972668,"results":"23","hashOfConfig":"22"},{"size":665,"mtime":1619430972646,"results":"24","hashOfConfig":"22"},{"size":215,"mtime":1619430972654,"results":"25","hashOfConfig":"22"},{"size":1339,"mtime":1619488499881,"results":"26","hashOfConfig":"22"},{"size":1417,"mtime":1619430972652,"results":"27","hashOfConfig":"22"},{"size":3913,"mtime":1619430972662,"results":"28","hashOfConfig":"22"},{"size":11771,"mtime":1619430972666,"results":"29","hashOfConfig":"22"},{"size":354,"mtime":1619433872739,"results":"30","hashOfConfig":"22"},{"size":984,"mtime":1619493581659,"results":"31","hashOfConfig":"22"},{"size":266,"mtime":1619430972649,"results":"32","hashOfConfig":"22"},{"size":1448,"mtime":1619493581665,"results":"33","hashOfConfig":"22"},{"size":1623,"mtime":1619493581656,"results":"34","hashOfConfig":"22"},{"size":3029,"mtime":1619433872786,"results":"35","hashOfConfig":"22"},{"size":157,"mtime":1619430972656,"results":"36","hashOfConfig":"22"},{"size":606,"mtime":1619433872737,"results":"37","hashOfConfig":"22"},{"size":1571,"mtime":1619430972661,"results":"38","hashOfConfig":"22"},{"size":496,"mtime":1619493581664,"results":"39","hashOfConfig":"22"},{"size":367,"mtime":1619430972659,"results":"40","hashOfConfig":"22"},{"size":2169,"mtime":1619430972660,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"6bq125",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\index.js",[],["91","92"],"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\reportWebVitals.js",[],"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\App.js",[],"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\api\\reducers\\index.js",[],"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\MainPage\\Main.js",["93"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './Main.scss';\r\nimport LeftPage from '../LeftPage/LeftPage';\r\nimport { getUser } from '../../api/actions/main_action';\r\nconst Main = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [UserData, setUserData] = useState(\"\");\r\n\r\n    const onClickHandler = () =>{\r\n        axios.get('/api/users/logout')\r\n        .then(response => {\r\n            if(response.data.success){\r\n                props.history.push(\"/\");\r\n            }else{\r\n                alert('로그아웃 하는데 실패 했습니다.');\r\n            }\r\n        })\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        dispatch(getUser())\r\n        .then(response => {\r\n            setUserData(response.payload);\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"box\">\r\n                <LeftPage props={props} UserData={UserData}/>\r\n                {/* <div className=\"right_side\">\r\n                    dddd\r\n                </div> */}\r\n                <button onClick={onClickHandler}>\r\n                        로그아웃\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(Main);\r\n","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\api\\auth\\auth.js",["94","95"],"import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { auth } from '../actions/user_action';\r\n\r\nexport default function(SpecificComponent, option, adminRoute = null){\r\n\r\n    // option\r\n    // null => 아무나 출입이 가능한 페이지\r\n    // true => 로그인한 유저만 출입이 가능한 페이지\r\n    // false => 로그인한 유저는 출입 불가능한 페이지\r\n\r\n    // adminRoute는 true가 되면 어드민 유저만 가능하다.\r\n    \r\n    function AuthenticationCheck(props){\r\n        \r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(()=>{\r\n            \r\n            dispatch(auth()).then(response => {\r\n\r\n                // 로그인 하지 않은 상태\r\n                if(!response.payload.isAuth){\r\n                    if(option){\r\n                        props.history.push('/');\r\n                    }\r\n                }else{\r\n                    // 로그인 한 상태\r\n                    if(adminRoute && !response.payload.isAdmin){\r\n                        props.history.push('/main')\r\n                    }else{\r\n                        if(option === false){\r\n                            props.history.push('/main');\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }, [])\r\n        return (\r\n            <SpecificComponent />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LoginPage.js",["96","97","98"],"import React, {useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport { loginUser } from '../api/actions/user_action';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { Grid, Paper, Avatar, TextField, Button, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    customTextField: {\r\n      \"& input::placeholder\": {\r\n        color : '#fff',\r\n        fontWeight : 'bolder'\r\n      }\r\n    }\r\n})\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [UserId, setUserId] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n\r\n    const onUserIdHandler = (e) => {\r\n        setUserId(e.target.value);\r\n    }\r\n    const onPasswordHandler = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        let body = {\r\n            userId : UserId,\r\n            password : Password,\r\n        }\r\n\r\n        dispatch(loginUser(body))\r\n        .then(response => {\r\n            if(response.payload.loginSuccess){\r\n                props.history.push('/main');\r\n            }else{\r\n                alert('Error');\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const paperStyle = {\r\n        padding : 20,\r\n        height : '568px',\r\n        width : 280,\r\n        margin : '0 auto',\r\n        textAlign : 'center',\r\n        background : '#f6bd63',\r\n        position: 'absolute',\r\n        top:'50%',\r\n        left:'50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    }\r\n    const avatarStyle = {\r\n        width : '230px',\r\n        height : '90px',\r\n        margin: '10px 0 30px',\r\n        background : '#f6bd63',\r\n    }\r\n    const btnstyle = {\r\n        margin : '8px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#845460'\r\n    }\r\n    const imgstyle ={\r\n        width : '100%',\r\n        height : '100%',\r\n    }\r\n    const logostyle ={\r\n        width: '200px',\r\n        marginTop: '50px',\r\n    }\r\n    const inputstyle ={\r\n        width : '90%',\r\n        margin : '0 auto',\r\n        height : '30px',\r\n        marginBottom : '20px',\r\n        background : '#855460',\r\n        color : '#fff'\r\n    }\r\n    const linkstyle ={\r\n        color : '#fff',\r\n        fontWeight : 'bolder',\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid>\r\n            <Paper elevation={10} style={paperStyle} classes={{root:classes.customTextField}}>\r\n                <Grid align=\"center\">\r\n                    <img src=\"/text_transparent.png\" style={logostyle}></img>\r\n                    <Avatar style={avatarStyle} ><img src=\"/gyeran_height_cut.png\" style={imgstyle} /></Avatar>\r\n\r\n                </Grid>\r\n                <form onSubmit={onSubmitHandler}>\r\n                    <input style={inputstyle} type=\"text\" label=\"UserId\" placeholder=\"Enter UserId\" value={UserId} onChange={onUserIdHandler} required/>\r\n                    <input style={inputstyle} type=\"password\" label=\"Password\" placeholder=\"Enter Password\" value={Password} onChange={onPasswordHandler} required/>\r\n                    {/* <FormControlLabel \r\n                        control={\r\n                            <Checkbox\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Remember Me\"\r\n                    /> */}\r\n                    <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>Sign in</Button>\r\n                </form>\r\n                <Typography>\r\n                    <Link to=\"/register\" style={linkstyle}>\r\n                        Sign up\r\n                    </Link>\r\n                </Typography>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\RegisterPage.js",["99"],"import React, { useState, useEffect } from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport { registerUser, checkId, checkNick, checkPhone } from '../api/actions/user_action';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Grid, Paper, Avatar, FormControlLabel, Checkbox, TextField, Button, Typography } from '@material-ui/core';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [UserId, setUserId] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n    const [ConfirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [NickName, setNickName] = useState(\"\");\r\n    const [Name, setName] = useState(\"\");\r\n    const [Phone, setPhone] = useState(\"\");\r\n    const [checkPassword, setcheckPassword] = useState(true);\r\n    const [NoticeId, setNoticeId] = useState(\"\");\r\n    const [NoticeNick, setNoticeNick] = useState(\"\");\r\n    const [NoticePhone, setNoticePhone] = useState(\"\");\r\n    // const [Checking, setChecking] = useState(0);\r\n    const [isCheckedId, setisCheckedId] = useState(false);\r\n    const [isCheckedNick, setisCheckedNick] = useState(false);\r\n    const [isCheckedPhone, setisCheckedPhone] = useState(false);\r\n    const [isCheckedPassword, setisCheckedPassword] = useState(false);\r\n\r\n\r\n    const onUserIdHandler = (e) => {\r\n        setUserId(e.target.value);\r\n    }\r\n    const onPasswordHandler = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n    const onPasswordHandler2 = (e) => {\r\n        setConfirmPassword(e.target.value);\r\n    }\r\n    const onNickNameHandler = (e) => {\r\n        setNickName(e.target.value);\r\n    }\r\n    const onNameHandler = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n    const onPhoneHandler = (e) => {\r\n        const regex = /^[0-9\\b -]{0,13}$/;\r\n        if (regex.test(e.target.value)){\r\n            setPhone(e.target.value);\r\n        }\r\n    }\r\n    const onCheckIdHandler = (e) => {\r\n\r\n        e.preventDefault();\r\n        let body = {\r\n            userId : UserId,\r\n        }\r\n\r\n        dispatch(checkId(body))\r\n        .then(response => {\r\n            setNoticeId(response.payload.message);\r\n            if(response.payload.checkId){\r\n                setisCheckedId(true)\r\n            } else {\r\n                setisCheckedId(false)\r\n            }\r\n        })\r\n    }\r\n    const onCheckNick = (e) => {\r\n        \r\n        e.preventDefault();\r\n        let body = {\r\n            userNickName : NickName,\r\n        }\r\n\r\n        dispatch(checkNick(body))\r\n        .then(response => {\r\n            setNoticeNick(response.payload.message);\r\n            if(response.payload.checkNick){\r\n                setisCheckedNick(true)\r\n            } else {\r\n                setisCheckedNick(false)\r\n            }\r\n        })\r\n    }\r\n    const onCheckPhone = (e) => {\r\n        \r\n        e.preventDefault();\r\n        let body = {\r\n            userPhone : Phone,\r\n        }\r\n\r\n        dispatch(checkPhone(body))\r\n        .then(response => {\r\n            setNoticePhone(response.payload.message);\r\n            if(response.payload.checkPhone){\r\n                setisCheckedPhone(true)\r\n            } else {\r\n                setisCheckedPhone(false)\r\n            }\r\n        })\r\n    }\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        let body = {\r\n            userId : UserId,\r\n            password : Password,\r\n            userNickName : NickName,\r\n            userName : Name,\r\n            userPhone : Phone,\r\n        }\r\n        dispatch(registerUser(body))\r\n        .then(response => {\r\n            if(response.payload.success){\r\n                props.history.push(\"/\");\r\n            }else{\r\n                alert(\"Failed to sign up\");\r\n            }\r\n        })\r\n    }\r\n\r\n    const paperStyle ={\r\n        padding : 20,\r\n        height : '650px',\r\n        width : 280,\r\n        margin : '20px auto',\r\n        // textAlign : 'center',\r\n        position: 'absolute',\r\n        top:'50%',\r\n        left:'50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n    const hrstyle ={\r\n        backgroundColor : 'gray',\r\n        height : '1px'\r\n    }\r\n    const divstyle1 ={\r\n        paddingLeft: '12.5px',\r\n        marginTop: '20px',\r\n    }\r\n    const divstyle2 ={\r\n        marginTop: '10px',\r\n        fontSize: '12px',\r\n    }\r\n    const textStyle1 ={\r\n        width : 175,\r\n        marginBottom : '10px',\r\n    }\r\n    const textStyle2 ={\r\n        width : 250,\r\n        marginBottom : '10px',\r\n    }\r\n    const btnstyle ={\r\n        margin : '18px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#845460'\r\n    }\r\n    const btnstyle2 ={\r\n        margin : '8px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#f6bd63',\r\n        width : '80px',\r\n        height : '40px',\r\n        borderRadius : '15px 15px',\r\n        border : 'none',\r\n        cursor : 'pointer',\r\n    }\r\n    const disablestyle ={\r\n        margin : '18px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : 'rgb(189, 189, 189)',\r\n    }\r\n    const pstyle ={\r\n        margin : '0 0',\r\n        fontWeight : 'bolder',\r\n        fontSize : '10px',\r\n    }\r\n    const linkstyle ={\r\n        color : 'inherit',\r\n    }\r\n    const spanstyle ={\r\n        fontSize : '25px',\r\n        fontWeight : 'bolder',\r\n        marginLeft : '70px',\r\n    }\r\n\r\n    useEffect(()=>{\r\n        // if(Password !== ConfirmPassword){\r\n        //     setcheckPassword(false);\r\n        // }else{\r\n        //     setcheckPassword(true);\r\n        // }\r\n        if(Password.length === 0 && ConfirmPassword.length === 0){\r\n            setcheckPassword(true);\r\n            setisCheckedPassword(false);\r\n        }else if(Password.length < 5 && ConfirmPassword.length < 5){\r\n            setcheckPassword(false);\r\n            setisCheckedPassword(false);\r\n        }else if(Password !== ConfirmPassword){\r\n            setcheckPassword(false);\r\n            setisCheckedPassword(false);\r\n        }else{\r\n            setcheckPassword(true);\r\n            setisCheckedPassword(true);\r\n        }\r\n    },[Password, ConfirmPassword])\r\n\r\n    useEffect(()=>{\r\n        if(Phone.length === 11) {\r\n            setPhone(Phone.replace(/-/g,'').replace(/(\\d{3})(\\d{4})(\\d{4})/, '$1-$2-$3'));\r\n        }\r\n    }, [Phone]);\r\n\r\n    return (\r\n        <Grid>\r\n            <Paper elevation={10} style={paperStyle} >\r\n                <Grid align=\"left\">\r\n                    <Typography>\r\n                        <Link to=\"/\" style={linkstyle}>\r\n                            <ArrowBackIosIcon />\r\n                        </Link>\r\n                        <span style={spanstyle}>회원가입</span>\r\n                    </Typography>\r\n                </Grid>\r\n                <hr style={hrstyle}/>\r\n                <form onSubmit={onSubmitHandler}>\r\n                    <div style={divstyle1}>\r\n                        <TextField style={textStyle1} id=\"standard-basic\" label=\"아이디\" type=\"text\" value={UserId} onChange={onUserIdHandler} />\r\n                        <button type=\"submit\" style={btnstyle2} onClick={onCheckIdHandler}>중복확인</button>\r\n                        {NoticeId.length !== 0 ? <p style={pstyle}>{NoticeId}</p> : null}\r\n                        {checkPassword === true ? <TextField style={textStyle2} id=\"standard-basic\" label=\"비밀번호\" type=\"password\" value={Password} onChange={onPasswordHandler} /> : <TextField error id=\"standard-error-helper-text\" label=\"비밀번호\" type=\"password\" value={Password} onChange={onPasswordHandler} helperText=\"Incorrect entry.\" />}\r\n                        {checkPassword === true ? <TextField style={textStyle2} id=\"standard-basic\" label=\"비밀번호확인\" type=\"password\" value={ConfirmPassword} onChange={onPasswordHandler2} /> : <TextField error id=\"standard-error-helper-text\" label=\"비밀번호확인\" type=\"password\" value={ConfirmPassword} onChange={onPasswordHandler2} helperText=\"최소 5자리 이상 조합\"/>}\r\n                        <TextField style={textStyle1} id=\"standard-basic\" label=\"닉네임\" type=\"text\" value={NickName} onChange={onNickNameHandler} />\r\n                        <button type=\"submit\" style={btnstyle2} onClick={onCheckNick}>중복확인</button>\r\n                        {NoticeNick.length !== 0 ? <p style={pstyle}>{NoticeNick}</p> : null}\r\n                        <TextField style={textStyle2} id=\"standard-basic\" label=\"이름\" type=\"text\" value={Name} onChange={onNameHandler} />\r\n                        <TextField style={textStyle1} id=\"standard-basic\" label=\"휴대폰번호\" type=\"text\" value={Phone} onChange={onPhoneHandler} />\r\n                        <button type=\"submit\" style={btnstyle2} onClick={onCheckPhone}>중복확인</button>\r\n                        {NoticePhone.length !== 0 ? <p style={pstyle}>{NoticePhone}</p> : null}\r\n\r\n                        <div style={divstyle2}>\r\n                            {/* <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                // label=\"모두 동의합니다\"\r\n                            />\r\n                            모두 동의합니다.<br/> */}\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                        required\r\n                                    />\r\n                                }\r\n                                label=\"이용약관 동의\"\r\n                            />\r\n                            {/* 이용약관 동의<br/> */}\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                        required\r\n                                    />\r\n                                }\r\n                                label=\"개인정보 취급방침 동의\"\r\n                            />\r\n                            {/* 개인정보 취급방침 동의<br/> */}\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                        required\r\n                                    />\r\n                                }\r\n                                label=\"마케팅 정보 수신 동의\"\r\n                            />\r\n                            {/* 마케팅 정보 수신 동의<br/> */}\r\n                        </div>\r\n                    </div>\r\n                    {/* {Checking >= 4 ? <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>Sign up</Button> : <Button disabled style={disablestyle} variant=\"contained\" fullWidth>Sign up</Button>} */}\r\n                    {isCheckedId && isCheckedNick && isCheckedPhone && isCheckedPassword ? <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>Sign up</Button> : <Button disabled style={disablestyle} variant=\"contained\" fullWidth>Sign up</Button>}\r\n                    \r\n                </form>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\api\\reducers\\friend_reducer.js",["100"],"const SEARCH_USER = \"search_user\";\r\nconst ADD_USER = \"add_user\";\r\n\r\nexport default function(state={}, action){\r\n    switch (action.type) {\r\n        case SEARCH_USER:\r\n            return {...state, friend : action.payload}\r\n        case ADD_USER:\r\n            return {...state, plus : action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\api\\reducers\\user_reducer.js",["101"],"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\api\\actions\\main_action.js",[],"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\LeftPage.js",["102","103"],"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\api\\actions\\user_action.js",[],"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\FriendList\\FriendList.js",["104"],"import React, { useState, useEffect } from 'react';\r\nimport LeftTitle from './Title/LeftTitle';\r\nimport MyProfile from './MyProfile/MyProfile';\r\nimport PlusFriend from './PlusFriend/PlusFriend';\r\nimport { withRouter } from 'react-router-dom';\r\nimport SearchFriend from './PlusFriend/SearchFriend';\r\nimport { searchFriend, friendAdd } from '../../../api/actions/friend_action';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nconst FriendList = ({UserData}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [Search, setSearch] = useState(false);\r\n    const [Friend, setFriend] = useState(false);\r\n    const [FriendClick, setFriendClick] = useState(false);\r\n    const [InputText, setInputText] = useState(\"\");\r\n    const [InputText2, setInputText2] = useState(\"\");\r\n    const [friendDB, setfriendDB] = useState(\"\");\r\n\r\n    const onToggle = () =>{\r\n        setSearch(!Search);\r\n        setFriend(false);\r\n        setFriendClick(false);\r\n    }\r\n    const onToggle2 = () =>{\r\n        setFriend(!Friend);\r\n        setSearch(false);\r\n        setFriendClick(false);\r\n    }\r\n    const onToggle3 = () =>{\r\n        setFriendClick(!Friend);\r\n        setFriend(!Friend);\r\n        setSearch(false);\r\n    }\r\n    const onInputTextHandler = (e) =>{\r\n        setInputText(e.target.value);\r\n    }\r\n    const onInputTextHandler2 = (e) =>{\r\n        setInputText2(e.target.value);\r\n    }\r\n    const onPlustHandler = (e) =>{\r\n        let body = {\r\n            data : e,\r\n            user : UserData.userId\r\n        }\r\n        \r\n        dispatch(friendAdd(body))\r\n        .then(response => {\r\n            console.log('성공!');\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(InputText2 !== \"\"){\r\n            let body = {\r\n                data : InputText2\r\n            }\r\n            \r\n            dispatch(searchFriend(body))\r\n            .then(response => {\r\n                setfriendDB(response.payload);\r\n            })\r\n\r\n        }else{\r\n            setfriendDB(\"\");\r\n        }\r\n    }, [InputText2])\r\n    \r\n    return (\r\n        <div>\r\n            <LeftTitle \r\n                Search={Search}\r\n                Friend={Friend}\r\n                FriendClick={FriendClick}\r\n                InputText={InputText}\r\n                InputText2={InputText2}\r\n                onToggle={onToggle}\r\n                onToggle2={onToggle2}\r\n                onInputTextHandler={onInputTextHandler}\r\n                onInputTextHandler2={onInputTextHandler2}\r\n            />\r\n            <MyProfile\r\n                UserData={UserData}\r\n            />\r\n            <div className=\"line\" />\r\n            {InputText2.length === 0 ?\r\n                <PlusFriend\r\n                    onToggle3={onToggle3}\r\n                />\r\n                :\r\n                <SearchFriend\r\n                    friendDB={friendDB}\r\n                    UserData={UserData}\r\n                    onPlustHandler={onPlustHandler}\r\n                />\r\n            }\r\n            <div className=\"line\" />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(FriendList);\r\n","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\ChatList\\ChatList.js",[],"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\api\\actions\\friend_action.js",[],"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\FriendList\\Title\\LeftTitle.js",["105"],"import axios from 'axios';\r\nimport React, { useRef, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../../../MainPage/Main.scss';\r\nimport {\r\n    SearchOutlined,\r\n    UserAddOutlined\r\n} from '@ant-design/icons';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst LeftTitle = ({\r\n    Search,\r\n    Friend,\r\n    FriendClick,\r\n    InputText,\r\n    InputText2,\r\n    onToggle,\r\n    onToggle2,\r\n    onInputTextHandler,\r\n    onInputTextHandler2\r\n}) => {\r\n\r\n    const inputEl = useRef(null);\r\n    const inputEl2 = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if(Search) inputEl.current.focus();\r\n        if(Friend) inputEl2.current.focus();\r\n        if(FriendClick) inputEl2.current.focus();\r\n    }, [Search, Friend, FriendClick])\r\n\r\n    return (\r\n        <div className=\"left_title\">\r\n            <div>친구</div>\r\n            <div className=\"search_friend\">\r\n                {Search ? <div className=\"input_box\"><input type=\"text\" placeholder=\"친구검색\" value={InputText} ref={inputEl} onChange={onInputTextHandler} /><SearchIcon className=\"search_icon\" /></div> : null}\r\n                {Friend || FriendClick ? <div className=\"input_box\"><input type=\"text\" placeholder=\"친구추가\" value={InputText2} ref={inputEl2} onChange={onInputTextHandler2}/><SearchIcon className=\"search_icon\" /></div> : null}\r\n                <SearchOutlined onClick={onToggle}/>\r\n                <UserAddOutlined onClick={onToggle2} className=\"add_friend\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(LeftTitle);\r\n","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\FriendList\\MyProfile\\MyProfile.js",["106","107"],"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\PlusFriend.js",[],"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\SearchFriend.js",["108"],"import React from 'react';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport '../../../MainPage/Main.scss';\r\n\r\nconst SearchFriend = ({friendDB, UserData, onPlustHandler }) => {\r\n\r\n    if(friendDB.friend){\r\n        if(friendDB.friend.length !== 0){ //검색결과 있을 때\r\n            return (\r\n                <div>\r\n                    {\r\n                        friendDB.friend.map((searched) => (\r\n                            // let searched = searched.filter(exceptsearch => exceptsearch.userId === UserData.userId)\r\n                            searched.userId !== UserData.userId ?   //검색결과에서 자신 제외\r\n                                <div className=\"myProfile\" key={searched.userId} onClick={()=>onPlustHandler(searched.userId)}>\r\n                                    <img src={searched.image} />\r\n                                    <div className=\"text_site\">\r\n                                        <div className=\"top\">{searched.userName}</div>\r\n                                        <div className=\"bottom\">{searched.message}</div>\r\n                                    </div>\r\n                                    <AddBoxIcon className=\"plus\"/>\r\n                                </div>\r\n                                :\r\n                                <></>\r\n                        ))           \r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n        else{          //검색결과 없을 때\r\n            return(\r\n                <div className=\"myProfile\">\r\n                    <div className=\"text_site\">\r\n                        <div className=\"top\">친구없엉</div>\r\n                        <div className=\"bottom\">ㅇㅎㅇ</div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }else{          //검색결과 없을 때\r\n        return(\r\n            <div className=\"myProfile\">\r\n                <div className=\"text_site\">\r\n                    <div className=\"top\">친구없엉</div>\r\n                    <div className=\"bottom\">ㅇㅎㅇ</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    \r\n};\r\n\r\nexport default SearchFriend\r\n",{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":30,"column":7,"nodeType":"115","endLine":30,"endColumn":9,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":5,"column":1,"nodeType":"119","endLine":44,"endColumn":2},{"ruleId":"113","severity":1,"message":"120","line":38,"column":12,"nodeType":"115","endLine":38,"endColumn":14,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":6,"column":31,"nodeType":"124","messageId":"125","endLine":6,"endColumn":40},{"ruleId":"126","severity":1,"message":"127","line":100,"column":21,"nodeType":"128","endLine":100,"endColumn":72},{"ruleId":"126","severity":1,"message":"127","line":101,"column":50,"nodeType":"128","endLine":101,"endColumn":103},{"ruleId":"122","severity":1,"message":"129","line":5,"column":23,"nodeType":"124","messageId":"125","endLine":5,"endColumn":29},{"ruleId":"117","severity":1,"message":"118","line":4,"column":1,"nodeType":"119","endLine":13,"endColumn":2},{"ruleId":"117","severity":1,"message":"118","line":9,"column":1,"nodeType":"119","endLine":28,"endColumn":2},{"ruleId":"122","severity":1,"message":"130","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":25},{"ruleId":"122","severity":1,"message":"131","line":2,"column":31,"nodeType":"124","messageId":"125","endLine":2,"endColumn":36},{"ruleId":"113","severity":1,"message":"114","line":68,"column":8,"nodeType":"115","endLine":68,"endColumn":20,"suggestions":"132"},{"ruleId":"122","severity":1,"message":"133","line":1,"column":8,"nodeType":"124","messageId":"125","endLine":1,"endColumn":13},{"ruleId":"122","severity":1,"message":"133","line":2,"column":8,"nodeType":"124","messageId":"125","endLine":2,"endColumn":13},{"ruleId":"126","severity":1,"message":"127","line":9,"column":13,"nodeType":"128","endLine":9,"endColumn":41},{"ruleId":"126","severity":1,"message":"127","line":16,"column":37,"nodeType":"128","endLine":16,"endColumn":65},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["136"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.",["137"],"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Avatar' is defined but never used.","'useState' is defined but never used.","'Route' is defined but never used.",["138"],"'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [dispatch]",{"range":"145","text":"146"},"Update the dependencies array to be: [dispatch, props.history]",{"range":"147","text":"148"},"Update the dependencies array to be: [InputText2, dispatch]",{"range":"149","text":"150"},[853,855],"[dispatch]",[1160,1162],"[dispatch, props.history]",[1978,1990],"[InputText2, dispatch]"]