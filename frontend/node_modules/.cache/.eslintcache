<<<<<<< HEAD
[{"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\index.js":"1","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\App.js":"2","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\index.js":"4","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LoginPage.js":"5","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\MainPage\\Main.js":"6","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\auth\\auth.js":"7","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\RegisterPage.js":"8","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\user_reducer.js":"9","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\main_action.js":"10","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\user_action.js":"11","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\LeftPage.js":"12","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\FriendList.js":"13","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\ChatList\\ChatList.js":"14","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\PlusFriend.js":"15","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\MyProfile\\MyProfile.js":"16","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\Title\\LeftTitle.js":"17","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\SearchFriend.js":"18","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\friend_reducer.js":"19","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\friend_action.js":"20","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\ShowFriend\\ShowFriend.js":"21"},{"size":1062,"mtime":1619226324989,"results":"22","hashOfConfig":"23"},{"size":665,"mtime":1619396853100,"results":"24","hashOfConfig":"23"},{"size":375,"mtime":1619140719705,"results":"25","hashOfConfig":"23"},{"size":215,"mtime":1619415314231,"results":"26","hashOfConfig":"23"},{"size":3913,"mtime":1619278838018,"results":"27","hashOfConfig":"23"},{"size":1773,"mtime":1619486142359,"results":"28","hashOfConfig":"23"},{"size":1417,"mtime":1619263190053,"results":"29","hashOfConfig":"23"},{"size":11771,"mtime":1619414164914,"results":"30","hashOfConfig":"23"},{"size":984,"mtime":1619397271134,"results":"31","hashOfConfig":"23"},{"size":266,"mtime":1619357976694,"results":"32","hashOfConfig":"23"},{"size":1623,"mtime":1619396617060,"results":"33","hashOfConfig":"23"},{"size":1484,"mtime":1619494210973,"results":"34","hashOfConfig":"23"},{"size":3708,"mtime":1619494210970,"results":"35","hashOfConfig":"23"},{"size":157,"mtime":1619345317079,"results":"36","hashOfConfig":"23"},{"size":427,"mtime":1619494210971,"results":"37","hashOfConfig":"23"},{"size":496,"mtime":1619494210970,"results":"38","hashOfConfig":"23"},{"size":1571,"mtime":1619494210973,"results":"39","hashOfConfig":"23"},{"size":2230,"mtime":1619494210971,"results":"40","hashOfConfig":"23"},{"size":475,"mtime":1619486142356,"results":"41","hashOfConfig":"23"},{"size":837,"mtime":1619486142355,"results":"42","hashOfConfig":"23"},{"size":965,"mtime":1619494210972,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"c8e9fu",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\index.js",[],["93","94"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\App.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\index.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LoginPage.js",["95","96","97"],"import React, {useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport { loginUser } from '../api/actions/user_action';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { Grid, Paper, Avatar, TextField, Button, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    customTextField: {\r\n      \"& input::placeholder\": {\r\n        color : '#fff',\r\n        fontWeight : 'bolder'\r\n      }\r\n    }\r\n})\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [UserId, setUserId] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n\r\n    const onUserIdHandler = (e) => {\r\n        setUserId(e.target.value);\r\n    }\r\n    const onPasswordHandler = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        let body = {\r\n            userId : UserId,\r\n            password : Password,\r\n        }\r\n\r\n        dispatch(loginUser(body))\r\n        .then(response => {\r\n            if(response.payload.loginSuccess){\r\n                props.history.push('/main');\r\n            }else{\r\n                alert('Error');\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const paperStyle = {\r\n        padding : 20,\r\n        height : '568px',\r\n        width : 280,\r\n        margin : '0 auto',\r\n        textAlign : 'center',\r\n        background : '#f6bd63',\r\n        position: 'absolute',\r\n        top:'50%',\r\n        left:'50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    }\r\n    const avatarStyle = {\r\n        width : '230px',\r\n        height : '90px',\r\n        margin: '10px 0 30px',\r\n        background : '#f6bd63',\r\n    }\r\n    const btnstyle = {\r\n        margin : '8px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#845460'\r\n    }\r\n    const imgstyle ={\r\n        width : '100%',\r\n        height : '100%',\r\n    }\r\n    const logostyle ={\r\n        width: '200px',\r\n        marginTop: '50px',\r\n    }\r\n    const inputstyle ={\r\n        width : '90%',\r\n        margin : '0 auto',\r\n        height : '30px',\r\n        marginBottom : '20px',\r\n        background : '#855460',\r\n        color : '#fff'\r\n    }\r\n    const linkstyle ={\r\n        color : '#fff',\r\n        fontWeight : 'bolder',\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid>\r\n            <Paper elevation={10} style={paperStyle} classes={{root:classes.customTextField}}>\r\n                <Grid align=\"center\">\r\n                    <img src=\"/text_transparent.png\" style={logostyle}></img>\r\n                    <Avatar style={avatarStyle} ><img src=\"/gyeran_height_cut.png\" style={imgstyle} /></Avatar>\r\n\r\n                </Grid>\r\n                <form onSubmit={onSubmitHandler}>\r\n                    <input style={inputstyle} type=\"text\" label=\"UserId\" placeholder=\"Enter UserId\" value={UserId} onChange={onUserIdHandler} required/>\r\n                    <input style={inputstyle} type=\"password\" label=\"Password\" placeholder=\"Enter Password\" value={Password} onChange={onPasswordHandler} required/>\r\n                    {/* <FormControlLabel \r\n                        control={\r\n                            <Checkbox\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Remember Me\"\r\n                    /> */}\r\n                    <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>Sign in</Button>\r\n                </form>\r\n                <Typography>\r\n                    <Link to=\"/register\" style={linkstyle}>\r\n                        Sign up\r\n                    </Link>\r\n                </Typography>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\MainPage\\Main.js",["98","99"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './Main.scss';\r\nimport LeftPage from '../LeftPage/LeftPage';\r\nimport { getUser } from '../../api/actions/main_action';\r\nimport { getFriendList } from '../../api/actions/friend_action';\r\n\r\nconst Main = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [UserData, setUserData] = useState(\"\");\r\n    // const [ListFriend, setListFriend] = useState(\"\");\r\n\r\n    const onClickHandler = () =>{\r\n        axios.get('/api/users/logout')\r\n        .then(response => {\r\n            if(response.data.success){\r\n                props.history.push(\"/\");\r\n            }else{\r\n                alert('로그아웃 하는데 실패 했습니다.');\r\n            }\r\n        })\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        dispatch(getUser())\r\n        .then(response => {\r\n            setUserData(response.payload);\r\n\r\n            // let body = {\r\n            //     userId : response.payload.userId\r\n            // }\r\n\r\n            // dispatch(getFriendList(body))\r\n            // .then(response => {\r\n            //     setListFriend(response.payload);\r\n            //     console.log(response.payload)\r\n            // })\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"box\">\r\n                <LeftPage props={props} UserData={UserData}/>\r\n                {/* <div className=\"right_side\">\r\n                    dddd\r\n                </div> */}\r\n                <button onClick={onClickHandler}>\r\n                        로그아웃\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(Main);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\auth\\auth.js",["100","101"],"import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { auth } from '../actions/user_action';\r\n\r\nexport default function(SpecificComponent, option, adminRoute = null){\r\n\r\n    // option\r\n    // null => 아무나 출입이 가능한 페이지\r\n    // true => 로그인한 유저만 출입이 가능한 페이지\r\n    // false => 로그인한 유저는 출입 불가능한 페이지\r\n\r\n    // adminRoute는 true가 되면 어드민 유저만 가능하다.\r\n    \r\n    function AuthenticationCheck(props){\r\n        \r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(()=>{\r\n            \r\n            dispatch(auth()).then(response => {\r\n\r\n                // 로그인 하지 않은 상태\r\n                if(!response.payload.isAuth){\r\n                    if(option){\r\n                        props.history.push('/');\r\n                    }\r\n                }else{\r\n                    // 로그인 한 상태\r\n                    if(adminRoute && !response.payload.isAdmin){\r\n                        props.history.push('/main')\r\n                    }else{\r\n                        if(option === false){\r\n                            props.history.push('/main');\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }, [])\r\n        return (\r\n            <SpecificComponent />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\RegisterPage.js",["102"],"import React, { useState, useEffect } from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport { registerUser, checkId, checkNick, checkPhone } from '../api/actions/user_action';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Grid, Paper, Avatar, FormControlLabel, Checkbox, TextField, Button, Typography } from '@material-ui/core';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [UserId, setUserId] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n    const [ConfirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [NickName, setNickName] = useState(\"\");\r\n    const [Name, setName] = useState(\"\");\r\n    const [Phone, setPhone] = useState(\"\");\r\n    const [checkPassword, setcheckPassword] = useState(true);\r\n    const [NoticeId, setNoticeId] = useState(\"\");\r\n    const [NoticeNick, setNoticeNick] = useState(\"\");\r\n    const [NoticePhone, setNoticePhone] = useState(\"\");\r\n    // const [Checking, setChecking] = useState(0);\r\n    const [isCheckedId, setisCheckedId] = useState(false);\r\n    const [isCheckedNick, setisCheckedNick] = useState(false);\r\n    const [isCheckedPhone, setisCheckedPhone] = useState(false);\r\n    const [isCheckedPassword, setisCheckedPassword] = useState(false);\r\n\r\n\r\n    const onUserIdHandler = (e) => {\r\n        setUserId(e.target.value);\r\n    }\r\n    const onPasswordHandler = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n    const onPasswordHandler2 = (e) => {\r\n        setConfirmPassword(e.target.value);\r\n    }\r\n    const onNickNameHandler = (e) => {\r\n        setNickName(e.target.value);\r\n    }\r\n    const onNameHandler = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n    const onPhoneHandler = (e) => {\r\n        const regex = /^[0-9\\b -]{0,13}$/;\r\n        if (regex.test(e.target.value)){\r\n            setPhone(e.target.value);\r\n        }\r\n    }\r\n    const onCheckIdHandler = (e) => {\r\n\r\n        e.preventDefault();\r\n        let body = {\r\n            userId : UserId,\r\n        }\r\n\r\n        dispatch(checkId(body))\r\n        .then(response => {\r\n            setNoticeId(response.payload.message);\r\n            if(response.payload.checkId){\r\n                setisCheckedId(true)\r\n            } else {\r\n                setisCheckedId(false)\r\n            }\r\n        })\r\n    }\r\n    const onCheckNick = (e) => {\r\n        \r\n        e.preventDefault();\r\n        let body = {\r\n            userNickName : NickName,\r\n        }\r\n\r\n        dispatch(checkNick(body))\r\n        .then(response => {\r\n            setNoticeNick(response.payload.message);\r\n            if(response.payload.checkNick){\r\n                setisCheckedNick(true)\r\n            } else {\r\n                setisCheckedNick(false)\r\n            }\r\n        })\r\n    }\r\n    const onCheckPhone = (e) => {\r\n        \r\n        e.preventDefault();\r\n        let body = {\r\n            userPhone : Phone,\r\n        }\r\n\r\n        dispatch(checkPhone(body))\r\n        .then(response => {\r\n            setNoticePhone(response.payload.message);\r\n            if(response.payload.checkPhone){\r\n                setisCheckedPhone(true)\r\n            } else {\r\n                setisCheckedPhone(false)\r\n            }\r\n        })\r\n    }\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        let body = {\r\n            userId : UserId,\r\n            password : Password,\r\n            userNickName : NickName,\r\n            userName : Name,\r\n            userPhone : Phone,\r\n        }\r\n        dispatch(registerUser(body))\r\n        .then(response => {\r\n            if(response.payload.success){\r\n                props.history.push(\"/\");\r\n            }else{\r\n                alert(\"Failed to sign up\");\r\n            }\r\n        })\r\n    }\r\n\r\n    const paperStyle ={\r\n        padding : 20,\r\n        height : '650px',\r\n        width : 280,\r\n        margin : '20px auto',\r\n        // textAlign : 'center',\r\n        position: 'absolute',\r\n        top:'50%',\r\n        left:'50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n    const hrstyle ={\r\n        backgroundColor : 'gray',\r\n        height : '1px'\r\n    }\r\n    const divstyle1 ={\r\n        paddingLeft: '12.5px',\r\n        marginTop: '20px',\r\n    }\r\n    const divstyle2 ={\r\n        marginTop: '10px',\r\n        fontSize: '12px',\r\n    }\r\n    const textStyle1 ={\r\n        width : 175,\r\n        marginBottom : '10px',\r\n    }\r\n    const textStyle2 ={\r\n        width : 250,\r\n        marginBottom : '10px',\r\n    }\r\n    const btnstyle ={\r\n        margin : '18px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#845460'\r\n    }\r\n    const btnstyle2 ={\r\n        margin : '8px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#f6bd63',\r\n        width : '80px',\r\n        height : '40px',\r\n        borderRadius : '15px 15px',\r\n        border : 'none',\r\n        cursor : 'pointer',\r\n    }\r\n    const disablestyle ={\r\n        margin : '18px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : 'rgb(189, 189, 189)',\r\n    }\r\n    const pstyle ={\r\n        margin : '0 0',\r\n        fontWeight : 'bolder',\r\n        fontSize : '10px',\r\n    }\r\n    const linkstyle ={\r\n        color : 'inherit',\r\n    }\r\n    const spanstyle ={\r\n        fontSize : '25px',\r\n        fontWeight : 'bolder',\r\n        marginLeft : '70px',\r\n    }\r\n\r\n    useEffect(()=>{\r\n        // if(Password !== ConfirmPassword){\r\n        //     setcheckPassword(false);\r\n        // }else{\r\n        //     setcheckPassword(true);\r\n        // }\r\n        if(Password.length === 0 && ConfirmPassword.length === 0){\r\n            setcheckPassword(true);\r\n            setisCheckedPassword(false);\r\n        }else if(Password.length < 5 && ConfirmPassword.length < 5){\r\n            setcheckPassword(false);\r\n            setisCheckedPassword(false);\r\n        }else if(Password !== ConfirmPassword){\r\n            setcheckPassword(false);\r\n            setisCheckedPassword(false);\r\n        }else{\r\n            setcheckPassword(true);\r\n            setisCheckedPassword(true);\r\n        }\r\n    },[Password, ConfirmPassword])\r\n\r\n    useEffect(()=>{\r\n        if(Phone.length === 11) {\r\n            setPhone(Phone.replace(/-/g,'').replace(/(\\d{3})(\\d{4})(\\d{4})/, '$1-$2-$3'));\r\n        }\r\n    }, [Phone]);\r\n\r\n    return (\r\n        <Grid>\r\n            <Paper elevation={10} style={paperStyle} >\r\n                <Grid align=\"left\">\r\n                    <Typography>\r\n                        <Link to=\"/\" style={linkstyle}>\r\n                            <ArrowBackIosIcon />\r\n                        </Link>\r\n                        <span style={spanstyle}>회원가입</span>\r\n                    </Typography>\r\n                </Grid>\r\n                <hr style={hrstyle}/>\r\n                <form onSubmit={onSubmitHandler}>\r\n                    <div style={divstyle1}>\r\n                        <TextField style={textStyle1} id=\"standard-basic\" label=\"아이디\" type=\"text\" value={UserId} onChange={onUserIdHandler} />\r\n                        <button type=\"submit\" style={btnstyle2} onClick={onCheckIdHandler}>중복확인</button>\r\n                        {NoticeId.length !== 0 ? <p style={pstyle}>{NoticeId}</p> : null}\r\n                        {checkPassword === true ? <TextField style={textStyle2} id=\"standard-basic\" label=\"비밀번호\" type=\"password\" value={Password} onChange={onPasswordHandler} /> : <TextField error id=\"standard-error-helper-text\" label=\"비밀번호\" type=\"password\" value={Password} onChange={onPasswordHandler} helperText=\"Incorrect entry.\" />}\r\n                        {checkPassword === true ? <TextField style={textStyle2} id=\"standard-basic\" label=\"비밀번호확인\" type=\"password\" value={ConfirmPassword} onChange={onPasswordHandler2} /> : <TextField error id=\"standard-error-helper-text\" label=\"비밀번호확인\" type=\"password\" value={ConfirmPassword} onChange={onPasswordHandler2} helperText=\"최소 5자리 이상 조합\"/>}\r\n                        <TextField style={textStyle1} id=\"standard-basic\" label=\"닉네임\" type=\"text\" value={NickName} onChange={onNickNameHandler} />\r\n                        <button type=\"submit\" style={btnstyle2} onClick={onCheckNick}>중복확인</button>\r\n                        {NoticeNick.length !== 0 ? <p style={pstyle}>{NoticeNick}</p> : null}\r\n                        <TextField style={textStyle2} id=\"standard-basic\" label=\"이름\" type=\"text\" value={Name} onChange={onNameHandler} />\r\n                        <TextField style={textStyle1} id=\"standard-basic\" label=\"휴대폰번호\" type=\"text\" value={Phone} onChange={onPhoneHandler} />\r\n                        <button type=\"submit\" style={btnstyle2} onClick={onCheckPhone}>중복확인</button>\r\n                        {NoticePhone.length !== 0 ? <p style={pstyle}>{NoticePhone}</p> : null}\r\n\r\n                        <div style={divstyle2}>\r\n                            {/* <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                // label=\"모두 동의합니다\"\r\n                            />\r\n                            모두 동의합니다.<br/> */}\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                        required\r\n                                    />\r\n                                }\r\n                                label=\"이용약관 동의\"\r\n                            />\r\n                            {/* 이용약관 동의<br/> */}\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                        required\r\n                                    />\r\n                                }\r\n                                label=\"개인정보 취급방침 동의\"\r\n                            />\r\n                            {/* 개인정보 취급방침 동의<br/> */}\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                        required\r\n                                    />\r\n                                }\r\n                                label=\"마케팅 정보 수신 동의\"\r\n                            />\r\n                            {/* 마케팅 정보 수신 동의<br/> */}\r\n                        </div>\r\n                    </div>\r\n                    {/* {Checking >= 4 ? <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>Sign up</Button> : <Button disabled style={disablestyle} variant=\"contained\" fullWidth>Sign up</Button>} */}\r\n                    {isCheckedId && isCheckedNick && isCheckedPhone && isCheckedPassword ? <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>Sign up</Button> : <Button disabled style={disablestyle} variant=\"contained\" fullWidth>Sign up</Button>}\r\n                    \r\n                </form>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\user_reducer.js",["103"],"const LOGIN_USER = \"login_user\";\r\nconst REGISTER_USER = \"register_user\";\r\nconst AUTH_USER = \"auth_user\";\r\nconst CHECK_ID = 'checkid_user';\r\nconst CHECK_NICK = 'checknick_user';\r\nconst GET_USER = \"get_user\";\r\nconst CHECK_PHONE = 'checkphone_user';\r\n\r\nexport default function(state={}, action){\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return { ...state, loginSuccess : action.payload };\r\n        case REGISTER_USER:\r\n            return {...state, register : action.payload };\r\n        case AUTH_USER:\r\n            return {...state, userData : action.payload };\r\n        case CHECK_ID:\r\n            return {...state, chekckId : action.payload};\r\n        case CHECK_NICK:\r\n            return {...state, checkNick : action.payload};    \r\n        case GET_USER:\r\n            return {...state, userData : action.payload};\r\n        case CHECK_PHONE:\r\n            return {...state, checkPhone : action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\main_action.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\user_action.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\LeftPage.js",["104","105"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\FriendList.js",["106","107"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\ChatList\\ChatList.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\PlusFriend.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\MyProfile\\MyProfile.js",["108","109"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\Title\\LeftTitle.js",["110"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\SearchFriend.js",["111"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\friend_reducer.js",["112"],"const SEARCH_USER = \"search_user\";\r\nconst ADD_USER = \"add_user\";\r\nconst SHOW_FRIEND = 'show_friend';\r\n\r\nexport default function(state={}, action){\r\n    switch (action.type) {\r\n        case SEARCH_USER:\r\n            return {...state, friend : action.payload}\r\n        case ADD_USER:\r\n            return {...state, plus : action.payload}\r\n        case SHOW_FRIEND:\r\n            return {...state, Myfriend : action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\friend_action.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\ShowFriend\\ShowFriend.js",["113"],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":6,"column":31,"nodeType":"120","messageId":"121","endLine":6,"endColumn":40},{"ruleId":"122","severity":1,"message":"123","line":100,"column":21,"nodeType":"124","endLine":100,"endColumn":72},{"ruleId":"122","severity":1,"message":"123","line":101,"column":50,"nodeType":"124","endLine":101,"endColumn":103},{"ruleId":"118","severity":1,"message":"125","line":8,"column":10,"nodeType":"120","messageId":"121","endLine":8,"endColumn":23},{"ruleId":"126","severity":1,"message":"127","line":43,"column":7,"nodeType":"128","endLine":43,"endColumn":9,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":5,"column":1,"nodeType":"132","endLine":44,"endColumn":2},{"ruleId":"126","severity":1,"message":"133","line":38,"column":12,"nodeType":"128","endLine":38,"endColumn":14,"suggestions":"134"},{"ruleId":"118","severity":1,"message":"135","line":5,"column":23,"nodeType":"120","messageId":"121","endLine":5,"endColumn":29},{"ruleId":"130","severity":1,"message":"131","line":9,"column":1,"nodeType":"132","endLine":28,"endColumn":2},{"ruleId":"118","severity":1,"message":"136","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":25},{"ruleId":"118","severity":1,"message":"137","line":2,"column":31,"nodeType":"120","messageId":"121","endLine":2,"endColumn":36},{"ruleId":"126","severity":1,"message":"138","line":70,"column":7,"nodeType":"128","endLine":70,"endColumn":19,"suggestions":"139"},{"ruleId":"126","severity":1,"message":"127","line":86,"column":8,"nodeType":"128","endLine":86,"endColumn":20,"suggestions":"140"},{"ruleId":"118","severity":1,"message":"141","line":2,"column":8,"nodeType":"120","messageId":"121","endLine":2,"endColumn":13},{"ruleId":"122","severity":1,"message":"123","line":9,"column":13,"nodeType":"124","endLine":9,"endColumn":41},{"ruleId":"118","severity":1,"message":"141","line":1,"column":8,"nodeType":"120","messageId":"121","endLine":1,"endColumn":13},{"ruleId":"122","severity":1,"message":"123","line":17,"column":37,"nodeType":"124","endLine":17,"endColumn":65},{"ruleId":"130","severity":1,"message":"131","line":5,"column":1,"nodeType":"132","endLine":16,"endColumn":2},{"ruleId":"122","severity":1,"message":"123","line":12,"column":29,"nodeType":"124","endLine":12,"endColumn":61},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'getFriendList' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["144"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.",["145"],"'Avatar' is defined but never used.","'useState' is defined but never used.","'Route' is defined but never used.","React Hook useEffect has missing dependencies: 'UserData.userId' and 'dispatch'. Either include them or remove the dependency array.",["146"],["147"],"'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},"Update the dependencies array to be: [dispatch]",{"range":"156","text":"157"},"Update the dependencies array to be: [dispatch, props.history]",{"range":"158","text":"159"},"Update the dependencies array to be: [ClickEvent, UserData.userId, dispatch]",{"range":"160","text":"161"},"Update the dependencies array to be: [InputText2, dispatch]",{"range":"162","text":"163"},[1287,1289],"[dispatch]",[1160,1162],"[dispatch, props.history]",[2169,2181],"[ClickEvent, UserData.userId, dispatch]",[2536,2548],"[InputText2, dispatch]"]
=======
[{"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\index.js":"1","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\reportWebVitals.js":"2","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\App.js":"3","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\api\\reducers\\index.js":"4","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\MainPage\\Main.js":"5","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\api\\auth\\auth.js":"6","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LoginPage.js":"7","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\RegisterPage.js":"8","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\api\\reducers\\friend_reducer.js":"9","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\api\\reducers\\user_reducer.js":"10","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\api\\actions\\main_action.js":"11","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\LeftPage.js":"12","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\api\\actions\\user_action.js":"13","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\FriendList\\FriendList.js":"14","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\ChatList\\ChatList.js":"15","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\api\\actions\\friend_action.js":"16","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\FriendList\\Title\\LeftTitle.js":"17","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\FriendList\\MyProfile\\MyProfile.js":"18","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\PlusFriend.js":"19","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\SearchFriend.js":"20","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\UpdateUser\\UpdateUser.js":"21","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\FriendList\\ShowFriend\\ShowFriend.js":"22"},{"size":1062,"mtime":1619430972667,"results":"23","hashOfConfig":"24"},{"size":375,"mtime":1619430972668,"results":"25","hashOfConfig":"24"},{"size":665,"mtime":1619430972646,"results":"26","hashOfConfig":"24"},{"size":215,"mtime":1619430972654,"results":"27","hashOfConfig":"24"},{"size":1773,"mtime":1619493902408,"results":"28","hashOfConfig":"24"},{"size":1417,"mtime":1619430972652,"results":"29","hashOfConfig":"24"},{"size":3913,"mtime":1619430972662,"results":"30","hashOfConfig":"24"},{"size":11771,"mtime":1619430972666,"results":"31","hashOfConfig":"24"},{"size":475,"mtime":1619493902393,"results":"32","hashOfConfig":"24"},{"size":1108,"mtime":1619493823180,"results":"33","hashOfConfig":"24"},{"size":266,"mtime":1619430972649,"results":"34","hashOfConfig":"24"},{"size":1613,"mtime":1619493903912,"results":"35","hashOfConfig":"24"},{"size":1898,"mtime":1619493823176,"results":"36","hashOfConfig":"24"},{"size":3708,"mtime":1619493902395,"results":"37","hashOfConfig":"24"},{"size":157,"mtime":1619430972656,"results":"38","hashOfConfig":"24"},{"size":837,"mtime":1619493902391,"results":"39","hashOfConfig":"24"},{"size":1571,"mtime":1619430972661,"results":"40","hashOfConfig":"24"},{"size":583,"mtime":1619493823185,"results":"41","hashOfConfig":"24"},{"size":427,"mtime":1619493902397,"results":"42","hashOfConfig":"24"},{"size":2230,"mtime":1619493902399,"results":"43","hashOfConfig":"24"},{"size":2444,"mtime":1619493823192,"results":"44","hashOfConfig":"24"},{"size":965,"mtime":1619493902407,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"6bq125",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\index.js",[],["95","96"],"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\reportWebVitals.js",[],"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\App.js",[],"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\api\\reducers\\index.js",[],"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\MainPage\\Main.js",["97","98"],"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\api\\auth\\auth.js",["99","100"],"import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { auth } from '../actions/user_action';\r\n\r\nexport default function(SpecificComponent, option, adminRoute = null){\r\n\r\n    // option\r\n    // null => 아무나 출입이 가능한 페이지\r\n    // true => 로그인한 유저만 출입이 가능한 페이지\r\n    // false => 로그인한 유저는 출입 불가능한 페이지\r\n\r\n    // adminRoute는 true가 되면 어드민 유저만 가능하다.\r\n    \r\n    function AuthenticationCheck(props){\r\n        \r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(()=>{\r\n            \r\n            dispatch(auth()).then(response => {\r\n\r\n                // 로그인 하지 않은 상태\r\n                if(!response.payload.isAuth){\r\n                    if(option){\r\n                        props.history.push('/');\r\n                    }\r\n                }else{\r\n                    // 로그인 한 상태\r\n                    if(adminRoute && !response.payload.isAdmin){\r\n                        props.history.push('/main')\r\n                    }else{\r\n                        if(option === false){\r\n                            props.history.push('/main');\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }, [])\r\n        return (\r\n            <SpecificComponent />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LoginPage.js",["101","102","103"],"import React, {useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport { loginUser } from '../api/actions/user_action';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { Grid, Paper, Avatar, TextField, Button, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    customTextField: {\r\n      \"& input::placeholder\": {\r\n        color : '#fff',\r\n        fontWeight : 'bolder'\r\n      }\r\n    }\r\n})\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [UserId, setUserId] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n\r\n    const onUserIdHandler = (e) => {\r\n        setUserId(e.target.value);\r\n    }\r\n    const onPasswordHandler = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        let body = {\r\n            userId : UserId,\r\n            password : Password,\r\n        }\r\n\r\n        dispatch(loginUser(body))\r\n        .then(response => {\r\n            if(response.payload.loginSuccess){\r\n                props.history.push('/main');\r\n            }else{\r\n                alert('Error');\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const paperStyle = {\r\n        padding : 20,\r\n        height : '568px',\r\n        width : 280,\r\n        margin : '0 auto',\r\n        textAlign : 'center',\r\n        background : '#f6bd63',\r\n        position: 'absolute',\r\n        top:'50%',\r\n        left:'50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    }\r\n    const avatarStyle = {\r\n        width : '230px',\r\n        height : '90px',\r\n        margin: '10px 0 30px',\r\n        background : '#f6bd63',\r\n    }\r\n    const btnstyle = {\r\n        margin : '8px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#845460'\r\n    }\r\n    const imgstyle ={\r\n        width : '100%',\r\n        height : '100%',\r\n    }\r\n    const logostyle ={\r\n        width: '200px',\r\n        marginTop: '50px',\r\n    }\r\n    const inputstyle ={\r\n        width : '90%',\r\n        margin : '0 auto',\r\n        height : '30px',\r\n        marginBottom : '20px',\r\n        background : '#855460',\r\n        color : '#fff'\r\n    }\r\n    const linkstyle ={\r\n        color : '#fff',\r\n        fontWeight : 'bolder',\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid>\r\n            <Paper elevation={10} style={paperStyle} classes={{root:classes.customTextField}}>\r\n                <Grid align=\"center\">\r\n                    <img src=\"/text_transparent.png\" style={logostyle}></img>\r\n                    <Avatar style={avatarStyle} ><img src=\"/gyeran_height_cut.png\" style={imgstyle} /></Avatar>\r\n\r\n                </Grid>\r\n                <form onSubmit={onSubmitHandler}>\r\n                    <input style={inputstyle} type=\"text\" label=\"UserId\" placeholder=\"Enter UserId\" value={UserId} onChange={onUserIdHandler} required/>\r\n                    <input style={inputstyle} type=\"password\" label=\"Password\" placeholder=\"Enter Password\" value={Password} onChange={onPasswordHandler} required/>\r\n                    {/* <FormControlLabel \r\n                        control={\r\n                            <Checkbox\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Remember Me\"\r\n                    /> */}\r\n                    <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>Sign in</Button>\r\n                </form>\r\n                <Typography>\r\n                    <Link to=\"/register\" style={linkstyle}>\r\n                        Sign up\r\n                    </Link>\r\n                </Typography>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\RegisterPage.js",["104"],"import React, { useState, useEffect } from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport { registerUser, checkId, checkNick, checkPhone } from '../api/actions/user_action';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Grid, Paper, Avatar, FormControlLabel, Checkbox, TextField, Button, Typography } from '@material-ui/core';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [UserId, setUserId] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n    const [ConfirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [NickName, setNickName] = useState(\"\");\r\n    const [Name, setName] = useState(\"\");\r\n    const [Phone, setPhone] = useState(\"\");\r\n    const [checkPassword, setcheckPassword] = useState(true);\r\n    const [NoticeId, setNoticeId] = useState(\"\");\r\n    const [NoticeNick, setNoticeNick] = useState(\"\");\r\n    const [NoticePhone, setNoticePhone] = useState(\"\");\r\n    // const [Checking, setChecking] = useState(0);\r\n    const [isCheckedId, setisCheckedId] = useState(false);\r\n    const [isCheckedNick, setisCheckedNick] = useState(false);\r\n    const [isCheckedPhone, setisCheckedPhone] = useState(false);\r\n    const [isCheckedPassword, setisCheckedPassword] = useState(false);\r\n\r\n\r\n    const onUserIdHandler = (e) => {\r\n        setUserId(e.target.value);\r\n    }\r\n    const onPasswordHandler = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n    const onPasswordHandler2 = (e) => {\r\n        setConfirmPassword(e.target.value);\r\n    }\r\n    const onNickNameHandler = (e) => {\r\n        setNickName(e.target.value);\r\n    }\r\n    const onNameHandler = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n    const onPhoneHandler = (e) => {\r\n        const regex = /^[0-9\\b -]{0,13}$/;\r\n        if (regex.test(e.target.value)){\r\n            setPhone(e.target.value);\r\n        }\r\n    }\r\n    const onCheckIdHandler = (e) => {\r\n\r\n        e.preventDefault();\r\n        let body = {\r\n            userId : UserId,\r\n        }\r\n\r\n        dispatch(checkId(body))\r\n        .then(response => {\r\n            setNoticeId(response.payload.message);\r\n            if(response.payload.checkId){\r\n                setisCheckedId(true)\r\n            } else {\r\n                setisCheckedId(false)\r\n            }\r\n        })\r\n    }\r\n    const onCheckNick = (e) => {\r\n        \r\n        e.preventDefault();\r\n        let body = {\r\n            userNickName : NickName,\r\n        }\r\n\r\n        dispatch(checkNick(body))\r\n        .then(response => {\r\n            setNoticeNick(response.payload.message);\r\n            if(response.payload.checkNick){\r\n                setisCheckedNick(true)\r\n            } else {\r\n                setisCheckedNick(false)\r\n            }\r\n        })\r\n    }\r\n    const onCheckPhone = (e) => {\r\n        \r\n        e.preventDefault();\r\n        let body = {\r\n            userPhone : Phone,\r\n        }\r\n\r\n        dispatch(checkPhone(body))\r\n        .then(response => {\r\n            setNoticePhone(response.payload.message);\r\n            if(response.payload.checkPhone){\r\n                setisCheckedPhone(true)\r\n            } else {\r\n                setisCheckedPhone(false)\r\n            }\r\n        })\r\n    }\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        let body = {\r\n            userId : UserId,\r\n            password : Password,\r\n            userNickName : NickName,\r\n            userName : Name,\r\n            userPhone : Phone,\r\n        }\r\n        dispatch(registerUser(body))\r\n        .then(response => {\r\n            if(response.payload.success){\r\n                props.history.push(\"/\");\r\n            }else{\r\n                alert(\"Failed to sign up\");\r\n            }\r\n        })\r\n    }\r\n\r\n    const paperStyle ={\r\n        padding : 20,\r\n        height : '650px',\r\n        width : 280,\r\n        margin : '20px auto',\r\n        // textAlign : 'center',\r\n        position: 'absolute',\r\n        top:'50%',\r\n        left:'50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n    const hrstyle ={\r\n        backgroundColor : 'gray',\r\n        height : '1px'\r\n    }\r\n    const divstyle1 ={\r\n        paddingLeft: '12.5px',\r\n        marginTop: '20px',\r\n    }\r\n    const divstyle2 ={\r\n        marginTop: '10px',\r\n        fontSize: '12px',\r\n    }\r\n    const textStyle1 ={\r\n        width : 175,\r\n        marginBottom : '10px',\r\n    }\r\n    const textStyle2 ={\r\n        width : 250,\r\n        marginBottom : '10px',\r\n    }\r\n    const btnstyle ={\r\n        margin : '18px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#845460'\r\n    }\r\n    const btnstyle2 ={\r\n        margin : '8px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#f6bd63',\r\n        width : '80px',\r\n        height : '40px',\r\n        borderRadius : '15px 15px',\r\n        border : 'none',\r\n        cursor : 'pointer',\r\n    }\r\n    const disablestyle ={\r\n        margin : '18px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : 'rgb(189, 189, 189)',\r\n    }\r\n    const pstyle ={\r\n        margin : '0 0',\r\n        fontWeight : 'bolder',\r\n        fontSize : '10px',\r\n    }\r\n    const linkstyle ={\r\n        color : 'inherit',\r\n    }\r\n    const spanstyle ={\r\n        fontSize : '25px',\r\n        fontWeight : 'bolder',\r\n        marginLeft : '70px',\r\n    }\r\n\r\n    useEffect(()=>{\r\n        // if(Password !== ConfirmPassword){\r\n        //     setcheckPassword(false);\r\n        // }else{\r\n        //     setcheckPassword(true);\r\n        // }\r\n        if(Password.length === 0 && ConfirmPassword.length === 0){\r\n            setcheckPassword(true);\r\n            setisCheckedPassword(false);\r\n        }else if(Password.length < 5 && ConfirmPassword.length < 5){\r\n            setcheckPassword(false);\r\n            setisCheckedPassword(false);\r\n        }else if(Password !== ConfirmPassword){\r\n            setcheckPassword(false);\r\n            setisCheckedPassword(false);\r\n        }else{\r\n            setcheckPassword(true);\r\n            setisCheckedPassword(true);\r\n        }\r\n    },[Password, ConfirmPassword])\r\n\r\n    useEffect(()=>{\r\n        if(Phone.length === 11) {\r\n            setPhone(Phone.replace(/-/g,'').replace(/(\\d{3})(\\d{4})(\\d{4})/, '$1-$2-$3'));\r\n        }\r\n    }, [Phone]);\r\n\r\n    return (\r\n        <Grid>\r\n            <Paper elevation={10} style={paperStyle} >\r\n                <Grid align=\"left\">\r\n                    <Typography>\r\n                        <Link to=\"/\" style={linkstyle}>\r\n                            <ArrowBackIosIcon />\r\n                        </Link>\r\n                        <span style={spanstyle}>회원가입</span>\r\n                    </Typography>\r\n                </Grid>\r\n                <hr style={hrstyle}/>\r\n                <form onSubmit={onSubmitHandler}>\r\n                    <div style={divstyle1}>\r\n                        <TextField style={textStyle1} id=\"standard-basic\" label=\"아이디\" type=\"text\" value={UserId} onChange={onUserIdHandler} />\r\n                        <button type=\"submit\" style={btnstyle2} onClick={onCheckIdHandler}>중복확인</button>\r\n                        {NoticeId.length !== 0 ? <p style={pstyle}>{NoticeId}</p> : null}\r\n                        {checkPassword === true ? <TextField style={textStyle2} id=\"standard-basic\" label=\"비밀번호\" type=\"password\" value={Password} onChange={onPasswordHandler} /> : <TextField error id=\"standard-error-helper-text\" label=\"비밀번호\" type=\"password\" value={Password} onChange={onPasswordHandler} helperText=\"Incorrect entry.\" />}\r\n                        {checkPassword === true ? <TextField style={textStyle2} id=\"standard-basic\" label=\"비밀번호확인\" type=\"password\" value={ConfirmPassword} onChange={onPasswordHandler2} /> : <TextField error id=\"standard-error-helper-text\" label=\"비밀번호확인\" type=\"password\" value={ConfirmPassword} onChange={onPasswordHandler2} helperText=\"최소 5자리 이상 조합\"/>}\r\n                        <TextField style={textStyle1} id=\"standard-basic\" label=\"닉네임\" type=\"text\" value={NickName} onChange={onNickNameHandler} />\r\n                        <button type=\"submit\" style={btnstyle2} onClick={onCheckNick}>중복확인</button>\r\n                        {NoticeNick.length !== 0 ? <p style={pstyle}>{NoticeNick}</p> : null}\r\n                        <TextField style={textStyle2} id=\"standard-basic\" label=\"이름\" type=\"text\" value={Name} onChange={onNameHandler} />\r\n                        <TextField style={textStyle1} id=\"standard-basic\" label=\"휴대폰번호\" type=\"text\" value={Phone} onChange={onPhoneHandler} />\r\n                        <button type=\"submit\" style={btnstyle2} onClick={onCheckPhone}>중복확인</button>\r\n                        {NoticePhone.length !== 0 ? <p style={pstyle}>{NoticePhone}</p> : null}\r\n\r\n                        <div style={divstyle2}>\r\n                            {/* <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                // label=\"모두 동의합니다\"\r\n                            />\r\n                            모두 동의합니다.<br/> */}\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                        required\r\n                                    />\r\n                                }\r\n                                label=\"이용약관 동의\"\r\n                            />\r\n                            {/* 이용약관 동의<br/> */}\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                        required\r\n                                    />\r\n                                }\r\n                                label=\"개인정보 취급방침 동의\"\r\n                            />\r\n                            {/* 개인정보 취급방침 동의<br/> */}\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                        required\r\n                                    />\r\n                                }\r\n                                label=\"마케팅 정보 수신 동의\"\r\n                            />\r\n                            {/* 마케팅 정보 수신 동의<br/> */}\r\n                        </div>\r\n                    </div>\r\n                    {/* {Checking >= 4 ? <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>Sign up</Button> : <Button disabled style={disablestyle} variant=\"contained\" fullWidth>Sign up</Button>} */}\r\n                    {isCheckedId && isCheckedNick && isCheckedPhone && isCheckedPassword ? <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>Sign up</Button> : <Button disabled style={disablestyle} variant=\"contained\" fullWidth>Sign up</Button>}\r\n                    \r\n                </form>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\api\\reducers\\friend_reducer.js",["105"],"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\api\\reducers\\user_reducer.js",["106"],"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\api\\actions\\main_action.js",[],"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\LeftPage.js",["107","108"],"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\api\\actions\\user_action.js",[],"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\FriendList\\FriendList.js",["109","110"],"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\ChatList\\ChatList.js",[],"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\api\\actions\\friend_action.js",[],"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\FriendList\\Title\\LeftTitle.js",["111"],"import axios from 'axios';\r\nimport React, { useRef, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../../../MainPage/Main.scss';\r\nimport {\r\n    SearchOutlined,\r\n    UserAddOutlined\r\n} from '@ant-design/icons';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst LeftTitle = ({\r\n    Search,\r\n    Friend,\r\n    FriendClick,\r\n    InputText,\r\n    InputText2,\r\n    onToggle,\r\n    onToggle2,\r\n    onInputTextHandler,\r\n    onInputTextHandler2\r\n}) => {\r\n\r\n    const inputEl = useRef(null);\r\n    const inputEl2 = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if(Search) inputEl.current.focus();\r\n        if(Friend) inputEl2.current.focus();\r\n        if(FriendClick) inputEl2.current.focus();\r\n    }, [Search, Friend, FriendClick])\r\n\r\n    return (\r\n        <div className=\"left_title\">\r\n            <div>친구</div>\r\n            <div className=\"search_friend\">\r\n                {Search ? <div className=\"input_box\"><input type=\"text\" placeholder=\"친구검색\" value={InputText} ref={inputEl} onChange={onInputTextHandler} /><SearchIcon className=\"search_icon\" /></div> : null}\r\n                {Friend || FriendClick ? <div className=\"input_box\"><input type=\"text\" placeholder=\"친구추가\" value={InputText2} ref={inputEl2} onChange={onInputTextHandler2}/><SearchIcon className=\"search_icon\" /></div> : null}\r\n                <SearchOutlined onClick={onToggle}/>\r\n                <UserAddOutlined onClick={onToggle2} className=\"add_friend\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(LeftTitle);\r\n","D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\FriendList\\MyProfile\\MyProfile.js",["112","113"],"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\PlusFriend.js",[],"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\SearchFriend.js",["114"],"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\UpdateUser\\UpdateUser.js",["115","116"],"D:\\Kang Yejin\\gyerantalk.io\\frontend\\src\\components\\LeftPage\\FriendList\\ShowFriend\\ShowFriend.js",["117"],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":8,"column":10,"nodeType":"124","messageId":"125","endLine":8,"endColumn":23},{"ruleId":"126","severity":1,"message":"127","line":43,"column":7,"nodeType":"128","endLine":43,"endColumn":9,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":5,"column":1,"nodeType":"132","endLine":44,"endColumn":2},{"ruleId":"126","severity":1,"message":"133","line":38,"column":12,"nodeType":"128","endLine":38,"endColumn":14,"suggestions":"134"},{"ruleId":"122","severity":1,"message":"135","line":6,"column":31,"nodeType":"124","messageId":"125","endLine":6,"endColumn":40},{"ruleId":"136","severity":1,"message":"137","line":100,"column":21,"nodeType":"138","endLine":100,"endColumn":72},{"ruleId":"136","severity":1,"message":"137","line":101,"column":50,"nodeType":"138","endLine":101,"endColumn":103},{"ruleId":"122","severity":1,"message":"139","line":5,"column":23,"nodeType":"124","messageId":"125","endLine":5,"endColumn":29},{"ruleId":"130","severity":1,"message":"131","line":5,"column":1,"nodeType":"132","endLine":16,"endColumn":2},{"ruleId":"130","severity":1,"message":"131","line":10,"column":1,"nodeType":"132","endLine":31,"endColumn":2},{"ruleId":"122","severity":1,"message":"140","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":25},{"ruleId":"122","severity":1,"message":"141","line":2,"column":31,"nodeType":"124","messageId":"125","endLine":2,"endColumn":36},{"ruleId":"126","severity":1,"message":"142","line":70,"column":7,"nodeType":"128","endLine":70,"endColumn":19,"suggestions":"143"},{"ruleId":"126","severity":1,"message":"127","line":86,"column":8,"nodeType":"128","endLine":86,"endColumn":20,"suggestions":"144"},{"ruleId":"122","severity":1,"message":"145","line":1,"column":8,"nodeType":"124","messageId":"125","endLine":1,"endColumn":13},{"ruleId":"122","severity":1,"message":"145","line":2,"column":8,"nodeType":"124","messageId":"125","endLine":2,"endColumn":13},{"ruleId":"136","severity":1,"message":"137","line":9,"column":17,"nodeType":"138","endLine":9,"endColumn":45},{"ruleId":"136","severity":1,"message":"137","line":17,"column":37,"nodeType":"138","endLine":17,"endColumn":65},{"ruleId":"122","severity":1,"message":"146","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":23},{"ruleId":"136","severity":1,"message":"137","line":58,"column":17,"nodeType":"138","endLine":58,"endColumn":45},{"ruleId":"136","severity":1,"message":"137","line":12,"column":29,"nodeType":"138","endLine":12,"endColumn":61},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'getFriendList' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["149"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.",["150"],"'TextField' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Avatar' is defined but never used.","'useState' is defined but never used.","'Route' is defined but never used.","React Hook useEffect has missing dependencies: 'UserData.userId' and 'dispatch'. Either include them or remove the dependency array.",["151"],["152"],"'axios' is defined but never used.","'useRef' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [dispatch]",{"range":"161","text":"162"},"Update the dependencies array to be: [dispatch, props.history]",{"range":"163","text":"164"},"Update the dependencies array to be: [ClickEvent, UserData.userId, dispatch]",{"range":"165","text":"166"},"Update the dependencies array to be: [InputText2, dispatch]",{"range":"167","text":"168"},[1287,1289],"[dispatch]",[1160,1162],"[dispatch, props.history]",[2169,2181],"[ClickEvent, UserData.userId, dispatch]",[2536,2548],"[InputText2, dispatch]"]
>>>>>>> origin/yejin
