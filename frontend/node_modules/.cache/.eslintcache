[{"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\index.js":"1","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\App.js":"3","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\index.js":"4","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LoginPage.js":"5","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\RegisterPage.js":"6","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\MainPage\\Main.js":"7","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\auth\\auth.js":"8","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\friend_reducer.js":"9","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\main_action.js":"10","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\friend_action.js":"11","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\user_reducer.js":"12","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\LeftPage.js":"13","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\user_action.js":"14","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\FriendList.js":"15","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\ChatList\\ChatList.js":"16","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Internet.js":"17","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\UpdateUser\\UpdateUser.js":"18","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\ShowFriend\\ShowFriend.js":"19","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\SearchFriend.js":"20","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\PlusFriend.js":"21","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\Title\\LeftTitle.js":"22","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\MyProfile\\MyProfile.js":"23","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\IntTitle\\IntTitle.js":"24","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\News\\News.js":"25","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\Shop.js":"26"},{"size":1062,"mtime":1619226324989,"results":"27","hashOfConfig":"28"},{"size":375,"mtime":1619140719705,"results":"29","hashOfConfig":"28"},{"size":667,"mtime":1619508409339,"results":"30","hashOfConfig":"28"},{"size":215,"mtime":1619415314231,"results":"31","hashOfConfig":"28"},{"size":3913,"mtime":1619278838018,"results":"32","hashOfConfig":"28"},{"size":11771,"mtime":1619414164914,"results":"33","hashOfConfig":"28"},{"size":1465,"mtime":1619505622425,"results":"34","hashOfConfig":"28"},{"size":1439,"mtime":1619508695972,"results":"35","hashOfConfig":"28"},{"size":475,"mtime":1619486142356,"results":"36","hashOfConfig":"28"},{"size":266,"mtime":1619357976694,"results":"37","hashOfConfig":"28"},{"size":837,"mtime":1619486142355,"results":"38","hashOfConfig":"28"},{"size":1108,"mtime":1619494392574,"results":"39","hashOfConfig":"28"},{"size":1865,"mtime":1619508893622,"results":"40","hashOfConfig":"28"},{"size":1898,"mtime":1619494392574,"results":"41","hashOfConfig":"28"},{"size":3810,"mtime":1619494448295,"results":"42","hashOfConfig":"28"},{"size":157,"mtime":1619345317079,"results":"43","hashOfConfig":"28"},{"size":501,"mtime":1619508342057,"results":"44","hashOfConfig":"28"},{"size":3361,"mtime":1619508309147,"results":"45","hashOfConfig":"28"},{"size":1017,"mtime":1619494448296,"results":"46","hashOfConfig":"28"},{"size":1756,"mtime":1619508799858,"results":"47","hashOfConfig":"28"},{"size":439,"mtime":1619494448295,"results":"48","hashOfConfig":"28"},{"size":1583,"mtime":1619494448297,"results":"49","hashOfConfig":"28"},{"size":597,"mtime":1619494468457,"results":"50","hashOfConfig":"28"},{"size":610,"mtime":1619505622422,"results":"51","hashOfConfig":"28"},{"size":220,"mtime":1619505622423,"results":"52","hashOfConfig":"28"},{"size":220,"mtime":1619505622424,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"c8e9fu",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\index.js",[],["116","117"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\App.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\index.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LoginPage.js",["118","119","120"],"import React, {useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport { loginUser } from '../api/actions/user_action';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { Grid, Paper, Avatar, TextField, Button, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    customTextField: {\r\n      \"& input::placeholder\": {\r\n        color : '#fff',\r\n        fontWeight : 'bolder'\r\n      }\r\n    }\r\n})\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [UserId, setUserId] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n\r\n    const onUserIdHandler = (e) => {\r\n        setUserId(e.target.value);\r\n    }\r\n    const onPasswordHandler = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        let body = {\r\n            userId : UserId,\r\n            password : Password,\r\n        }\r\n\r\n        dispatch(loginUser(body))\r\n        .then(response => {\r\n            if(response.payload.loginSuccess){\r\n                props.history.push('/main');\r\n            }else{\r\n                alert('Error');\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const paperStyle = {\r\n        padding : 20,\r\n        height : '568px',\r\n        width : 280,\r\n        margin : '0 auto',\r\n        textAlign : 'center',\r\n        background : '#f6bd63',\r\n        position: 'absolute',\r\n        top:'50%',\r\n        left:'50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    }\r\n    const avatarStyle = {\r\n        width : '230px',\r\n        height : '90px',\r\n        margin: '10px 0 30px',\r\n        background : '#f6bd63',\r\n    }\r\n    const btnstyle = {\r\n        margin : '8px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#845460'\r\n    }\r\n    const imgstyle ={\r\n        width : '100%',\r\n        height : '100%',\r\n    }\r\n    const logostyle ={\r\n        width: '200px',\r\n        marginTop: '50px',\r\n    }\r\n    const inputstyle ={\r\n        width : '90%',\r\n        margin : '0 auto',\r\n        height : '30px',\r\n        marginBottom : '20px',\r\n        background : '#855460',\r\n        color : '#fff'\r\n    }\r\n    const linkstyle ={\r\n        color : '#fff',\r\n        fontWeight : 'bolder',\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid>\r\n            <Paper elevation={10} style={paperStyle} classes={{root:classes.customTextField}}>\r\n                <Grid align=\"center\">\r\n                    <img src=\"/text_transparent.png\" style={logostyle}></img>\r\n                    <Avatar style={avatarStyle} ><img src=\"/gyeran_height_cut.png\" style={imgstyle} /></Avatar>\r\n\r\n                </Grid>\r\n                <form onSubmit={onSubmitHandler}>\r\n                    <input style={inputstyle} type=\"text\" label=\"UserId\" placeholder=\"Enter UserId\" value={UserId} onChange={onUserIdHandler} required/>\r\n                    <input style={inputstyle} type=\"password\" label=\"Password\" placeholder=\"Enter Password\" value={Password} onChange={onPasswordHandler} required/>\r\n                    {/* <FormControlLabel \r\n                        control={\r\n                            <Checkbox\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Remember Me\"\r\n                    /> */}\r\n                    <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>Sign in</Button>\r\n                </form>\r\n                <Typography>\r\n                    <Link to=\"/register\" style={linkstyle}>\r\n                        Sign up\r\n                    </Link>\r\n                </Typography>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\RegisterPage.js",["121"],"import React, { useState, useEffect } from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport { registerUser, checkId, checkNick, checkPhone } from '../api/actions/user_action';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Grid, Paper, Avatar, FormControlLabel, Checkbox, TextField, Button, Typography } from '@material-ui/core';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [UserId, setUserId] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n    const [ConfirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [NickName, setNickName] = useState(\"\");\r\n    const [Name, setName] = useState(\"\");\r\n    const [Phone, setPhone] = useState(\"\");\r\n    const [checkPassword, setcheckPassword] = useState(true);\r\n    const [NoticeId, setNoticeId] = useState(\"\");\r\n    const [NoticeNick, setNoticeNick] = useState(\"\");\r\n    const [NoticePhone, setNoticePhone] = useState(\"\");\r\n    // const [Checking, setChecking] = useState(0);\r\n    const [isCheckedId, setisCheckedId] = useState(false);\r\n    const [isCheckedNick, setisCheckedNick] = useState(false);\r\n    const [isCheckedPhone, setisCheckedPhone] = useState(false);\r\n    const [isCheckedPassword, setisCheckedPassword] = useState(false);\r\n\r\n\r\n    const onUserIdHandler = (e) => {\r\n        setUserId(e.target.value);\r\n    }\r\n    const onPasswordHandler = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n    const onPasswordHandler2 = (e) => {\r\n        setConfirmPassword(e.target.value);\r\n    }\r\n    const onNickNameHandler = (e) => {\r\n        setNickName(e.target.value);\r\n    }\r\n    const onNameHandler = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n    const onPhoneHandler = (e) => {\r\n        const regex = /^[0-9\\b -]{0,13}$/;\r\n        if (regex.test(e.target.value)){\r\n            setPhone(e.target.value);\r\n        }\r\n    }\r\n    const onCheckIdHandler = (e) => {\r\n\r\n        e.preventDefault();\r\n        let body = {\r\n            userId : UserId,\r\n        }\r\n\r\n        dispatch(checkId(body))\r\n        .then(response => {\r\n            setNoticeId(response.payload.message);\r\n            if(response.payload.checkId){\r\n                setisCheckedId(true)\r\n            } else {\r\n                setisCheckedId(false)\r\n            }\r\n        })\r\n    }\r\n    const onCheckNick = (e) => {\r\n        \r\n        e.preventDefault();\r\n        let body = {\r\n            userNickName : NickName,\r\n        }\r\n\r\n        dispatch(checkNick(body))\r\n        .then(response => {\r\n            setNoticeNick(response.payload.message);\r\n            if(response.payload.checkNick){\r\n                setisCheckedNick(true)\r\n            } else {\r\n                setisCheckedNick(false)\r\n            }\r\n        })\r\n    }\r\n    const onCheckPhone = (e) => {\r\n        \r\n        e.preventDefault();\r\n        let body = {\r\n            userPhone : Phone,\r\n        }\r\n\r\n        dispatch(checkPhone(body))\r\n        .then(response => {\r\n            setNoticePhone(response.payload.message);\r\n            if(response.payload.checkPhone){\r\n                setisCheckedPhone(true)\r\n            } else {\r\n                setisCheckedPhone(false)\r\n            }\r\n        })\r\n    }\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        let body = {\r\n            userId : UserId,\r\n            password : Password,\r\n            userNickName : NickName,\r\n            userName : Name,\r\n            userPhone : Phone,\r\n        }\r\n        dispatch(registerUser(body))\r\n        .then(response => {\r\n            if(response.payload.success){\r\n                props.history.push(\"/\");\r\n            }else{\r\n                alert(\"Failed to sign up\");\r\n            }\r\n        })\r\n    }\r\n\r\n    const paperStyle ={\r\n        padding : 20,\r\n        height : '650px',\r\n        width : 280,\r\n        margin : '20px auto',\r\n        // textAlign : 'center',\r\n        position: 'absolute',\r\n        top:'50%',\r\n        left:'50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n    const hrstyle ={\r\n        backgroundColor : 'gray',\r\n        height : '1px'\r\n    }\r\n    const divstyle1 ={\r\n        paddingLeft: '12.5px',\r\n        marginTop: '20px',\r\n    }\r\n    const divstyle2 ={\r\n        marginTop: '10px',\r\n        fontSize: '12px',\r\n    }\r\n    const textStyle1 ={\r\n        width : 175,\r\n        marginBottom : '10px',\r\n    }\r\n    const textStyle2 ={\r\n        width : 250,\r\n        marginBottom : '10px',\r\n    }\r\n    const btnstyle ={\r\n        margin : '18px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#845460'\r\n    }\r\n    const btnstyle2 ={\r\n        margin : '8px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#f6bd63',\r\n        width : '80px',\r\n        height : '40px',\r\n        borderRadius : '15px 15px',\r\n        border : 'none',\r\n        cursor : 'pointer',\r\n    }\r\n    const disablestyle ={\r\n        margin : '18px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : 'rgb(189, 189, 189)',\r\n    }\r\n    const pstyle ={\r\n        margin : '0 0',\r\n        fontWeight : 'bolder',\r\n        fontSize : '10px',\r\n    }\r\n    const linkstyle ={\r\n        color : 'inherit',\r\n    }\r\n    const spanstyle ={\r\n        fontSize : '25px',\r\n        fontWeight : 'bolder',\r\n        marginLeft : '70px',\r\n    }\r\n\r\n    useEffect(()=>{\r\n        // if(Password !== ConfirmPassword){\r\n        //     setcheckPassword(false);\r\n        // }else{\r\n        //     setcheckPassword(true);\r\n        // }\r\n        if(Password.length === 0 && ConfirmPassword.length === 0){\r\n            setcheckPassword(true);\r\n            setisCheckedPassword(false);\r\n        }else if(Password.length < 5 && ConfirmPassword.length < 5){\r\n            setcheckPassword(false);\r\n            setisCheckedPassword(false);\r\n        }else if(Password !== ConfirmPassword){\r\n            setcheckPassword(false);\r\n            setisCheckedPassword(false);\r\n        }else{\r\n            setcheckPassword(true);\r\n            setisCheckedPassword(true);\r\n        }\r\n    },[Password, ConfirmPassword])\r\n\r\n    useEffect(()=>{\r\n        if(Phone.length === 11) {\r\n            setPhone(Phone.replace(/-/g,'').replace(/(\\d{3})(\\d{4})(\\d{4})/, '$1-$2-$3'));\r\n        }\r\n    }, [Phone]);\r\n\r\n    return (\r\n        <Grid>\r\n            <Paper elevation={10} style={paperStyle} >\r\n                <Grid align=\"left\">\r\n                    <Typography>\r\n                        <Link to=\"/\" style={linkstyle}>\r\n                            <ArrowBackIosIcon />\r\n                        </Link>\r\n                        <span style={spanstyle}>회원가입</span>\r\n                    </Typography>\r\n                </Grid>\r\n                <hr style={hrstyle}/>\r\n                <form onSubmit={onSubmitHandler}>\r\n                    <div style={divstyle1}>\r\n                        <TextField style={textStyle1} id=\"standard-basic\" label=\"아이디\" type=\"text\" value={UserId} onChange={onUserIdHandler} />\r\n                        <button type=\"submit\" style={btnstyle2} onClick={onCheckIdHandler}>중복확인</button>\r\n                        {NoticeId.length !== 0 ? <p style={pstyle}>{NoticeId}</p> : null}\r\n                        {checkPassword === true ? <TextField style={textStyle2} id=\"standard-basic\" label=\"비밀번호\" type=\"password\" value={Password} onChange={onPasswordHandler} /> : <TextField error id=\"standard-error-helper-text\" label=\"비밀번호\" type=\"password\" value={Password} onChange={onPasswordHandler} helperText=\"Incorrect entry.\" />}\r\n                        {checkPassword === true ? <TextField style={textStyle2} id=\"standard-basic\" label=\"비밀번호확인\" type=\"password\" value={ConfirmPassword} onChange={onPasswordHandler2} /> : <TextField error id=\"standard-error-helper-text\" label=\"비밀번호확인\" type=\"password\" value={ConfirmPassword} onChange={onPasswordHandler2} helperText=\"최소 5자리 이상 조합\"/>}\r\n                        <TextField style={textStyle1} id=\"standard-basic\" label=\"닉네임\" type=\"text\" value={NickName} onChange={onNickNameHandler} />\r\n                        <button type=\"submit\" style={btnstyle2} onClick={onCheckNick}>중복확인</button>\r\n                        {NoticeNick.length !== 0 ? <p style={pstyle}>{NoticeNick}</p> : null}\r\n                        <TextField style={textStyle2} id=\"standard-basic\" label=\"이름\" type=\"text\" value={Name} onChange={onNameHandler} />\r\n                        <TextField style={textStyle1} id=\"standard-basic\" label=\"휴대폰번호\" type=\"text\" value={Phone} onChange={onPhoneHandler} />\r\n                        <button type=\"submit\" style={btnstyle2} onClick={onCheckPhone}>중복확인</button>\r\n                        {NoticePhone.length !== 0 ? <p style={pstyle}>{NoticePhone}</p> : null}\r\n\r\n                        <div style={divstyle2}>\r\n                            {/* <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                // label=\"모두 동의합니다\"\r\n                            />\r\n                            모두 동의합니다.<br/> */}\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                        required\r\n                                    />\r\n                                }\r\n                                label=\"이용약관 동의\"\r\n                            />\r\n                            {/* 이용약관 동의<br/> */}\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                        required\r\n                                    />\r\n                                }\r\n                                label=\"개인정보 취급방침 동의\"\r\n                            />\r\n                            {/* 개인정보 취급방침 동의<br/> */}\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                        required\r\n                                    />\r\n                                }\r\n                                label=\"마케팅 정보 수신 동의\"\r\n                            />\r\n                            {/* 마케팅 정보 수신 동의<br/> */}\r\n                        </div>\r\n                    </div>\r\n                    {/* {Checking >= 4 ? <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>Sign up</Button> : <Button disabled style={disablestyle} variant=\"contained\" fullWidth>Sign up</Button>} */}\r\n                    {isCheckedId && isCheckedNick && isCheckedPhone && isCheckedPassword ? <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>Sign up</Button> : <Button disabled style={disablestyle} variant=\"contained\" fullWidth>Sign up</Button>}\r\n                    \r\n                </form>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\MainPage\\Main.js",["122","123"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './Main.scss';\r\nimport LeftPage from '../LeftPage/LeftPage';\r\nimport { getUser } from '../../api/actions/main_action';\r\nimport { getFriendList } from '../../api/actions/friend_action';\r\n\r\nconst Main = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [UserData, setUserData] = useState(\"\");\r\n    // const [ListFriend, setListFriend] = useState(\"\");\r\n\r\n    const onClickHandler = () =>{\r\n        axios.get('/api/users/logout')\r\n        .then(response => {\r\n            if(response.data.success){\r\n                props.history.push(\"/\");\r\n            }else{\r\n                alert('로그아웃 하는데 실패 했습니다.');\r\n            }\r\n        })\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        dispatch(getUser())\r\n        .then(response => {\r\n            setUserData(response.payload);\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"box\">\r\n                <LeftPage props={props} UserData={UserData}/>\r\n                {/* <div className=\"right_side\">\r\n                    dddd\r\n                </div> */}\r\n                <button onClick={onClickHandler}>\r\n                        로그아웃\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(Main);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\auth\\auth.js",["124","125"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\friend_reducer.js",["126"],"const SEARCH_USER = \"search_user\";\r\nconst ADD_USER = \"add_user\";\r\nconst SHOW_FRIEND = 'show_friend';\r\n\r\nexport default function(state={}, action){\r\n    switch (action.type) {\r\n        case SEARCH_USER:\r\n            return {...state, friend : action.payload}\r\n        case ADD_USER:\r\n            return {...state, plus : action.payload}\r\n        case SHOW_FRIEND:\r\n            return {...state, Myfriend : action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\main_action.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\friend_action.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\user_reducer.js",["127"],"const LOGIN_USER = \"login_user\";\r\nconst REGISTER_USER = \"register_user\";\r\nconst AUTH_USER = \"auth_user\";\r\nconst CHECK_ID = 'checkid_user';\r\nconst CHECK_NICK = 'checknick_user';\r\nconst GET_USER = \"get_user\";\r\nconst CHECK_PHONE = 'checkphone_user';\r\nconst UPDATE_USER = 'update_user';\r\n\r\nexport default function(state={}, action){\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return { ...state, loginSuccess : action.payload };\r\n        case REGISTER_USER:\r\n            return {...state, register : action.payload };\r\n        case AUTH_USER:\r\n            return {...state, userData : action.payload };\r\n        case CHECK_ID:\r\n            return {...state, chekckId : action.payload};\r\n        case CHECK_NICK:\r\n            return {...state, checkNick : action.payload};    \r\n        case GET_USER:\r\n            return {...state, userData : action.payload};\r\n        case CHECK_PHONE:\r\n            return {...state, checkPhone : action.payload};\r\n        case UPDATE_USER:\r\n            return {...state, updateUser : action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\LeftPage.js",["128","129"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\user_action.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\FriendList.js",["130","131","132","133"],"import React, { useState, useEffect, useCallback } from 'react';\r\nimport LeftTitle from './Title/LeftTitle';\r\nimport MyProfile from './MyProfile/MyProfile';\r\nimport PlusFriend from './PlusFriend/PlusFriend';\r\nimport { withRouter } from 'react-router-dom';\r\nimport SearchFriend from './PlusFriend/SearchFriend';\r\nimport { searchFriend, friendAdd } from '../../../api/actions/friend_action';\r\nimport {useDispatch} from 'react-redux';\r\nimport ShowFriend from './ShowFriend/ShowFriend';\r\nimport { getFriendList } from '../../../api/actions/friend_action';\r\n\r\nconst FriendList = ({UserData}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [Search, setSearch] = useState(false);\r\n    const [Friend, setFriend] = useState(false);\r\n    const [FriendClick, setFriendClick] = useState(false);\r\n    const [InputText, setInputText] = useState(\"\");\r\n    const [InputText2, setInputText2] = useState(\"\");\r\n    const [friendDB, setfriendDB] = useState(\"\");\r\n    const [ListFriend, setListFriend] = useState(\"\");\r\n    const [ClickEvent, setClickEvent] = useState(false);\r\n\r\n    const onToggle = () =>{\r\n        setSearch(!Search);\r\n        setFriend(false);\r\n        setFriendClick(false);\r\n    }\r\n    const onToggle2 = () =>{\r\n        setFriend(!Friend);\r\n        setSearch(false);\r\n        setFriendClick(false);\r\n    }\r\n    const onToggle3 = () =>{\r\n        setFriendClick(!Friend);\r\n        setFriend(!Friend);\r\n        setSearch(false);\r\n    }\r\n    const onInputTextHandler = (e) =>{\r\n        setInputText(e.target.value);\r\n    }\r\n    const onInputTextHandler2 = (e) =>{\r\n        setInputText2(e.target.value);\r\n    }\r\n\r\n    const onPlustHandler = (e) =>{\r\n        let body = {\r\n            data : e,\r\n            user : UserData.userId\r\n        }\r\n        \r\n        dispatch(friendAdd(body))\r\n        .then(response => {\r\n            setClickEvent(!ClickEvent);\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setClickEvent(!ClickEvent);\r\n    },[UserData])\r\n\r\n    useEffect(()=>{\r\n        let body = {\r\n            userId : UserData.userId\r\n        }\r\n\r\n        dispatch(getFriendList(body))\r\n        .then(response => {\r\n            setListFriend(response.payload);\r\n        })\r\n    },[ClickEvent])\r\n\r\n    useEffect(() => {\r\n        if(InputText2 !== \"\"){\r\n            let body = {\r\n                data : InputText2\r\n            }\r\n            \r\n            dispatch(searchFriend(body))\r\n            .then(response => {\r\n                setfriendDB(response.payload);\r\n            })\r\n\r\n        }else{\r\n            setfriendDB(\"\");\r\n        }\r\n    }, [InputText2])\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <LeftTitle \r\n                Search={Search}\r\n                Friend={Friend}\r\n                FriendClick={FriendClick}\r\n                InputText={InputText}\r\n                InputText2={InputText2}\r\n                onToggle={onToggle}\r\n                onToggle2={onToggle2}\r\n                onInputTextHandler={onInputTextHandler}\r\n                onInputTextHandler2={onInputTextHandler2}\r\n            />\r\n            <MyProfile\r\n                UserData={UserData}\r\n            />\r\n            <div className=\"line\" />\r\n            {InputText2.length === 0 ?\r\n                <PlusFriend\r\n                    onToggle3={onToggle3}\r\n                />\r\n                :\r\n                <SearchFriend\r\n                    friendDB={friendDB}\r\n                    UserData={UserData}\r\n                    onPlustHandler={onPlustHandler}\r\n                />\r\n            }\r\n            <div className=\"line\" />\r\n            <ShowFriend\r\n                UserData={UserData}\r\n                ListFriend={ListFriend}\r\n                setClickEvent={setClickEvent}\r\n                ClickEvent={ClickEvent}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(FriendList);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\ChatList\\ChatList.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Internet.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\UpdateUser\\UpdateUser.js",["134","135","136","137"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\ShowFriend\\ShowFriend.js",["138","139"],"import React, {useEffect} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst ShowFriend = React.memo(({UserData, ListFriend, ClickEvent, setClickEvent}) => {\r\n\r\n    if(ListFriend.Myfriend !== undefined){\r\n        return (\r\n            <div>\r\n                {\r\n                    ListFriend.Myfriend.map((friend)=>(\r\n                        <div className=\"myProfile\" key={friend._id}>\r\n                            <img src={friend.friendImage} />\r\n                            <div className=\"text_site\">\r\n                                <div className=\"top\">{friend.friendId}</div>\r\n                                <div className=\"bottom\">{friend.friendMessage}</div>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }else{\r\n        return (\r\n            <div>\r\n                <div>친구가 없습니다</div>\r\n            </div>\r\n        )\r\n    }\r\n})\r\n\r\nexport default withRouter(ShowFriend);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\SearchFriend.js",["140"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\PlusFriend.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\Title\\LeftTitle.js",["141"],"import axios from 'axios';\r\nimport React, { useRef, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../../../MainPage/Main.scss';\r\nimport {\r\n    SearchOutlined,\r\n    UserAddOutlined\r\n} from '@ant-design/icons';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst LeftTitle = React.memo(({\r\n    Search,\r\n    Friend,\r\n    FriendClick,\r\n    InputText,\r\n    InputText2,\r\n    onToggle,\r\n    onToggle2,\r\n    onInputTextHandler,\r\n    onInputTextHandler2\r\n}) => {\r\n\r\n    const inputEl = useRef(null);\r\n    const inputEl2 = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if(Search) inputEl.current.focus();\r\n        if(Friend) inputEl2.current.focus();\r\n        if(FriendClick) inputEl2.current.focus();\r\n    }, [Search, Friend, FriendClick])\r\n\r\n    return (\r\n        <div className=\"left_title\">\r\n            <div>친구</div>\r\n            <div className=\"search_friend\">\r\n                {Search ? <div className=\"input_box\"><input type=\"text\" placeholder=\"친구검색\" value={InputText} ref={inputEl} onChange={onInputTextHandler} /><SearchIcon className=\"search_icon\" /></div> : null}\r\n                {Friend || FriendClick ? <div className=\"input_box\"><input type=\"text\" placeholder=\"친구추가\" value={InputText2} ref={inputEl2} onChange={onInputTextHandler2}/><SearchIcon className=\"search_icon\" /></div> : null}\r\n                <SearchOutlined onClick={onToggle}/>\r\n                <UserAddOutlined onClick={onToggle2} className=\"add_friend\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default withRouter(LeftTitle);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\MyProfile\\MyProfile.js",["142","143"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nconst MyProfile = React.memo(({UserData}) => {\r\n\r\n    return (\r\n        <div className=\"myProfile\">\r\n            <Link to=\"/main/UpdateUser\">\r\n                <img src={UserData.image} />\r\n                <div className=\"text_site\">\r\n                    <div className=\"top\">{UserData.userName}</div>\r\n                    <div className=\"bottom\">{UserData.message}</div>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default withRouter(MyProfile);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\IntTitle\\IntTitle.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\News\\News.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\Shop.js",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":6,"column":31,"nodeType":"150","messageId":"151","endLine":6,"endColumn":40},{"ruleId":"152","severity":1,"message":"153","line":100,"column":21,"nodeType":"154","endLine":100,"endColumn":72},{"ruleId":"152","severity":1,"message":"153","line":101,"column":50,"nodeType":"154","endLine":101,"endColumn":103},{"ruleId":"148","severity":1,"message":"155","line":5,"column":23,"nodeType":"150","messageId":"151","endLine":5,"endColumn":29},{"ruleId":"148","severity":1,"message":"156","line":8,"column":10,"nodeType":"150","messageId":"151","endLine":8,"endColumn":23},{"ruleId":"157","severity":1,"message":"158","line":33,"column":7,"nodeType":"159","endLine":33,"endColumn":9,"suggestions":"160"},{"ruleId":"161","severity":1,"message":"162","line":5,"column":1,"nodeType":"163","endLine":44,"endColumn":2},{"ruleId":"157","severity":1,"message":"164","line":38,"column":12,"nodeType":"159","endLine":38,"endColumn":14,"suggestions":"165"},{"ruleId":"161","severity":1,"message":"162","line":5,"column":1,"nodeType":"163","endLine":16,"endColumn":2},{"ruleId":"161","severity":1,"message":"162","line":10,"column":1,"nodeType":"163","endLine":31,"endColumn":2},{"ruleId":"148","severity":1,"message":"166","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"148","severity":1,"message":"167","line":2,"column":31,"nodeType":"150","messageId":"151","endLine":2,"endColumn":36},{"ruleId":"148","severity":1,"message":"168","line":1,"column":38,"nodeType":"150","messageId":"151","endLine":1,"endColumn":49},{"ruleId":"157","severity":1,"message":"169","line":61,"column":7,"nodeType":"159","endLine":61,"endColumn":17,"suggestions":"170"},{"ruleId":"157","severity":1,"message":"171","line":72,"column":7,"nodeType":"159","endLine":72,"endColumn":19,"suggestions":"172"},{"ruleId":"157","severity":1,"message":"158","line":88,"column":8,"nodeType":"159","endLine":88,"endColumn":20,"suggestions":"173"},{"ruleId":"148","severity":1,"message":"174","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":23},{"ruleId":"148","severity":1,"message":"175","line":4,"column":10,"nodeType":"150","messageId":"151","endLine":4,"endColumn":20},{"ruleId":"148","severity":1,"message":"176","line":24,"column":11,"nodeType":"150","messageId":"151","endLine":24,"endColumn":19},{"ruleId":"152","severity":1,"message":"153","line":83,"column":21,"nodeType":"154","endLine":83,"endColumn":49},{"ruleId":"148","severity":1,"message":"177","line":1,"column":16,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"152","severity":1,"message":"153","line":12,"column":29,"nodeType":"154","endLine":12,"endColumn":61},{"ruleId":"152","severity":1,"message":"153","line":17,"column":37,"nodeType":"154","endLine":17,"endColumn":65},{"ruleId":"148","severity":1,"message":"178","line":1,"column":8,"nodeType":"150","messageId":"151","endLine":1,"endColumn":13},{"ruleId":"148","severity":1,"message":"178","line":2,"column":8,"nodeType":"150","messageId":"151","endLine":2,"endColumn":13},{"ruleId":"152","severity":1,"message":"153","line":10,"column":17,"nodeType":"154","endLine":10,"endColumn":45},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Avatar' is defined but never used.","'getFriendList' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["181"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.",["182"],"'useState' is defined but never used.","'Route' is defined but never used.","'useCallback' is defined but never used.","React Hook useEffect has a missing dependency: 'ClickEvent'. Either include it or remove the dependency array. You can also do a functional update 'setClickEvent(C => ...)' if you only need 'ClickEvent' in the 'setClickEvent' call.",["183"],"React Hook useEffect has missing dependencies: 'UserData.userId' and 'dispatch'. Either include them or remove the dependency array.",["184"],["185"],"'useRef' is defined but never used.","'updateUser' is defined but never used.","'dispatch' is assigned a value but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},"Update the dependencies array to be: [dispatch]",{"range":"196","text":"197"},"Update the dependencies array to be: [dispatch, props.history]",{"range":"198","text":"199"},"Update the dependencies array to be: [ClickEvent, UserData]",{"range":"200","text":"201"},"Update the dependencies array to be: [ClickEvent, UserData.userId, dispatch]",{"range":"202","text":"203"},"Update the dependencies array to be: [InputText2, dispatch]",{"range":"204","text":"205"},[979,981],"[dispatch]",[1182,1184],"[dispatch, props.history]",[1948,1958],"[ClickEvent, UserData]",[2189,2201],"[ClickEvent, UserData.userId, dispatch]",[2556,2568],"[InputText2, dispatch]"]