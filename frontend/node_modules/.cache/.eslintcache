[{"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\index.js":"1","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\App.js":"3","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\index.js":"4","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LoginPage.js":"5","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\auth\\auth.js":"6","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\RegisterPage.js":"7","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\MainPage\\Main.js":"8","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\user_reducer.js":"9","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\friend_reducer.js":"10","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\socket_reducer.js":"11","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\chat_reducer.js":"12","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\main_action.js":"13","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\user_action.js":"14","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\friend_action.js":"15","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\LeftPage.js":"16","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\FriendList.js":"17","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\ChatList\\Chat.js":"18","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Internet.js":"19","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\ViewFriend\\ViewFriend.js":"20","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatingRoom.js":"21","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatingList.js":"22","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\UpdateUser\\UpdateUser.js":"23","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\ShowFriend\\ShowFriend.js":"24","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\SearchFriend.js":"25","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\MyProfile\\MyProfile.js":"26","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\PlusFriend.js":"27","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\Title\\LeftTitle.js":"28","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\socket_action.js":"29","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\AddBaner.js":"30","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatTitle.js":"31","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\useChat.js":"32","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\chat_action.js":"33","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\News\\News.js":"34","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\ChatList\\Sections\\ChatCard.js":"35","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\IntTitle\\IntTitle.js":"36","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\Shop.js":"37","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\News\\NewsItem.js":"38","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\ShopItem.js":"39","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\usePromise.js":"40","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Options\\Options.js":"41","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatItem.js":"42","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Options\\option\\Weather.js":"43","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\Board.js":"44","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardList.js":"45","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardDetail.js":"46","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\post_action.js":"47","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardCreate.js":"48","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardUpdate.js":"49","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\PayResult.js":"50","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\TV\\TV.js":"51","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\index.js":"52","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\App.js":"53","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\reportWebVitals.js":"54","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\reducers\\index.js":"55","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LoginPage.js":"56","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\RegisterPage.js":"57","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\MainPage\\Main.js":"58","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\auth\\auth.js":"59","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\reducers\\user_reducer.js":"60","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\reducers\\chat_reducer.js":"61","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\reducers\\friend_reducer.js":"62","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\reducers\\socket_reducer.js":"63","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\actions\\user_action.js":"64","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\actions\\main_action.js":"65","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\actions\\friend_action.js":"66","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\LeftPage.js":"67","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\FriendList\\FriendList.js":"68","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\actions\\socket_action.js":"69","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\ChatList\\Chat.js":"70","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatingList.js":"71","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatingRoom.js":"72","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\SocketList\\useChat.js":"73","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Internet.js":"74","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\UpdateUser\\UpdateUser.js":"75","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Options\\Options.js":"76","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\ViewFriend\\ViewFriend.js":"77","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\FriendList\\MyProfile\\MyProfile.js":"78","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\SearchFriend.js":"79","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\FriendList\\Title\\LeftTitle.js":"80","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\PlusFriend.js":"81","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\FriendList\\ShowFriend\\ShowFriend.js":"82","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\actions\\chat_action.js":"83","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Options\\option\\Weather.js":"84","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\Board.js":"85","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\TV\\TV.js":"86","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\Shop.js":"87","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\News\\News.js":"88","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatItem.js":"89","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\IntTitle\\IntTitle.js":"90","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\SocketList\\AddBaner.js":"91","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatTitle.js":"92","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\ChatList\\Sections\\ChatCard.js":"93","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\News\\NewsItem.js":"94","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\usePromise.js":"95","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\PayResult.js":"96","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\ShopItem.js":"97","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardDetail.js":"98","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardUpdate.js":"99","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardList.js":"100","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardCreate.js":"101","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\actions\\post_action.js":"102","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Bucket\\Bucket.js":"103"},{"size":1062,"mtime":1619226324989,"results":"104","hashOfConfig":"105"},{"size":375,"mtime":1619140719705,"results":"106","hashOfConfig":"105"},{"size":858,"mtime":1620109402521,"results":"107","hashOfConfig":"105"},{"size":313,"mtime":1619762747619,"results":"108","hashOfConfig":"105"},{"size":3924,"mtime":1619570231922,"results":"109","hashOfConfig":"105"},{"size":1439,"mtime":1619510145370,"results":"110","hashOfConfig":"105"},{"size":11771,"mtime":1619414164914,"results":"111","hashOfConfig":"105"},{"size":1740,"mtime":1620006631572,"results":"112","hashOfConfig":"105"},{"size":1108,"mtime":1619667037793,"results":"113","hashOfConfig":"105"},{"size":475,"mtime":1620131046942,"results":"114","hashOfConfig":"105"},{"size":1112,"mtime":1620109402523,"results":"115","hashOfConfig":"105"},{"size":527,"mtime":1620006631565,"results":"116","hashOfConfig":"105"},{"size":266,"mtime":1619357976694,"results":"117","hashOfConfig":"105"},{"size":1900,"mtime":1619667037791,"results":"118","hashOfConfig":"105"},{"size":837,"mtime":1620131056140,"results":"119","hashOfConfig":"105"},{"size":4023,"mtime":1620189145896,"results":"120","hashOfConfig":"105"},{"size":4068,"mtime":1620189145893,"results":"121","hashOfConfig":"105"},{"size":5345,"mtime":1619743203142,"results":"122","hashOfConfig":"105"},{"size":712,"mtime":1620123705022,"results":"123","hashOfConfig":"105"},{"size":1219,"mtime":1620006631571,"results":"124","hashOfConfig":"105"},{"size":7223,"mtime":1620144439466,"results":"125","hashOfConfig":"105"},{"size":1987,"mtime":1620189145898,"results":"126","hashOfConfig":"105"},{"size":2906,"mtime":1620089951775,"results":"127","hashOfConfig":"105"},{"size":1303,"mtime":1619794870536,"results":"128","hashOfConfig":"105"},{"size":1965,"mtime":1620189145894,"results":"129","hashOfConfig":"105"},{"size":638,"mtime":1619794870536,"results":"130","hashOfConfig":"105"},{"size":606,"mtime":1620123705019,"results":"131","hashOfConfig":"105"},{"size":1591,"mtime":1620189145895,"results":"132","hashOfConfig":"105"},{"size":1858,"mtime":1620109402522,"results":"133","hashOfConfig":"105"},{"size":995,"mtime":1620123705028,"results":"134","hashOfConfig":"105"},{"size":337,"mtime":1619794870538,"results":"135","hashOfConfig":"105"},{"size":1738,"mtime":1620189145898,"results":"136","hashOfConfig":"105"},{"size":983,"mtime":1620006631564,"results":"137","hashOfConfig":"105"},{"size":1207,"mtime":1619953801175,"results":"138","hashOfConfig":"105"},{"size":1587,"mtime":1619677919303,"results":"139","hashOfConfig":"105"},{"size":865,"mtime":1620123705022,"results":"140","hashOfConfig":"105"},{"size":3457,"mtime":1620123705025,"results":"141","hashOfConfig":"105"},{"size":1238,"mtime":1619825689844,"results":"142","hashOfConfig":"105"},{"size":3597,"mtime":1620123705026,"results":"143","hashOfConfig":"105"},{"size":742,"mtime":1619494448298,"results":"144","hashOfConfig":"105"},{"size":3326,"mtime":1620189145897,"results":"145","hashOfConfig":"105"},{"size":3661,"mtime":1620189145897,"results":"146","hashOfConfig":"105"},{"size":1653,"mtime":1620089951771,"results":"147","hashOfConfig":"105"},{"size":1423,"mtime":1620089951763,"results":"148","hashOfConfig":"105"},{"size":1996,"mtime":1620123705021,"results":"149","hashOfConfig":"105"},{"size":2199,"mtime":1620123705020,"results":"150","hashOfConfig":"105"},{"size":1462,"mtime":1620089951759,"results":"151","hashOfConfig":"105"},{"size":2127,"mtime":1620089951967,"results":"152","hashOfConfig":"105"},{"size":2517,"mtime":1620089951766,"results":"153","hashOfConfig":"105"},{"size":2086,"mtime":1620189145895,"results":"154","hashOfConfig":"105"},{"size":140,"mtime":1620123705026,"results":"155","hashOfConfig":"105"},{"size":1062,"mtime":1620195929181,"results":"156","hashOfConfig":"157"},{"size":858,"mtime":1620195929162,"results":"158","hashOfConfig":"157"},{"size":375,"mtime":1620195929181,"results":"159","hashOfConfig":"157"},{"size":313,"mtime":1620195929165,"results":"160","hashOfConfig":"157"},{"size":3924,"mtime":1620195929179,"results":"161","hashOfConfig":"157"},{"size":11771,"mtime":1620195929180,"results":"162","hashOfConfig":"157"},{"size":1676,"mtime":1620208321958,"results":"163","hashOfConfig":"157"},{"size":1439,"mtime":1620195929164,"results":"164","hashOfConfig":"157"},{"size":1108,"mtime":1620195929166,"results":"165","hashOfConfig":"157"},{"size":527,"mtime":1620195929165,"results":"166","hashOfConfig":"157"},{"size":475,"mtime":1620195929165,"results":"167","hashOfConfig":"157"},{"size":1112,"mtime":1620195929166,"results":"168","hashOfConfig":"157"},{"size":1900,"mtime":1620195929164,"results":"169","hashOfConfig":"157"},{"size":266,"mtime":1620195929163,"results":"170","hashOfConfig":"157"},{"size":837,"mtime":1620195929163,"results":"171","hashOfConfig":"157"},{"size":4043,"mtime":1620208342076,"results":"172","hashOfConfig":"157"},{"size":4068,"mtime":1620195929168,"results":"173","hashOfConfig":"157"},{"size":1858,"mtime":1620195929164,"results":"174","hashOfConfig":"157"},{"size":5345,"mtime":1620195929167,"results":"175","hashOfConfig":"157"},{"size":1519,"mtime":1620208393950,"results":"176","hashOfConfig":"157"},{"size":7133,"mtime":1620208290043,"results":"177","hashOfConfig":"157"},{"size":1694,"mtime":1620208359165,"results":"178","hashOfConfig":"157"},{"size":712,"mtime":1620195929172,"results":"179","hashOfConfig":"157"},{"size":2877,"mtime":1620208353995,"results":"180","hashOfConfig":"157"},{"size":3328,"mtime":1620208403044,"results":"181","hashOfConfig":"157"},{"size":1219,"mtime":1620195929178,"results":"182","hashOfConfig":"157"},{"size":566,"mtime":1620208455479,"results":"183","hashOfConfig":"157"},{"size":1965,"mtime":1620195929169,"results":"184","hashOfConfig":"157"},{"size":1591,"mtime":1620195929169,"results":"185","hashOfConfig":"157"},{"size":606,"mtime":1620195929168,"results":"186","hashOfConfig":"157"},{"size":1303,"mtime":1620195929169,"results":"187","hashOfConfig":"157"},{"size":983,"mtime":1620195929162,"results":"188","hashOfConfig":"157"},{"size":1653,"mtime":1620195929175,"results":"189","hashOfConfig":"157"},{"size":1423,"mtime":1620195929170,"results":"190","hashOfConfig":"157"},{"size":3442,"mtime":1620203301142,"results":"191","hashOfConfig":"157"},{"size":3457,"mtime":1620195929173,"results":"192","hashOfConfig":"157"},{"size":1207,"mtime":1620195929172,"results":"193","hashOfConfig":"157"},{"size":3669,"mtime":1620208385428,"results":"194","hashOfConfig":"157"},{"size":865,"mtime":1620195929172,"results":"195","hashOfConfig":"157"},{"size":995,"mtime":1620195929176,"results":"196","hashOfConfig":"157"},{"size":337,"mtime":1620195929176,"results":"197","hashOfConfig":"157"},{"size":1587,"mtime":1620195929167,"results":"198","hashOfConfig":"157"},{"size":1238,"mtime":1620195929173,"results":"199","hashOfConfig":"157"},{"size":742,"mtime":1620195929182,"results":"200","hashOfConfig":"157"},{"size":2086,"mtime":1620195929173,"results":"201","hashOfConfig":"157"},{"size":3597,"mtime":1620195929174,"results":"202","hashOfConfig":"157"},{"size":2199,"mtime":1620195929171,"results":"203","hashOfConfig":"157"},{"size":2517,"mtime":1620195929171,"results":"204","hashOfConfig":"157"},{"size":1996,"mtime":1620195929171,"results":"205","hashOfConfig":"157"},{"size":2127,"mtime":1620195929170,"results":"206","hashOfConfig":"157"},{"size":1462,"mtime":1620195929163,"results":"207","hashOfConfig":"157"},{"size":428,"mtime":1620201490874,"results":"208","hashOfConfig":"157"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},"c8e9fu",{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"211"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"211"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"211"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"211"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"211"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"211"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"211"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"211"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"254","usedDeprecatedRules":"211"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"211"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"211"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"211"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"211"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"211"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"211"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"211"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"211"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"211"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"211"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"211"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"211"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"211"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"314","messages":"315","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"316","messages":"317","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"211"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"211"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"211"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"211"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"211"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"211"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},"1wccko0",{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"342"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"342"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"342"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"342"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"342"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"342"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"342"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"342"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"342"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"254","usedDeprecatedRules":"342"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"342"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"342"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"342"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"342"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"342"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"342"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"342"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"342"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"342"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"342"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"342"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"342"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"342"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"342"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"342"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"342"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"342"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"342"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"342"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"342"},"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\index.js",[],["460","461"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\App.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\index.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LoginPage.js",["462","463","464"],"import React, {useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport { loginUser } from '../api/actions/user_action';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { Grid, Paper, Avatar, TextField, Button, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    customTextField: {\r\n      \"& input::placeholder\": {\r\n        color : '#fff',\r\n        fontWeight : 'bolder'\r\n      }\r\n    }\r\n})\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [UserId, setUserId] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n\r\n    const onUserIdHandler = (e) => {\r\n        setUserId(e.target.value);\r\n    }\r\n    const onPasswordHandler = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        let body = {\r\n            userId : UserId,\r\n            password : Password,\r\n        }\r\n\r\n        dispatch(loginUser(body))\r\n        .then(response => {\r\n            if(response.payload.loginSuccess){\r\n                props.history.push('/main/FriendList');\r\n            }else{\r\n                alert('Error');\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const paperStyle = {\r\n        padding : 20,\r\n        height : '568px',\r\n        width : 280,\r\n        margin : '0 auto',\r\n        textAlign : 'center',\r\n        background : '#f6bd63',\r\n        position: 'absolute',\r\n        top:'50%',\r\n        left:'50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    }\r\n    const avatarStyle = {\r\n        width : '230px',\r\n        height : '90px',\r\n        margin: '10px 0 30px',\r\n        background : '#f6bd63',\r\n    }\r\n    const btnstyle = {\r\n        margin : '8px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#845460'\r\n    }\r\n    const imgstyle ={\r\n        width : '100%',\r\n        height : '100%',\r\n    }\r\n    const logostyle ={\r\n        width: '200px',\r\n        marginTop: '50px',\r\n    }\r\n    const inputstyle ={\r\n        width : '90%',\r\n        margin : '0 auto',\r\n        height : '30px',\r\n        marginBottom : '20px',\r\n        background : '#855460',\r\n        color : '#fff'\r\n    }\r\n    const linkstyle ={\r\n        color : '#fff',\r\n        fontWeight : 'bolder',\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid>\r\n            <Paper elevation={10} style={paperStyle} classes={{root:classes.customTextField}}>\r\n                <Grid align=\"center\">\r\n                    <img src=\"/text_transparent.png\" style={logostyle}></img>\r\n                    <Avatar style={avatarStyle} ><img src=\"/gyeran_height_cut.png\" style={imgstyle} /></Avatar>\r\n\r\n                </Grid>\r\n                <form onSubmit={onSubmitHandler}>\r\n                    <input style={inputstyle} type=\"text\" label=\"UserId\" placeholder=\"Enter UserId\" value={UserId} onChange={onUserIdHandler} required/>\r\n                    <input style={inputstyle} type=\"password\" label=\"Password\" placeholder=\"Enter Password\" value={Password} onChange={onPasswordHandler} required/>\r\n                    {/* <FormControlLabel \r\n                        control={\r\n                            <Checkbox\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Remember Me\"\r\n                    /> */}\r\n                    <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>Sign in</Button>\r\n                </form>\r\n                <Typography>\r\n                    <Link to=\"/register\" style={linkstyle}>\r\n                        Sign up\r\n                    </Link>\r\n                </Typography>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\auth\\auth.js",["465","466"],"import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { auth } from '../actions/user_action';\r\n\r\nexport default function(SpecificComponent, option, adminRoute = null){\r\n\r\n    // option\r\n    // null => 아무나 출입이 가능한 페이지\r\n    // true => 로그인한 유저만 출입이 가능한 페이지\r\n    // false => 로그인한 유저는 출입 불가능한 페이지\r\n\r\n    // adminRoute는 true가 되면 어드민 유저만 가능하다.\r\n    \r\n    function AuthenticationCheck(props){\r\n        \r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(()=>{\r\n            \r\n            dispatch(auth()).then(response => {\r\n\r\n                // 로그인 하지 않은 상태\r\n                if(!response.payload.isAuth){\r\n                    if(option){\r\n                        props.history.push('/');\r\n                    }\r\n                }else{\r\n                    // 로그인 한 상태\r\n                    if(adminRoute && !response.payload.isAdmin){\r\n                        props.history.push('/main/FriendList')\r\n                    }else{\r\n                        if(option === false){\r\n                            props.history.push('/main/FriendList');\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }, [])\r\n        return (\r\n            <SpecificComponent />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\RegisterPage.js",["467"],"import React, { useState, useEffect } from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport { registerUser, checkId, checkNick, checkPhone } from '../api/actions/user_action';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Grid, Paper, Avatar, FormControlLabel, Checkbox, TextField, Button, Typography } from '@material-ui/core';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [UserId, setUserId] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n    const [ConfirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [NickName, setNickName] = useState(\"\");\r\n    const [Name, setName] = useState(\"\");\r\n    const [Phone, setPhone] = useState(\"\");\r\n    const [checkPassword, setcheckPassword] = useState(true);\r\n    const [NoticeId, setNoticeId] = useState(\"\");\r\n    const [NoticeNick, setNoticeNick] = useState(\"\");\r\n    const [NoticePhone, setNoticePhone] = useState(\"\");\r\n    // const [Checking, setChecking] = useState(0);\r\n    const [isCheckedId, setisCheckedId] = useState(false);\r\n    const [isCheckedNick, setisCheckedNick] = useState(false);\r\n    const [isCheckedPhone, setisCheckedPhone] = useState(false);\r\n    const [isCheckedPassword, setisCheckedPassword] = useState(false);\r\n\r\n\r\n    const onUserIdHandler = (e) => {\r\n        setUserId(e.target.value);\r\n    }\r\n    const onPasswordHandler = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n    const onPasswordHandler2 = (e) => {\r\n        setConfirmPassword(e.target.value);\r\n    }\r\n    const onNickNameHandler = (e) => {\r\n        setNickName(e.target.value);\r\n    }\r\n    const onNameHandler = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n    const onPhoneHandler = (e) => {\r\n        const regex = /^[0-9\\b -]{0,13}$/;\r\n        if (regex.test(e.target.value)){\r\n            setPhone(e.target.value);\r\n        }\r\n    }\r\n    const onCheckIdHandler = (e) => {\r\n\r\n        e.preventDefault();\r\n        let body = {\r\n            userId : UserId,\r\n        }\r\n\r\n        dispatch(checkId(body))\r\n        .then(response => {\r\n            setNoticeId(response.payload.message);\r\n            if(response.payload.checkId){\r\n                setisCheckedId(true)\r\n            } else {\r\n                setisCheckedId(false)\r\n            }\r\n        })\r\n    }\r\n    const onCheckNick = (e) => {\r\n        \r\n        e.preventDefault();\r\n        let body = {\r\n            userNickName : NickName,\r\n        }\r\n\r\n        dispatch(checkNick(body))\r\n        .then(response => {\r\n            setNoticeNick(response.payload.message);\r\n            if(response.payload.checkNick){\r\n                setisCheckedNick(true)\r\n            } else {\r\n                setisCheckedNick(false)\r\n            }\r\n        })\r\n    }\r\n    const onCheckPhone = (e) => {\r\n        \r\n        e.preventDefault();\r\n        let body = {\r\n            userPhone : Phone,\r\n        }\r\n\r\n        dispatch(checkPhone(body))\r\n        .then(response => {\r\n            setNoticePhone(response.payload.message);\r\n            if(response.payload.checkPhone){\r\n                setisCheckedPhone(true)\r\n            } else {\r\n                setisCheckedPhone(false)\r\n            }\r\n        })\r\n    }\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        let body = {\r\n            userId : UserId,\r\n            password : Password,\r\n            userNickName : NickName,\r\n            userName : Name,\r\n            userPhone : Phone,\r\n        }\r\n        dispatch(registerUser(body))\r\n        .then(response => {\r\n            if(response.payload.success){\r\n                props.history.push(\"/\");\r\n            }else{\r\n                alert(\"Failed to sign up\");\r\n            }\r\n        })\r\n    }\r\n\r\n    const paperStyle ={\r\n        padding : 20,\r\n        height : '650px',\r\n        width : 280,\r\n        margin : '20px auto',\r\n        // textAlign : 'center',\r\n        position: 'absolute',\r\n        top:'50%',\r\n        left:'50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n    const hrstyle ={\r\n        backgroundColor : 'gray',\r\n        height : '1px'\r\n    }\r\n    const divstyle1 ={\r\n        paddingLeft: '12.5px',\r\n        marginTop: '20px',\r\n    }\r\n    const divstyle2 ={\r\n        marginTop: '10px',\r\n        fontSize: '12px',\r\n    }\r\n    const textStyle1 ={\r\n        width : 175,\r\n        marginBottom : '10px',\r\n    }\r\n    const textStyle2 ={\r\n        width : 250,\r\n        marginBottom : '10px',\r\n    }\r\n    const btnstyle ={\r\n        margin : '18px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#845460'\r\n    }\r\n    const btnstyle2 ={\r\n        margin : '8px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#f6bd63',\r\n        width : '80px',\r\n        height : '40px',\r\n        borderRadius : '15px 15px',\r\n        border : 'none',\r\n        cursor : 'pointer',\r\n    }\r\n    const disablestyle ={\r\n        margin : '18px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : 'rgb(189, 189, 189)',\r\n    }\r\n    const pstyle ={\r\n        margin : '0 0',\r\n        fontWeight : 'bolder',\r\n        fontSize : '10px',\r\n    }\r\n    const linkstyle ={\r\n        color : 'inherit',\r\n    }\r\n    const spanstyle ={\r\n        fontSize : '25px',\r\n        fontWeight : 'bolder',\r\n        marginLeft : '70px',\r\n    }\r\n\r\n    useEffect(()=>{\r\n        // if(Password !== ConfirmPassword){\r\n        //     setcheckPassword(false);\r\n        // }else{\r\n        //     setcheckPassword(true);\r\n        // }\r\n        if(Password.length === 0 && ConfirmPassword.length === 0){\r\n            setcheckPassword(true);\r\n            setisCheckedPassword(false);\r\n        }else if(Password.length < 5 && ConfirmPassword.length < 5){\r\n            setcheckPassword(false);\r\n            setisCheckedPassword(false);\r\n        }else if(Password !== ConfirmPassword){\r\n            setcheckPassword(false);\r\n            setisCheckedPassword(false);\r\n        }else{\r\n            setcheckPassword(true);\r\n            setisCheckedPassword(true);\r\n        }\r\n    },[Password, ConfirmPassword])\r\n\r\n    useEffect(()=>{\r\n        if(Phone.length === 11) {\r\n            setPhone(Phone.replace(/-/g,'').replace(/(\\d{3})(\\d{4})(\\d{4})/, '$1-$2-$3'));\r\n        }\r\n    }, [Phone]);\r\n\r\n    return (\r\n        <Grid>\r\n            <Paper elevation={10} style={paperStyle} >\r\n                <Grid align=\"left\">\r\n                    <Typography>\r\n                        <Link to=\"/\" style={linkstyle}>\r\n                            <ArrowBackIosIcon />\r\n                        </Link>\r\n                        <span style={spanstyle}>회원가입</span>\r\n                    </Typography>\r\n                </Grid>\r\n                <hr style={hrstyle}/>\r\n                <form onSubmit={onSubmitHandler}>\r\n                    <div style={divstyle1}>\r\n                        <TextField style={textStyle1} id=\"standard-basic\" label=\"아이디\" type=\"text\" value={UserId} onChange={onUserIdHandler} />\r\n                        <button type=\"submit\" style={btnstyle2} onClick={onCheckIdHandler}>중복확인</button>\r\n                        {NoticeId.length !== 0 ? <p style={pstyle}>{NoticeId}</p> : null}\r\n                        {checkPassword === true ? <TextField style={textStyle2} id=\"standard-basic\" label=\"비밀번호\" type=\"password\" value={Password} onChange={onPasswordHandler} /> : <TextField error id=\"standard-error-helper-text\" label=\"비밀번호\" type=\"password\" value={Password} onChange={onPasswordHandler} helperText=\"Incorrect entry.\" />}\r\n                        {checkPassword === true ? <TextField style={textStyle2} id=\"standard-basic\" label=\"비밀번호확인\" type=\"password\" value={ConfirmPassword} onChange={onPasswordHandler2} /> : <TextField error id=\"standard-error-helper-text\" label=\"비밀번호확인\" type=\"password\" value={ConfirmPassword} onChange={onPasswordHandler2} helperText=\"최소 5자리 이상 조합\"/>}\r\n                        <TextField style={textStyle1} id=\"standard-basic\" label=\"닉네임\" type=\"text\" value={NickName} onChange={onNickNameHandler} />\r\n                        <button type=\"submit\" style={btnstyle2} onClick={onCheckNick}>중복확인</button>\r\n                        {NoticeNick.length !== 0 ? <p style={pstyle}>{NoticeNick}</p> : null}\r\n                        <TextField style={textStyle2} id=\"standard-basic\" label=\"이름\" type=\"text\" value={Name} onChange={onNameHandler} />\r\n                        <TextField style={textStyle1} id=\"standard-basic\" label=\"휴대폰번호\" type=\"text\" value={Phone} onChange={onPhoneHandler} />\r\n                        <button type=\"submit\" style={btnstyle2} onClick={onCheckPhone}>중복확인</button>\r\n                        {NoticePhone.length !== 0 ? <p style={pstyle}>{NoticePhone}</p> : null}\r\n\r\n                        <div style={divstyle2}>\r\n                            {/* <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                // label=\"모두 동의합니다\"\r\n                            />\r\n                            모두 동의합니다.<br/> */}\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                        required\r\n                                    />\r\n                                }\r\n                                label=\"이용약관 동의\"\r\n                            />\r\n                            {/* 이용약관 동의<br/> */}\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                        required\r\n                                    />\r\n                                }\r\n                                label=\"개인정보 취급방침 동의\"\r\n                            />\r\n                            {/* 개인정보 취급방침 동의<br/> */}\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                        required\r\n                                    />\r\n                                }\r\n                                label=\"마케팅 정보 수신 동의\"\r\n                            />\r\n                            {/* 마케팅 정보 수신 동의<br/> */}\r\n                        </div>\r\n                    </div>\r\n                    {/* {Checking >= 4 ? <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>Sign up</Button> : <Button disabled style={disablestyle} variant=\"contained\" fullWidth>Sign up</Button>} */}\r\n                    {isCheckedId && isCheckedNick && isCheckedPhone && isCheckedPassword ? <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>Sign up</Button> : <Button disabled style={disablestyle} variant=\"contained\" fullWidth>Sign up</Button>}\r\n                    \r\n                </form>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\MainPage\\Main.js",["468","469","470","471"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './Main.scss';\r\nimport LeftPage from '../LeftPage/LeftPage';\r\nimport { getUser } from '../../api/actions/main_action';\r\nimport { getFriendList } from '../../api/actions/friend_action';\r\n\r\nconst Main = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [UserData, setUserData] = useState(\"\");\r\n    // const [ListFriend, setListFriend] = useState(\"\");\r\n    const [Update, setUpdate] = useState(false);\r\n\r\n    const onClickHandler = () =>{\r\n        axios.get('/api/users/logout')\r\n        .then(response => {\r\n            if(response.data.success){\r\n                props.history.push(\"/\");\r\n            }else{\r\n                alert('로그아웃 하는데 실패 했습니다.');\r\n            }\r\n        })\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        dispatch(getUser())\r\n        .then(response => {\r\n            setUserData(response.payload);\r\n        })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        dispatch(getUser())\r\n        .then(response => {\r\n            setUserData(response.payload);\r\n        })\r\n    }, [Update])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"box\">\r\n                <LeftPage props={props} UserData={UserData} Update={Update} setUpdate={setUpdate}/>\r\n                {/* <div className=\"right_side\">\r\n                    dddd\r\n                </div> */}\r\n                {/* <button style={{marginLeft:'10px'}} onClick={onClickHandler}>\r\n                    로그아웃\r\n                </button> */}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(Main);","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\user_reducer.js",["472"],"const LOGIN_USER = \"login_user\";\r\nconst REGISTER_USER = \"register_user\";\r\nconst AUTH_USER = \"auth_user\";\r\nconst CHECK_ID = 'checkid_user';\r\nconst CHECK_NICK = 'checknick_user';\r\nconst GET_USER = \"get_user\";\r\nconst CHECK_PHONE = 'checkphone_user';\r\nconst UPDATE_USER = 'update_user';\r\n\r\nexport default function(state={}, action){\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return { ...state, loginSuccess : action.payload };\r\n        case REGISTER_USER:\r\n            return {...state, register : action.payload };\r\n        case AUTH_USER:\r\n            return {...state, userData : action.payload };\r\n        case CHECK_ID:\r\n            return {...state, chekckId : action.payload};\r\n        case CHECK_NICK:\r\n            return {...state, checkNick : action.payload};    \r\n        case GET_USER:\r\n            return {...state, userData : action.payload};\r\n        case CHECK_PHONE:\r\n            return {...state, checkPhone : action.payload};\r\n        case UPDATE_USER:\r\n            return {...state, updateUser : action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\friend_reducer.js",["473"],"const SEARCH_USER = \"search_user\";\r\nconst ADD_USER = \"add_user\";\r\nconst SHOW_FRIEND = 'show_friend';\r\n\r\nexport default function(state={}, action){\r\n    switch (action.type) {\r\n        case SEARCH_USER:\r\n            return {...state, friend : action.payload}\r\n        case ADD_USER:\r\n            return {...state, plus : action.payload}\r\n        case SHOW_FRIEND:\r\n            return {...state, Myfriend : action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\socket_reducer.js",["474","475"],"const SOCKET_SEND = 'socket_send';\r\nconst SOCKET_RECEIVE = 'socket_receive';\r\nconst SOCKET_LIST = 'socket_list';\r\nconst SOCKET_CHATINFORM = 'socket_chatinform';\r\nconst SOCKET_FRIEND_PROFILE = 'socket_profile';\r\nconst SOCKET_COUNT = 'socket_count';\r\nconst SOCKET_ALL = 'socket_all';\r\n\r\nexport default function(state={}, action){\r\n    switch (action.type) {\r\n        case SOCKET_SEND:\r\n            return {...state, chats: action.payload }\r\n        // case SOCKET_RECEIVE:\r\n        //     let newChatList = state.chatList.slice();\r\n        //     newChatList.push(action.data);\r\n        //     return { ...state, chatList: newChatList };\r\n        case SOCKET_LIST:\r\n            return {...state, list: action.payload }\r\n        case SOCKET_CHATINFORM:\r\n            return {...state, inform: action.payload}\r\n        case SOCKET_FRIEND_PROFILE:\r\n            return {...state, indid: action.payload}\r\n        case SOCKET_COUNT:\r\n            return {...state, count : action.payload}\r\n        case SOCKET_ALL:\r\n            return {...state, ass : action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\chat_reducer.js",["476"],"const CHAT_SERVER = 'chat_server';\r\nconst AFTER_POST_MESSAGE = 'after_post_message';\r\nconst CHECK_CHAT = 'check_chat';\r\n\r\nexport default function(state={},action){\r\n    switch(action.type){\r\n        case CHAT_SERVER:\r\n            return { ...state, chats: action.payload }\r\n        case AFTER_POST_MESSAGE:\r\n                return { ...state, chats: state.chats.concat(action.payload) }\r\n        case CHECK_CHAT:\r\n                return { ...state, check: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\main_action.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\user_action.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\friend_action.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\LeftPage.js",["477","478","479","480","481"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\FriendList.js",["482","483","484","485","486","487"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\ChatList\\Chat.js",["488","489"],"import React, { useState, Component } from 'react';\r\nimport { Button, Input } from '@material-ui/core';\r\nimport SubdirectoryArrowLeftIcon from '@material-ui/icons/SubdirectoryArrowLeft';\r\nimport io from \"socket.io-client\";\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { getChats, afterPostMessage } from \"../../../api/actions/chat_action\";\r\nimport ChatCard from './Sections/ChatCard';\r\nimport Dropzone from 'react-dropzone';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\n\r\nexport class Chat extends Component {\r\n\r\n    state = {\r\n        chatMessage: \"\",\r\n    }\r\n\r\n    componentDidMount() {\r\n        let server = \"http://localhost:4000\";\r\n\r\n        this.props.dispatch(getChats());\r\n\r\n        this.socket = io(server);\r\n\r\n        this.socket.on(\"Output Chat Message\", messageFromBackEnd => {\r\n            this.props.dispatch(afterPostMessage(messageFromBackEnd));\r\n        })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.messagesEnd.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n\r\n    handleSearchChange = (e) => {\r\n        this.setState({\r\n            chatMessage: e.target.value,\r\n        })\r\n    }\r\n\r\n    renderCards = () =>\r\n        this.props.chats.chats\r\n        && this.props.chats.chats.map((chat) => (\r\n            <ChatCard key={chat._id}  {...chat} />\r\n        ));\r\n\r\n    submitChatMessage = (e) => {\r\n        e.preventDefault();\r\n        if(this.state.chatMessage !== \"\"){\r\n            let chatMessage = this.state.chatMessage;\r\n            let _id = this.props.user.userData._id;\r\n            let userName = this.props.user.userData.userName;\r\n            let userImage = this.props.user.userData.image;\r\n            let nowTime = moment();\r\n            let type = \"Text\";\r\n    \r\n            this.socket.emit(\"Input Chat Message\", {\r\n                chatMessage,\r\n                _id,\r\n                userName,\r\n                userImage,\r\n                nowTime,\r\n                type,\r\n            });\r\n        }\r\n        \r\n        this.setState({ chatMessage: \"\" });\r\n    }\r\n\r\n    onDrop = (files) => {\r\n\r\n        if (this.props.user.userData && !this.props.user.userData.isAuth) {\r\n            return alert('Please Log in first');\r\n        }\r\n\r\n        let formData = new FormData;\r\n\r\n        const config = {\r\n            header: { 'content-type': 'multipart/form-data' }\r\n        }\r\n\r\n        formData.append(\"file\", files[0])\r\n\r\n        axios.post('/api/chats/uploadfiles', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    let chatMessage = response.data.url;\r\n                    let _id = this.props.user.userData._id;\r\n                    let userName = this.props.user.userData.userName;\r\n                    let userImage = this.props.user.userData.image;\r\n                    let nowTime = moment();\r\n                    let type = \"VideoOrImage\";\r\n\r\n                    this.socket.emit(\"Input Chat Message\", {\r\n                        chatMessage,\r\n                        _id,\r\n                        userName,\r\n                        userImage,\r\n                        nowTime,\r\n                        type\r\n                    });\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{height:'300px', overflow:'hidden'}}>\r\n                    <div style={{overflow:'scroll'}}>\r\n                        {\r\n                            this.props.chats && (\r\n                                this.renderCards()\r\n                            )\r\n                        }\r\n                        <div\r\n                            ref={el => {\r\n                                this.messagesEnd = el;\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <form onSubmit={this.submitChatMessage}>\r\n                    <Input\r\n                        id=\"message\"\r\n                        color=\"secondary\"\r\n                        placeholder=\"메세지를 작성하세요\"\r\n                        inputProps={{ 'aria-label': 'description' }}\r\n                        value={this.state.chatMessage}\r\n                        onChange={this.handleSearchChange}\r\n                    />\r\n                    <Dropzone onDrop={this.onDrop}>\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <section>\r\n                                <div {...getRootProps()}>\r\n                                    <input {...getInputProps()} />\r\n                                    <Button>\r\n                                        <DownloadOutlined type=\"upload\" />\r\n                                    </Button>\r\n                                </div>\r\n                            </section>\r\n                        )}\r\n                    </Dropzone>\r\n                    <Button variant=\"outlined\" color=\"secondary\" type=\"submit\" onClick={this.submitChatMessage}>\r\n                        <SubdirectoryArrowLeftIcon />\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user : state.user,\r\n        chats : state.chat,\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Chat);\r\n\r\n\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Internet.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\ViewFriend\\ViewFriend.js",["490","491","492"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getFriend } from '../../../api/actions/chat_action';\r\nimport TelegramIcon from '@material-ui/icons/Telegram';\r\n\r\nconst ViewFriend = ({match, UserData}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const data = match.params.search || null;\r\n\r\n    const [DataFriend, setDataFriend] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n\r\n        let body = {\r\n            data : data\r\n        }\r\n\r\n        dispatch(getFriend(body))\r\n        .then(response => {\r\n            setDataFriend(response.payload);\r\n        })\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"friend_profile\">\r\n            <div>\r\n                <img src={DataFriend.image} />\r\n                <div className=\"friend_name\">{DataFriend.userName}</div>\r\n                <div className=\"friend_say\">{DataFriend.message}</div>\r\n                <Link to={`/main/ChatingRoom/${UserData._id}_${DataFriend._id}`}>\r\n                    <TelegramIcon />\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ViewFriend);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatingRoom.js",["493","494","495","496","497","498","499","500","501","502","503","504","505","506","507"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport useChat from './useChat';\r\nimport { withRouter } from 'react-router-dom';\r\nimport TextsmsIcon from '@material-ui/icons/Textsms';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getChats } from '../../../api/actions/socket_action';\r\nimport '../../MainPage/Main.scss';\r\nimport { checkMember } from '../../../api/actions/chat_action';\r\nimport axios from 'axios';\r\n\r\nconst ChatingRoom = ({match, UserData, checktUpdate, setchecktUpdate }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [roomId, setroomId] = useState(match.params.search);\r\n    const [Body, setBody] = useState(\"\");\r\n    const [changeRoom, setchangeRoom] = useState(\"\")\r\n\r\n    const { Messages, sendMessage, setId } = useChat(changeRoom, checktUpdate, setchecktUpdate);\r\n    const [newMessage, setnewMessage] = useState(\"\");\r\n    const [Write, setWrite] = useState(\"\")\r\n    let anoter =\"\";\r\n    let mesaagesEnd;\r\n\r\n    // const roomId = match.params.search;\r\n    const checkMembers = match.params.search.split('_');\r\n    useEffect(() => {\r\n        let body = {\r\n            roomId : roomId,\r\n            userId : UserData._id\r\n        }\r\n        axios.post('/api/chats/changeMes',body)\r\n\r\n        setchecktUpdate(!checktUpdate)\r\n    }, [])\r\n    useEffect(() => {\r\n        setchecktUpdate(!checktUpdate)\r\n        \r\n        let body = {\r\n            roomId : roomId,\r\n            userId : UserData._id\r\n        }\r\n        axios.post('/api/chats/changeMes',body)\r\n\r\n    }, [UserData])\r\n\r\n    useEffect(()=>{\r\n        let member = {\r\n            one: checkMembers[0],\r\n            two: checkMembers[1],\r\n        };\r\n        dispatch(checkMember(member))\r\n            .then(response => {\r\n                if(match.params.search !== response.payload.url){\r\n                    window.location.assign(`/main/ChatingRoom/${response.payload.url}`);\r\n                    \r\n                }\r\n                else{\r\n                    setroomId(response.payload.url)\r\n                    setBody({\r\n                        roomId: response.payload.url\r\n                    })\r\n\r\n                }\r\n                \r\n            })\r\n    },[match])\r\n    useEffect(()=>{\r\n        dispatch(getChats(Body))\r\n            .then(response => {\r\n                setStartData(response.payload);\r\n            })\r\n    },[Body])\r\n    useEffect(()=>{\r\n        setchangeRoom(roomId);\r\n    },[roomId])\r\n    \r\n    const [StartData, setStartData] = useState([])\r\n    \r\n    const onDoingTyping = (event) => {\r\n        setnewMessage(event.target.value);\r\n        setWrite(`${UserData.userId}님이 작성중입니다....`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(newMessage===\"\"){\r\n            setWrite('');\r\n        }\r\n        setchecktUpdate(!checktUpdate)\r\n    }, [newMessage])\r\n\r\n    const onSubmitMessage = () => {\r\n        if(checkMembers[0] == UserData._id){\r\n            anoter = checkMembers[1];\r\n        }else{\r\n            anoter = checkMembers[0];\r\n        }\r\n        sendMessage(newMessage, UserData._id, changeRoom, UserData.userName, UserData.image, anoter);\r\n        setnewMessage(\"\");\r\n    }\r\n\r\n    const onKeyPress = (e) => {\r\n        if(e.key === 'Enter'){\r\n            onSubmitMessage();\r\n        }\r\n    };\r\n\r\n    const scrollRef = useRef();          \r\n    useEffect(() => {         \r\n        scrollRef.current.scrollIntoView({ behavior: 'smooth', block: 'end' });\r\n    },[ Messages, checktUpdate ]);\r\n\r\n    return (\r\n        <div className=\"chatting_area\">\r\n            <div className=\"chat_inside\">\r\n                <div className=\"chat_box\">\r\n                    <ol>\r\n                        {\r\n                            StartData.map((data)=>(\r\n                                data.sendUser._id === UserData._id ?\r\n                                <div className=\"talk_box\">\r\n                                    <div className=\"say\">\r\n                                        <span className=\"span_name\">{data.sendUser.userName}</span>\r\n                                        <span className=\"span_mess\">{data.message}</span>\r\n                                    </div>\r\n                                    <img className=\"user_img\" src={data.sendUser.image} />\r\n                                </div>\r\n                                :\r\n                                <div className=\"talk_box1\">\r\n                                    <img className=\"user_img1\" src={data.sendUser.image} />\r\n                                    <div className=\"say1\">\r\n                                        <span className=\"span_name1\">{data.sendUser.userName}</span>\r\n                                        <span className=\"span_mess1\">{data.message}</span>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        {\r\n                            Messages.map((message, i)=>(\r\n                                message.ownedByCurrentUser ? \r\n                                <div className=\"talk_box\">\r\n                                    <div className=\"say\">\r\n                                        <span className=\"span_name\">{UserData.userName}</span>\r\n                                        <span className=\"span_mess\">{message.message}</span>\r\n                                    </div>\r\n                                    <img className=\"user_img\" src={UserData.image} />\r\n                                </div>\r\n                                :\r\n                                <div className=\"talk_box1\">\r\n                                    <img className=\"user_img1\" src={message.image} />\r\n                                    <div className=\"say1\">\r\n                                        <span className=\"span_name1\">{message.userName}</span>\r\n                                        <span className=\"span_mess1\">{message.message}</span>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        <div\r\n                            ref={scrollRef}\r\n                        ></div>\r\n                    </ol>\r\n                </div>\r\n                \r\n            </div>\r\n            {/* <input\r\n                value={Write}\r\n            /> */}\r\n            {/* <div onChange={handleNewMessageChange}><TextsmsIcon />{UserData.userName}님이 작성중입니다....</div> */}\r\n            {/* <textarea \r\n                value={newMessage}\r\n                onChange={onDoingTyping}\r\n                placeholder=\"Write message...\"\r\n                className=\"new-message-input-field\"\r\n            /> */}\r\n            <div className=\"btns\">\r\n                <input\r\n                    className=\"chat_input\"\r\n                    value={newMessage}\r\n                    onChange={onDoingTyping}\r\n                    placeholder=\"메시지를 작성하세요\"\r\n                    onKeyPress={onKeyPress}\r\n                />\r\n                <button onClick={onSubmitMessage} className=\"send-message-button\" >\r\n                    Send\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ChatingRoom);","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatingList.js",["508","509","510","511","512"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\UpdateUser\\UpdateUser.js",["513","514","515","516","517"],"import React, {useState, useEffect} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { updateUser, uploadImage, uploadImageTmp } from \"../../../api/actions/user_action\";\r\nimport { Button } from '@material-ui/core';\r\nimport '../../MainPage/Main.scss';\r\n\r\nconst UpdateUser = ({UserData, history, setUpdate, Update}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [image, setImage] = useState(UserData.image);\r\n    const [FilePath, setFilePath] = useState(\"\")\r\n    const [inputs, setInputs] = useState({\r\n        nick: UserData.userNickName,\r\n        message: UserData.message,\r\n    })\r\n    const {nick, message} = inputs\r\n\r\n    useEffect(() => {\r\n        setInputs({\r\n            nick: UserData.userNickName,\r\n            message: UserData.message,\r\n        })\r\n    }, [UserData])\r\n    useEffect(() => {\r\n        setImage(UserData.image);\r\n    }, [UserData, image]);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const formData = new FormData();\r\n        console.log('온체인지파일',e.target.nick.value, e.target.message.value, e.target.profile_img.files[0])\r\n        formData.append('userId', UserData.userId)\r\n        formData.append('nick', e.target.nick.value)\r\n        formData.append('message', e.target.message.value)\r\n        formData.append('profile_img', e.target.profile_img.files[0])\r\n\r\n        dispatch(updateUser(formData))\r\n        .then(response=>{\r\n            history.push('/main/FriendList')\r\n            setUpdate(!Update)\r\n        })\r\n    }\r\n    const onChange = (e) => {\r\n        const {className, value} = e.target\r\n        const nextInputs = {\r\n            ...inputs,\r\n            [className] : value,\r\n        }\r\n        setInputs(nextInputs)\r\n    }\r\n\r\n    const btnstyle ={\r\n        margin : '18px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#845460'\r\n    }\r\n\r\n    return (\r\n        <div className=\"change_update\">\r\n            <div className=\"change\">프로필 수정</div>\r\n            <div className=\"form_change\">\r\n                <form onSubmit={onSubmit} encType=\"multipart/form-data\">\r\n                    <label className=\"profile_img_wrapper\" htmlFor=\"profile_img\">\r\n                        <img src={image} />\r\n                    </label>\r\n                    <input type=\"file\" name='profile_img' accept='image/jpg, image/png, image/jpeg, image/gif' multiple={false} />\r\n                    <input className=\"nick\" type=\"text\" value={nick} onChange={onChange} name=\"nick\"/>\r\n                    <input className=\"message\" type=\"text\" value={message} onChange={onChange} name=\"message\"/>\r\n                    <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>수정 완료</Button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(UpdateUser);","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\ShowFriend\\ShowFriend.js",["518","519","520"],"import React, {useEffect} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ShowFriend = React.memo(({UserData, ListFriend, ClickEvent, setClickEvent}) => {\r\n\r\n    if(ListFriend.Myfriend !== undefined){\r\n        return (\r\n            <div>\r\n                {\r\n                    ListFriend.Myfriend.map((friend)=>(\r\n                        <Link key={friend._id} to={`/main/ViewFriend/${friend.friendId}`} style={{textDecoration:'none',color:'#000'}}>\r\n                            <div className=\"myProfile\" key={friend._id}>\r\n                                <img src={friend.friendImage} />\r\n                                <div className=\"text_site\">\r\n                                    <div className=\"top\">{friend.friendName}</div>\r\n                                    <div className=\"bottom\">{friend.friendMessage}</div>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }else{\r\n        return (\r\n            <div>\r\n                <div>친구가 없습니다</div>\r\n            </div>\r\n        )\r\n    }\r\n})\r\n\r\nexport default withRouter(ShowFriend);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\SearchFriend.js",["521"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\MyProfile\\MyProfile.js",["522","523","524"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst MyProfile = React.memo(({UserData}) => {\r\n\r\n    return (\r\n        <div className=\"myfile\">\r\n            <Link to=\"/main/UpdateUser\">\r\n                <img src={UserData.image} />\r\n                <div className=\"text_site\">\r\n                    <div className=\"top\">{UserData.userName}</div>\r\n                    <div className=\"bottom\">{UserData.message}</div>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default withRouter(MyProfile);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\PlusFriend.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\Title\\LeftTitle.js",["525","526"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\socket_action.js",["527"],"import axios from 'axios';\r\n\r\nconst SOCKET_SEND = 'socket_send';\r\nconst SOCKET_RECEIVE = 'socket_receive'\r\nconst SOCKET_LIST = 'socket_list';\r\nconst SOCKET_CHATINFORM = 'socket_chatinform';\r\nconst SOCKET_FRIEND_PROFILE = 'socket_profile';\r\nconst SOCKET_COUNT = 'socket_count';\r\nconst SOCKET_ALL = 'socket_all';\r\nexport function getChats(dataToSubmit){\r\n    const request = axios.post('/api/chats/getChat',dataToSubmit)\r\n    .then(response => response.data)\r\n\r\n    return {\r\n        type :  SOCKET_SEND,\r\n        payload : request\r\n    }\r\n}\r\n\r\nexport function ListFind(dataToSubmit) {\r\n    const request = axios.post('/api/chats/ListShow', dataToSubmit)\r\n    .then(response => response.data)\r\n\r\n    return {\r\n        type : SOCKET_LIST,\r\n        payload : request\r\n    }\r\n}\r\n\r\nexport function ChatInform(dataToSubmit) {\r\n\r\n    const request = axios.post('/api/chats/textMessage',dataToSubmit)\r\n    .then(response => response.data)\r\n\r\n    return {\r\n        type : SOCKET_CHATINFORM,\r\n        payload : request\r\n    }\r\n}\r\n\r\nexport function FriendProfile(dataToSubmit) {\r\n    const request = axios.post('/api/chats/profiles',dataToSubmit)\r\n    .then(response => response.data)\r\n\r\n    return {\r\n        type : SOCKET_FRIEND_PROFILE,\r\n        payload : request\r\n    }\r\n}\r\n\r\nexport function CountHow(dataToSubmit){\r\n    const request = axios.post('/api/chats/countMessage',dataToSubmit)\r\n    .then(response => response.data )\r\n\r\n    return {\r\n        type : SOCKET_COUNT,\r\n        payload : request\r\n    }\r\n}\r\n\r\nexport function allChat(dataToSubmit){\r\n    const request = axios.post('/api/chats/total',dataToSubmit)\r\n    .then(response=> response.data )\r\n\r\n    return {\r\n        type : SOCKET_ALL,\r\n        payload : request\r\n    }\r\n}\r\n\r\n// export function receiveChat(data){\r\n\r\n//     return {\r\n//         type: SOCKET_RECEIVE,\r\n//         data\r\n//     }\r\n// }\r\n\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\AddBaner.js",["528","529"],"import React, { useState, useEffect } from 'react';\r\nimport '../../MainPage/Main.scss';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst AddBaner = () => {\r\n\r\n    const [Image, setImage] = useState(\"\");\r\n\r\n    const data = [\r\n        '/advertise/k-000.png',\r\n        '/advertise/k-001.png',\r\n        '/advertise/k-002.png',\r\n        '/advertise/k-003.png',\r\n        '/advertise/k-004.png',\r\n        '/advertise/k-005.png',\r\n        '/advertise/k-006.png',\r\n        '/advertise/k-007.png',\r\n        '/advertise/k-008.png',\r\n        '/advertise/k-009.png',\r\n        '/advertise/k-0010.png',\r\n        '/advertise/k-0011.png',\r\n    ]\r\n\r\n    useEffect(() => {\r\n        // 0~9 랜덤\r\n        const randomNum = Math.floor(Math.random()*10 + 1);\r\n        setImage(data[randomNum]);\r\n        console.log(randomNum);\r\n    }, [])\r\n    return (\r\n        <div className=\"big_ad\">\r\n            <img className=\"ad_ver\" src={Image} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(AddBaner);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatTitle.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\useChat.js",["530","531","532"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\chat_action.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\News\\News.js",["533"],"import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\nimport usePromise from '../../../../usePromise';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport NewsItem from './NewsItem';\r\n\r\nconst News = ({ UserData }) => {\r\n\r\n    const [Count, setCount] = useState(0);\r\n\r\n\r\n    const [loading, resolved, error] = usePromise(() => {\r\n        return axios.get(\r\n            `https://newsapi.org/v2/top-headlines?country=kr&apiKey=112d8e8b89e94be1a897eaffad725b6a`\r\n        );\r\n    }, [UserData]);\r\n\r\n    // 대기중 일때 실행\r\n    if (loading) {\r\n        return (\r\n            <LoadingOutlined className=\"loading\"/>\r\n        )\r\n    }\r\n    // 값이 없으면 null 값으로 반환\r\n    if (!resolved) {\r\n        return (\r\n            <div>뉴스오류</div>\r\n        );\r\n    }\r\n\r\n    // resolved값이 유효할 때\r\n    const { articles } = resolved.data;\r\n\r\n    return (\r\n        <div className=\"news_top\">\r\n            {articles.map((article)=>(\r\n                <NewsItem key={article.url} article={article} Count={Count} setCount={setCount}/>\r\n                ))}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default withRouter(News);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\ChatList\\Sections\\ChatCard.js",["534","535","536","537","538"],"import React from 'react';\r\nimport moment from 'moment';\r\nimport { Comment, Tooltip, Avatar } from 'antd';\r\n\r\nfunction ChatCard(props) {\r\n\r\n    const profileImgStyle ={\r\n        width: '50px',\r\n        height: '50px',\r\n        // overFit: 'cover',\r\n        borderRadius: '50%',\r\n    }\r\n    const imgStyle ={\r\n        width: '100px',\r\n    }\r\n    return (\r\n        <div>\r\n            <div style={{display: 'flex', flexDirection:'column'}}>\r\n                <div>{props.sender.userName}</div>\r\n                <img src={props.sender.image} style={profileImgStyle}/>\r\n                {/* <p>{props.message}</p> */}\r\n                {\r\n                props.message.substring(0,6)===\"/chats\" ?\r\n                props.message.substring(props.message.length - 3, props.message.length) === 'mp4' ?\r\n                <video \r\n                // src={`http://localhost:4000/${props.message}`} \r\n                src={props.message}\r\n                alt=\"video\"\r\n                type=\"video/mp4\" controls\r\n                />\r\n                :\r\n                <img \r\n                style={imgStyle}\r\n                // src={`http://localhost:4000/${props.message}`} \r\n                src={props.message}\r\n                alt=\"image\"\r\n                />\r\n                :\r\n                <p>{props.message}</p>\r\n                }\r\n                <div title={moment().format('YYYY-MM-DD HH:mm:ss')}>\r\n                        <span>{moment(props.sender.nowTime).format('YYYY-MM-DD HH:mm:ss')}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatCard\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\IntTitle\\IntTitle.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\Shop.js",["539","540"],"import React, { useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport ShopItem from './ShopItem';\r\nimport PayResult from './PayResult';\r\n\r\nconst Shop = ({location, match}) => {\r\n    function getUrlParams() {\r\n        var params = {};\r\n        location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(str, key, value) { params[key] = value; });\r\n        return params;\r\n    }\r\n    const query = getUrlParams();\r\n    const dataBase= [\r\n        {\r\n            image: '/shopping/shopping_1.png',\r\n            productName: '오트밀크로 만든 쫀득 수제 생초콜릿 5종(밀크/다크/녹차/인절미/누텔라)',\r\n            productPrice: 15900,\r\n            productDesc: '/shopping/shopping_1_desc.jpg',\r\n        },\r\n        {\r\n            image: '/shopping/shopping_2.jpg',\r\n            productName: '\"고마운분께 감사선물\" 하루견과 고마워요/사랑해요/감사해요 30입세트',\r\n            productPrice: 13900,\r\n            productDesc: '/shopping/shopping_2_desc.jpg',\r\n        },\r\n        {\r\n            image: '/shopping/shopping_3.jpg',\r\n            productName: '[디저트선물] 프랑스 프리미엄 마카롱 (12입)',\r\n            productPrice: 12500,\r\n            productDesc: '/shopping/shopping_3_desc.jpg',\r\n        },\r\n        {\r\n            image: '/shopping/shopping_4.jpg',\r\n            productName: '\"내마음은 하트\" 페레로로쉐 T8 하트 초콜릿',\r\n            productPrice: 8400,\r\n            productDesc: '/shopping/shopping_4_desc.jpg',\r\n        },\r\n    ]\r\n\r\n    const boxStyle = {\r\n      display: \"inline-block\",\r\n      width: \"43%\",\r\n      padding: \"10% 0 0\",\r\n      textDecoration: 'none',\r\n      color: 'inherit',\r\n      fontSize: '13px',\r\n    };\r\n\r\n    const titleStyle = {\r\n      display: \"-webkit-box\",\r\n      fontSize: \"12px\",\r\n      width: \"100%\",\r\n      height: \"35px\",\r\n      overflow: \"hidden\",\r\n      whiteSpace: 'normal',\r\n      textOverflow: \"ellipsis\",\r\n      margin: '3% 0 3%'\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"products_section\" style={{display: 'flex', justifyContent: 'space-around', flexWrap: 'wrap', width: '90%', margin: '0 auto'}}>\r\n                {match.params.select === undefined ?\r\n                query.item === undefined ? \r\n                //리스트\r\n                dataBase.map((productBox, index) => (\r\n                    // <Link to={`/main/Internet/Shop/${index+1}`} className=\"products_box\" style={boxStyle}>\r\n                    <Link to={`/main/Internet/Shop?item=${index}`} className=\"products_box\" style={boxStyle} key={index}>\r\n                        <img className=\"products_img\" src={productBox.image} style={{width: '100%'}}/>\r\n                        <div className=\"products_title\" style={titleStyle}>{productBox.productName}</div>\r\n                        <div className=\"products_price\" style={{fontWeight: '700'}}>{productBox.productPrice.toLocaleString()}원</div>\r\n                    </Link>\r\n                ))\r\n                :\r\n                //상품조회\r\n                <ShopItem key={query.item} productBox={dataBase[query.item]} querynum={query.item}/>\r\n                :\r\n                query.item === undefined ?\r\n                //결제승인\r\n                <PayResult/>\r\n                :\r\n                <div>페이지가 없습니다.</div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Shop);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\News\\NewsItem.js",["541","542","543"],"import React, {useEffect} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../../../MainPage/Main.scss';\r\n\r\nconst NewsItem = ({ article, Count, setCount }) => {\r\n\r\n    const { title, description, url, urlToImage } = article;\r\n\r\n    // if (Count % 3 === 0) {\r\n        return (\r\n            <div>\r\n                \r\n                    <div className=\"box_article\">\r\n                        <a href={url} target=\"_blank\" rel=\"noopner noreferrer\">\r\n                        {urlToImage ? \r\n                            <img src={urlToImage} alt=\"해당 기사 사진이 오류입니다\" />\r\n                            :\r\n                            <img src='/gyeran.png'/>\r\n                        }\r\n                            <span>{title}</span>\r\n                        </a>\r\n                    </div>\r\n               \r\n            </div>\r\n        )\r\n    // }else {\r\n    //     return (\r\n    //         <div>\r\n    //             <div>\r\n    //                 <a href={url} target=\"_blank\" rel=\"noopner noreferrer\">\r\n    //                     <span>{title}</span>\r\n    //                 </a>\r\n    //             </div>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n}\r\n\r\nexport default withRouter(NewsItem);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\ShopItem.js",["544","545","546","547","548"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n// import { payReady } from '../../../../api/actions/pay_action';\r\n\r\nconst ShopItem = ({productBox, querynum}) => {\r\n    const [state, setState] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n      setState({\r\n        // 응답에서 가져올 값들\r\n        next_redirect_pc_url: \"\",\r\n        tid: \"\",\r\n        // 요청에 넘겨줄 매개변수들\r\n        params: {\r\n          cid: \"TC0ONETIME\",\r\n          partner_order_id: \"partner_order_id\",\r\n          partner_user_id: \"partner_user_id\",\r\n          item_name: productBox.productName,\r\n          // item_name: productBox.title,\r\n          quantity: 1,\r\n          total_amount: productBox.productPrice,\r\n          // total_amount: 30000,\r\n          tax_free_amount: 0,\r\n          approval_url: \"http://localhost:3000/main/Internet/Shop/success\",\r\n          fail_url: \"http://localhost:3000/main/Internet/Shop/fail\",\r\n          cancel_url: \"http://localhost:3000/main/Internet/Shop/cancel\",\r\n        },\r\n      })\r\n    }, [productBox])\r\n\r\n    useEffect(()=>{\r\n      const { params } = state;\r\n      axios({\r\n        url: \"/v1/payment/ready\",\r\n        // 결제 준비 API는 POST 메소드라고 한다.\r\n        method: \"POST\",\r\n        headers: {\r\n          // 카카오 developers에 등록한 admin키를 헤더에 줘야 한다.\r\n          Authorization: \"KakaoAK ca4cd7847b43dd1a89e836e3ce896daf\",\r\n          \"Content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          // \"Access-Control-Allow-Origin\": \"http://localhost:3000\",\r\n        },\r\n        // 설정한 매개변수들\r\n        params,\r\n      }).then((response) => {\r\n        // 응답에서 필요한 data만 뽑는다.\r\n        const {\r\n          data: { next_redirect_pc_url, tid }\r\n        } = response;\r\n        console.log(next_redirect_pc_url);\r\n        console.log(tid);\r\n        // localstorage에 tid 저장\r\n        window.localStorage.setItem(\"tid\", tid);\r\n        // 응답 data로 state 갱신\r\n        setState({ next_redirect_pc_url, tid });\r\n      });\r\n    },[state]);\r\n  \r\n      const { next_redirect_pc_url} = state;\r\n      console.log('kakao', next_redirect_pc_url);\r\n\r\n    const wrapperStyle = {\r\n      display: 'flex',\r\n      position: 'relative',\r\n      alignItems: 'center',\r\n      margin: '5% 0 8%',\r\n    }\r\n\r\n    const payStyle = {\r\n      margin: '5% 0',\r\n      padding: '4%',\r\n      backgroundColor: '#fbf0b0',\r\n      borderRadius: '10px',\r\n      height: '30px',\r\n    }\r\n\r\n    return (\r\n        productBox !== undefined ?\r\n        <div style={{overflow:'scroll',height:'500px'}}>\r\n            <img className=\"products_img\" src={productBox.image} style={{width: '100%'}}/>\r\n            <div className=\"products_title\" style={{fontSize: '13px',  margin: '5% 0 3%', lineHeight: '1.8'}}>{productBox.productName}</div>\r\n            <div className=\"pay_wrapper\" style={wrapperStyle}>\r\n              <div className=\"products_price\" style={{display: 'inline-block', width: '65%', fontWeight: '700'}}>{productBox.productPrice.toLocaleString()}원</div>\r\n              <div className=\"img_wrapper\" style={{display: 'inline-block'}}><a href={ next_redirect_pc_url }>\r\n                  <img style={payStyle} src=\"/gayran_pay.png\" />\r\n              </a></div>\r\n            </div>\r\n            <img className=\"products_desc\" style={{width: '100%'}} src={productBox.productDesc}/>\r\n        </div>\r\n        :\r\n        <></>\r\n    )\r\n}\r\n\r\nexport default withRouter(ShopItem)\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\usePromise.js",["549","550"],"// usePromise.js\r\nimport {useState, useEffect} from 'react';\r\n\r\nexport default function usePromise(promiseCreator, deps){\r\n\r\n    const [loading, setLoading] = useState(false); // 대기중 일때\r\n    const [resolved, setResolved] = useState(null); // 완료 일때\r\n    const [error, setError] = useState(null); // 실패 일때\r\n\r\n    useEffect(()=>{\r\n        const process = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const resolved = await promiseCreator();\r\n                setResolved(resolved);\r\n            } catch (error) {\r\n                setError(error);\r\n            }\r\n            setLoading(false);\r\n        }\r\n        process();\r\n    },deps);\r\n\r\n    return [loading, resolved, error];\r\n} ","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Options\\Options.js",["551"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatItem.js",["552","553","554","555","556","557","558"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Options\\option\\Weather.js",["559","560","561","562","563"],"import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport usePromise from '../../../../usePromise';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Weather = ({UserData}) => {\r\n\r\n    const [state, setstate] = useState(\"\")\r\n\r\n    // api.openweathermap.org/data/2.5/weather?q=seoul&appid=3759cf2983458ec945fed258d8c987fb&units=imperial\r\n    const [loading, resolved, error] = usePromise(() => {\r\n        return axios.get(\r\n            `http://api.openweathermap.org/data/2.5/weather?q=seoul&appid=3759cf2983458ec945fed258d8c987fb`\r\n        );\r\n    }, [UserData]);\r\n\r\n    // 대기중 일때 실행\r\n    if (loading) {\r\n        return (\r\n            <LoadingOutlined className=\"loading\"/>\r\n        )\r\n    }\r\n    // 값이 없으면 null 값으로 반환\r\n    if (!resolved) {\r\n        return (\r\n            <div>날씨오류</div>\r\n        );\r\n    }\r\n\r\n    // resolved값이 유효할 때\r\n    const open = resolved;\r\n    const { weather } = resolved.data;\r\n    console.log(resolved);\r\n    return (\r\n        <div className=\"news_top\">\r\n            <div className=\"news_head\">\r\n                <img src={`http://openweathermap.org/img/wn/${weather[0].icon}.png`} />\r\n                <div className=\"news_weather\">\r\n                    <ul>\r\n                        <li>위치 : {resolved.data.name}</li>\r\n                        <li>날씨 : {weather[0].main}</li>\r\n                        <li>풍속 : {resolved.data.wind.speed}</li>\r\n                    </ul>\r\n                    \r\n                    \r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\Board.js",["564","565","566"],"import React, {useEffect, useState} from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport BoardList from './BoardList';\r\nimport BoardCreate from './BoardCreate';\r\nimport BoardDetail from './BoardDetail';\r\nimport BoardUpdate from './BoardUpdate';\r\n\r\nconst Board = ({match, UserData}) => {\r\n    // const [selection, setselection] = useState('BoardList');\r\n    // useEffect(() => {\r\n        //     console.log('selection', selection);\r\n        // }, [selection])\r\n    // const selection = match.params.select || 'BoardList';\r\n    const [selection, setSelection] = useState('BoardList');\r\n    const [process, setProcess] = useState('');\r\n    console.log('params', match.params);\r\n    useEffect(()=>{\r\n        setSelection(match.params.select);\r\n        console.log('selection', selection);\r\n    }, [match.params.select])\r\n    useEffect(()=>{\r\n        setProcess(match.params.process);\r\n        console.log('process', process);\r\n    }, [match.params.process])\r\n        return (\r\n        <div>\r\n            {selection === 'BoardList' || selection === undefined ? <BoardList UserData={UserData} selection={selection}/> \r\n            : selection === 'create' ? <BoardCreate UserData={UserData}/> \r\n            : process === 'update' ? <BoardUpdate UserData={UserData}/> \r\n            : <BoardDetail UserData={UserData} selection={selection} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Board);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardList.js",["567","568"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { getPosts } from '../../../../api/actions/post_action'\r\n// import { createPost } from './BoardCU'\r\nimport { Button } from \"@material-ui/core\";\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport './Board.scss';\r\n\r\nconst BoardList = ({match, UserData}) => {\r\n    const dispatch = useDispatch();\r\n    const [posts, setPosts] = useState('');\r\n\r\n    console.log('posts', posts);\r\n    useEffect(()=>{\r\n        dispatch(getPosts())\r\n        .then(res => {\r\n            setPosts(res.payload.posts);\r\n        })\r\n    }, [match.params]);\r\n\r\n    return (\r\n        <div className=\"wrapper\" style={{position: 'relative'}}>\r\n            <h3 className=\"board_title\">Egg 게시판</h3>\r\n            {/* <div style={{display: 'flex', justifyContent: 'flex-end'}}> */}\r\n            <div style={{position: 'absolute', top: -5, right: 0,}}>\r\n                <Link to=\"/main/Internet/posts/create\"><Button className=\"btn_style\" style={{backgroundColor: '#f6bd63', color: '#fff', marginRight: '5%'}}>글쓰기</Button></Link>\r\n            </div>\r\n            {posts.length !== 0 ? \r\n                posts.map(post => (\r\n                    <Link key={post._id} className=\"post_box\" to={`/main/Internet/posts/${post._id}`}>\r\n                        <div className=\"title_row\" >\r\n                            <div className=\"title_text\">{post.title}</div>\r\n                            <div className=\"img_wrapper\"><img className=\"list_profile_img\" src={post.writerData.image}/></div>\r\n                        </div>\r\n                        {/* <div className=\"body\">{post.body}</div> */}\r\n                    </Link>\r\n                ))\r\n                :\r\n                // <div>게시글이 없습니다.</div>\r\n                <LoadingOutlined className=\"loading\"/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(BoardList)\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardDetail.js",["569","570"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { deletePost, viewPost } from \"../../../../api/actions/post_action\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Link } from 'react-router-dom';\r\nimport './Board.scss'\r\nimport moment from 'moment';\r\nimport 'moment/locale/ko'; \r\n\r\nconst BoardDetail = ({UserData, match, history, selection}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [post, setPost] = useState('');\r\n\r\n    useEffect(() => {\r\n        dispatch(viewPost({UserData, selection}))\r\n        .then(res => {\r\n            console.log('detail', res.payload.post)\r\n            setPost(res.payload.post);\r\n        })\r\n        .then(res => {\r\n            console.log('aaaaaaaposts', post);\r\n        })\r\n    }, [selection]);\r\n\r\n    const onClick = (e) => {\r\n        dispatch(deletePost({UserData, selection}))\r\n        .then(res => {\r\n            history.push('/main/Internet/posts');\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        { post ?\r\n        <div className=\"wrapper\" style={{display: 'block', margin: '10%'}}>\r\n            <div className=\"writer_profile\" style={{display: 'flex', backgroundColor: 'rgb(214 211 211 / 52%)', padding: '5%', borderRadius: '10px'}}>\r\n                <img className=\"profile_imgStyle\" src={post.writerData.image}/>\r\n                <div className=\"profile_txtStyle\">{post.writerData.userNickName}</div>\r\n            </div>\r\n            <h3 className=\"form_group\" >{post.title}</h3>\r\n            <div className=\"form_group\" style={{margin: '15% 0'}}>{post.body}</div>\r\n            <div>{moment(post.createdAt).startOf('sec').fromNow()}</div>\r\n            <div style={{display: 'block', textAlign: 'center', marginTop: '15%'}}>\r\n                <Link to={`/main/Internet/posts/${post._id}/update`}>\r\n                    <Button style={{backgroundColor: '#f6bd63', color: '#fff', marginRight: '5%'}}>수정</Button>\r\n                </Link>\r\n                <Button style={{backgroundColor: 'rgba(182, 182, 182, 0.521)'}} onClick={onClick}>삭제</Button>\r\n            </div>\r\n        </div>\r\n        : <></>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BoardDetail\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\post_action.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardCreate.js",["571"],"import React, {useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { createPost } from '../../../../api/actions/post_action';\r\nimport { Button } from \"@material-ui/core\";\r\nimport './Board.scss';\r\n\r\nconst BoardCreate = ({UserData, match, history}) => {\r\n    const dispatch = useDispatch();\r\n    const selection = match.params.select;\r\n\r\n    const [inputs, setInputs] = useState({\r\n        title: '',\r\n        body: '',\r\n    });\r\n    \r\n    const {title, body} = inputs\r\n\r\n    const onChange = (e) => {\r\n        const {className, value} = e.target\r\n        const nextInputs = {\r\n            ...inputs,\r\n            [className] : value,\r\n        }\r\n        setInputs(nextInputs)\r\n    }\r\n    const onSubmitCreate = (e) => {\r\n        e.preventDefault();\r\n        const writerData = UserData;\r\n        // console.log('submit', title, body, UserData.userNickName);\r\n        dispatch(createPost({title, body, writerData}))\r\n        .then(res => {\r\n            history.push('/main/Internet/posts');\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            {/* <form action=\"/posts\" method=\"post\"> */}\r\n            <form onSubmit={onSubmitCreate}>\r\n                <div className=\"form_group\">\r\n                    <label htmlFor=\"title\">제목</label>\r\n                    <input type=\"text\" id=\"title\" name=\"title\" value={title} className=\"title\"\r\n                    onChange={onChange}/>\r\n                </div>\r\n                <div className=\"form_group\">\r\n                    <label htmlFor=\"body\">내용</label>\r\n                    <textarea id=\"body\" name=\"body\" rows=\"5\" value={body} className=\"body\"\r\n                    onChange={onChange}></textarea>\r\n                </div>\r\n                <div className=\"btn_group\">\r\n                    <Button type=\"submit\" className=\"btn btn_style\">제출</Button>\r\n                    <a className=\"btn btn_primary\" href=\"main/Internet/posts\"><Button>취소</Button></a>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(BoardCreate)\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardUpdate.js",["572","573"],"import React, {useEffect, useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { updatePost, viewPost } from '../../../../api/actions/post_action';\r\nimport { Button } from \"@material-ui/core\";\r\nimport './Board.scss';\r\n\r\nconst BoardUpdate = ({UserData, match, history}) => {\r\n    const dispatch = useDispatch();\r\n    const selection = match.params.select;\r\n    const process = match.params.process;\r\n\r\n    const [post, setPost] = useState('');\r\n\r\n    const [inputs, setInputs] = useState({\r\n        title: '',\r\n        body: '',\r\n    });\r\n    \r\n    const {title, body} = inputs;\r\n\r\n    useEffect(()=>{\r\n        console.log('update selection', selection);\r\n        dispatch(viewPost({UserData, selection, process}))\r\n        .then(res => {\r\n            console.log('detail', res.payload.post)\r\n            setPost(res.payload.post);\r\n            \r\n        })\r\n    }, [selection]);\r\n\r\n    useEffect(()=>{\r\n        setInputs({ title: post.title, body: post.body })\r\n    }, [post]);\r\n\r\n    const onChange = (e) => {\r\n        const {className, value} = e.target\r\n        const nextInputs = {\r\n            ...inputs,\r\n            [className] : value,\r\n        }\r\n        setInputs(nextInputs)\r\n    }\r\n    const onSubmitUpdate = (e) => {\r\n        e.preventDefault();\r\n        const Writer = UserData.userNickName;\r\n        dispatch(updatePost({title, body, selection}))\r\n        .then(res => {\r\n            history.push('/main/Internet/posts');\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <form onSubmit={onSubmitUpdate} >\r\n                <div className=\"form_group\">\r\n                    <label htmlFor=\"title\">제목</label>\r\n                    <input type=\"text\" id=\"title\" name=\"title\" value={title} className=\"title\"\r\n                    onChange={onChange}/>\r\n                </div>\r\n                <div className=\"form_group\">\r\n                    <label htmlFor=\"body\">내용</label>\r\n                    <textarea id=\"body\" name=\"body\" rows=\"5\" value={body} className=\"body\"\r\n                    onChange={onChange}></textarea>\r\n                </div>\r\n                <div className=\"btn_group\">\r\n                    <Button type=\"submit\" className=\"btn btn_style\">제출</Button>\r\n                    <a className=\"btn btn_primary\" href=\"main/Internet/posts\"><Button>취소</Button></a>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(BoardUpdate)\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\PayResult.js",["574","575","576","577"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\TV\\TV.js",[],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\index.js",[],["578","579"],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\App.js",[],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\reducers\\index.js",[],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LoginPage.js",["580","581","582"],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\RegisterPage.js",["583"],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\MainPage\\Main.js",["584","585"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './Main.scss';\r\nimport LeftPage from '../LeftPage/LeftPage';\r\nimport { getUser } from '../../api/actions/main_action';\r\n\r\nconst Main = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [UserData, setUserData] = useState(\"\");\r\n    // const [ListFriend, setListFriend] = useState(\"\");\r\n    const [Update, setUpdate] = useState(false);\r\n\r\n    // const onClickHandler = () =>{\r\n    //     axios.get('/api/users/logout')\r\n    //     .then(response => {\r\n    //         if(response.data.success){\r\n    //             props.history.push(\"/\");\r\n    //         }else{\r\n    //             alert('로그아웃 하는데 실패 했습니다.');\r\n    //         }\r\n    //     })\r\n    // }\r\n    \r\n    useEffect(()=>{\r\n        dispatch(getUser())\r\n        .then(response => {\r\n            setUserData(response.payload);\r\n        })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        dispatch(getUser())\r\n        .then(response => {\r\n            setUserData(response.payload);\r\n        })\r\n    }, [Update])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"box\">\r\n                <LeftPage props={props} UserData={UserData} Update={Update} setUpdate={setUpdate}/>\r\n                {/* <div className=\"right_side\">\r\n                    dddd\r\n                </div> */}\r\n                {/* <button style={{marginLeft:'10px'}} onClick={onClickHandler}>\r\n                    로그아웃\r\n                </button> */}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(Main);","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\auth\\auth.js",["586","587"],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\reducers\\user_reducer.js",["588"],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\reducers\\chat_reducer.js",["589"],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\reducers\\friend_reducer.js",["590"],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\reducers\\socket_reducer.js",["591","592"],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\actions\\user_action.js",[],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\actions\\main_action.js",[],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\actions\\friend_action.js",[],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\LeftPage.js",["593"],"import React, { useState, useEffect } from 'react';\r\nimport { withRouter, NavLink } from 'react-router-dom';\r\nimport '../MainPage/Main.scss';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport QuestionAnswerRoundedIcon from '@material-ui/icons/QuestionAnswerRounded';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport FriendList from './FriendList/FriendList.js';\r\nimport UpdateUser from './UpdateUser/UpdateUser';\r\n// import UpdateUser from './UpdateUser/UpdateUser_tmp';\r\n// import UpdateUser from './UpdateUser/UpdateTest';\r\nimport Internet from './Internet/Internet';\r\nimport ChatingList from './SocketList/ChatingList';\r\nimport ChatingRoom from './SocketList/ChatingRoom';\r\nimport ViewFriend from './ViewFriend/ViewFriend';\r\nimport Options from './Options/Options';\r\nimport { useDispatch } from 'react-redux';\r\nimport {allChat} from '../../api/actions/socket_action';\r\nimport useChat from '../LeftPage/SocketList/useChat';\r\nimport Bucket from './Bucket/Bucket';\r\n\r\nconst LeftPage = ({match, UserData, Update, setUpdate}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n// 잠시 ListFriend props에 빼고 밑에 FriendList 페이지에 상속 지움\r\n    const data = match.params.category || 'FriendList';\r\n\r\n    const [checktUpdate, setchecktUpdate] = useState(false);\r\n    const [MesCount, setMesCount] = useState(0)\r\n    const { Messages } = useChat();\r\n    \r\n    useEffect(() => {\r\n        let body = {\r\n            userId : UserData._id,\r\n        }\r\n        dispatch(allChat(body))\r\n        .then(response=>{\r\n            setMesCount(response.payload.number);\r\n            // console.log(response.data);\r\n        })\r\n    }, [ checktUpdate, data, Messages ])\r\n\r\n    return (\r\n        <div className=\"left_side\">\r\n            <div className=\"left_category\">\r\n                <NavLink className=\"default_active\" activeClassName=\"active\" to=\"/main/FriendList\">\r\n                    <PersonIcon style={{ fontSize: 30 }} />\r\n                </NavLink>\r\n                {/* <NavLink className=\"default_active\" activeClassName=\"active\" to=\"/main/ChatList\">\r\n                    <QuestionAnswerRoundedIcon style={{ fontSize: 30 }} />\r\n                </NavLink> */}\r\n                <NavLink className=\"default_active\" activeClassName=\"active\" to=\"/main/ChatingList\" style={{position: 'relative'}}>\r\n                    <QuestionAnswerRoundedIcon style={{ fontSize: 30 }} />\r\n                    {MesCount !== 0 ?\r\n                        <div className=\"unread_cnt\">{MesCount}</div>\r\n                        :\r\n                        <></>\r\n                    }\r\n                </NavLink>\r\n                <NavLink className=\"default_active\" activeClassName=\"active\" to=\"/main/Internet\">\r\n                    <LanguageIcon style={{ fontSize: 30 }} />\r\n                </NavLink>\r\n                <NavLink className=\"default_active\" activeClassName=\"active\" to=\"/main/Options\">\r\n                    <MoreHorizIcon style={{ fontSize: 30 }} />\r\n                </NavLink>\r\n            </div>\r\n            {data === 'FriendList' && <FriendList UserData={UserData} checktUpdate={checktUpdate} setchecktUpdate={setchecktUpdate} />}\r\n            {/* {data === 'ChatList' ? <Chat UserData={UserData}/> : null}       */}\r\n            {data === 'ChatingList' && <ChatingList UserData={UserData} checktUpdate={checktUpdate} setchecktUpdate={setchecktUpdate}/> }\r\n            {data === 'ChatingRoom' && <ChatingRoom UserData={UserData} checktUpdate={checktUpdate} setchecktUpdate={setchecktUpdate}/> }\r\n            {data === 'UpdateUser' && <UpdateUser UserData={UserData} Update={Update} setUpdate={setUpdate} /> }\r\n            {data === 'Internet' && <Internet UserData={UserData}/> }\r\n            {data === 'ViewFriend' && <ViewFriend UserData={UserData} /> }\r\n            {data === 'Options' && <Options UserData={UserData}/> }\r\n            {data === 'Bucket' && <Bucket UserData={UserData}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(LeftPage);\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\FriendList\\FriendList.js",["594","595","596","597","598","599"],"import React, { useState, useEffect, useCallback } from 'react';\r\nimport LeftTitle from './Title/LeftTitle';\r\nimport MyProfile from './MyProfile/MyProfile';\r\nimport PlusFriend from './PlusFriend/PlusFriend';\r\nimport { withRouter } from 'react-router-dom';\r\nimport SearchFriend from './PlusFriend/SearchFriend';\r\nimport { searchFriend, friendAdd } from '../../../api/actions/friend_action';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport ShowFriend from './ShowFriend/ShowFriend';\r\nimport { getFriendList } from '../../../api/actions/friend_action';\r\nimport { alreadyFriend } from '../../../api/actions/friend_action';\r\n\r\nconst FriendList = ({UserData, checktUpdate, setchecktUpdate}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [Search, setSearch] = useState(false);\r\n    const [Friend, setFriend] = useState(false);\r\n    const [FriendClick, setFriendClick] = useState(false);\r\n    const [InputText, setInputText] = useState(\"\");\r\n    const [InputText2, setInputText2] = useState(\"\");\r\n    const [friendDB, setfriendDB] = useState(\"\");\r\n    const [ListFriend, setListFriend] = useState(\"\");\r\n    const [ClickEvent, setClickEvent] = useState(false);\r\n\r\n    const onToggle = () =>{\r\n        setSearch(!Search);\r\n        setFriend(false);\r\n        setFriendClick(false);\r\n    }\r\n    const onToggle2 = () =>{\r\n        setFriend(!Friend);\r\n        setSearch(false);\r\n        setFriendClick(false);\r\n    }\r\n    const onToggle3 = () =>{\r\n        setFriendClick(!Friend);\r\n        setFriend(!Friend);\r\n        setSearch(false);\r\n    }\r\n    const onInputTextHandler = (e) =>{\r\n        setInputText(e.target.value);\r\n    }\r\n    const onInputTextHandler2 = (e) =>{\r\n        setInputText2(e.target.value);\r\n    }\r\n\r\n    const onPlustHandler = (e) =>{\r\n        let body = {\r\n            data : e,\r\n            user : UserData.userId\r\n        }\r\n        \r\n        dispatch(friendAdd(body))\r\n        .then(response => {\r\n            setClickEvent(!ClickEvent);\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setClickEvent(!ClickEvent);\r\n        setchecktUpdate(!checktUpdate);\r\n    },[UserData])\r\n\r\n    useEffect(()=>{\r\n        let body = {\r\n            userId : UserData.userId\r\n        }\r\n\r\n        dispatch(getFriendList(body))\r\n        .then(response => {\r\n            setListFriend(response.payload);\r\n        })\r\n    },[ClickEvent])\r\n\r\n    useEffect(() => {\r\n        if(InputText2 !== \"\"){\r\n            let body = {\r\n                data : InputText2\r\n            }\r\n            \r\n            dispatch(searchFriend(body))\r\n            .then(response => {\r\n                setfriendDB(response.payload);\r\n            })\r\n\r\n        }else{\r\n            setfriendDB(\"\");\r\n        }\r\n    }, [InputText2])\r\n\r\n    \r\n    return (\r\n        <div style={{height:'520px',overflow:'scroll'}}>\r\n            <LeftTitle \r\n                Search={Search}\r\n                Friend={Friend}\r\n                FriendClick={FriendClick}\r\n                InputText={InputText}\r\n                InputText2={InputText2}\r\n                onToggle={onToggle}\r\n                onToggle2={onToggle2}\r\n                onInputTextHandler={onInputTextHandler}\r\n                onInputTextHandler2={onInputTextHandler2}\r\n            />\r\n            <MyProfile\r\n                UserData={UserData}\r\n            />\r\n            {/* <div className=\"line\" /> */}\r\n            {InputText2.length === 0 ?\r\n                <PlusFriend\r\n                    onToggle3={onToggle3}\r\n                />\r\n                :\r\n                <SearchFriend\r\n                    friendDB={friendDB}\r\n                    UserData={UserData}\r\n                    onPlustHandler={onPlustHandler}\r\n                    ListFriend={ListFriend}\r\n                />\r\n            }\r\n            {/* <div className=\"line\" /> */}\r\n            <ShowFriend\r\n                UserData={UserData}\r\n                ListFriend={ListFriend}\r\n                setClickEvent={setClickEvent}\r\n                ClickEvent={ClickEvent}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(FriendList);\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\actions\\socket_action.js",["600"],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\ChatList\\Chat.js",["601","602"],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatingList.js",["603","604","605"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ChatTitle from './ChatTitle';\r\nimport AddBaner from './AddBaner';\r\nimport { ListFind } from '../../../api/actions/socket_action';\r\nimport ChatItem from './ChatItem';\r\n\r\nconst ChatingList = React.memo(({UserData, checktUpdate, setchecktUpdate}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [roomName, setRoomName ] = useState(\"\");\r\n    const [ListRoom, setListRoom] = useState([]);\r\n\r\n    const handleRoomNameChange = (event) => {\r\n        setRoomName(event.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let body = {\r\n            _id : UserData._id\r\n        }\r\n        dispatch(ListFind(body))\r\n        .then(response => {\r\n            setListRoom(response.payload);\r\n        });\r\n    }, [UserData, checktUpdate])\r\n    \r\n    // let renderChat = () => \r\n    //     ListRoom.map( (chat)=>(\r\n    //         <ChatItem key={chat} chat={chat} UserData={UserData} checktUpdate={checktUpdate} setchecktUpdate={setchecktUpdate}/>\r\n    //     ))\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <ChatTitle />\r\n            <AddBaner />\r\n            {\r\n                ListRoom.map( (chat)=>(\r\n                    <ChatItem key={chat} chat={chat} UserData={UserData} checktUpdate={checktUpdate} setchecktUpdate={setchecktUpdate}/>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default withRouter(ChatingList);","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatingRoom.js",["606","607","608","609","610","611","612","613","614","615","616","617"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport useChat from './useChat';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getChats } from '../../../api/actions/socket_action';\r\nimport '../../MainPage/Main.scss';\r\nimport { checkMember } from '../../../api/actions/chat_action';\r\nimport axios from 'axios';\r\n\r\nconst ChatingRoom = ({match, UserData, checktUpdate, setchecktUpdate }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [roomId, setroomId] = useState(match.params.search);\r\n    const [Body, setBody] = useState(\"\");\r\n    const [changeRoom, setchangeRoom] = useState(\"\")\r\n\r\n    const { Messages, sendMessage, setId } = useChat(changeRoom, checktUpdate, setchecktUpdate);\r\n    const [newMessage, setnewMessage] = useState(\"\");\r\n    const [Write, setWrite] = useState(\"\")\r\n    let anoter =\"\";\r\n\r\n    // const roomId = match.params.search;\r\n    const checkMembers = match.params.search.split('_');\r\n    useEffect(() => {\r\n        let body = {\r\n            roomId : roomId,\r\n            userId : UserData._id\r\n        }\r\n        axios.post('/api/chats/changeMes',body)\r\n\r\n        setchecktUpdate(!checktUpdate)\r\n    }, [])\r\n    useEffect(() => {\r\n        setchecktUpdate(!checktUpdate)\r\n        \r\n        let body = {\r\n            roomId : roomId,\r\n            userId : UserData._id\r\n        }\r\n        axios.post('/api/chats/changeMes',body)\r\n\r\n    }, [UserData])\r\n\r\n    useEffect(()=>{\r\n        let member = {\r\n            one: checkMembers[0],\r\n            two: checkMembers[1],\r\n        };\r\n        dispatch(checkMember(member))\r\n            .then(response => {\r\n                if(match.params.search !== response.payload.url){\r\n                    window.location.assign(`/main/ChatingRoom/${response.payload.url}`);\r\n                    \r\n                }\r\n                else{\r\n                    setroomId(response.payload.url)\r\n                    setBody({\r\n                        roomId: response.payload.url\r\n                    })\r\n\r\n                }\r\n                \r\n            })\r\n    },[match])\r\n    useEffect(()=>{\r\n        dispatch(getChats(Body))\r\n            .then(response => {\r\n                setStartData(response.payload);\r\n            })\r\n    },[Body])\r\n    useEffect(()=>{\r\n        setchangeRoom(roomId);\r\n    },[roomId])\r\n    \r\n    const [StartData, setStartData] = useState([])\r\n    \r\n    const onDoingTyping = (event) => {\r\n        setnewMessage(event.target.value);\r\n        setWrite(`${UserData.userId}님이 작성중입니다....`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(newMessage===\"\"){\r\n            setWrite('');\r\n        }\r\n        setchecktUpdate(!checktUpdate)\r\n    }, [newMessage])\r\n\r\n    const onSubmitMessage = () => {\r\n        if(checkMembers[0] == UserData._id){\r\n            anoter = checkMembers[1];\r\n        }else{\r\n            anoter = checkMembers[0];\r\n        }\r\n        sendMessage(newMessage, UserData._id, changeRoom, UserData.userName, UserData.image, anoter);\r\n        setnewMessage(\"\");\r\n    }\r\n\r\n    const onKeyPress = (e) => {\r\n        if(e.key === 'Enter'){\r\n            onSubmitMessage();\r\n        }\r\n    };\r\n\r\n    const scrollRef = useRef();          \r\n    useEffect(() => {         \r\n        scrollRef.current.scrollIntoView({ behavior: 'smooth', block: 'end' });\r\n    },[ Messages, checktUpdate ]);\r\n\r\n    return (\r\n        <div className=\"chatting_area\">\r\n            <div className=\"chat_inside\">\r\n                <div className=\"chat_box\">\r\n                    <ol>\r\n                        {\r\n                            StartData.map((data)=>(\r\n                                data.sendUser._id === UserData._id ?\r\n                                <div className=\"talk_box\">\r\n                                    <div className=\"say\">\r\n                                        <span className=\"span_name\">{data.sendUser.userName}</span>\r\n                                        <span className=\"span_mess\">{data.message}</span>\r\n                                    </div>\r\n                                    <img className=\"user_img\" src={data.sendUser.image} />\r\n                                </div>\r\n                                :\r\n                                <div className=\"talk_box1\">\r\n                                    <img className=\"user_img1\" src={data.sendUser.image} />\r\n                                    <div className=\"say1\">\r\n                                        <span className=\"span_name1\">{data.sendUser.userName}</span>\r\n                                        <span className=\"span_mess1\">{data.message}</span>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        {\r\n                            Messages.map((message, i)=>(\r\n                                message.ownedByCurrentUser ? \r\n                                <div className=\"talk_box\">\r\n                                    <div className=\"say\">\r\n                                        <span className=\"span_name\">{UserData.userName}</span>\r\n                                        <span className=\"span_mess\">{message.message}</span>\r\n                                    </div>\r\n                                    <img className=\"user_img\" src={UserData.image} />\r\n                                </div>\r\n                                :\r\n                                <div className=\"talk_box1\">\r\n                                    <img className=\"user_img1\" src={message.image} />\r\n                                    <div className=\"say1\">\r\n                                        <span className=\"span_name1\">{message.userName}</span>\r\n                                        <span className=\"span_mess1\">{message.message}</span>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        <div\r\n                            ref={scrollRef}\r\n                        ></div>\r\n                    </ol>\r\n                </div>\r\n                \r\n            </div>\r\n            {/* <input\r\n                value={Write}\r\n            /> */}\r\n            {/* <div onChange={handleNewMessageChange}><TextsmsIcon />{UserData.userName}님이 작성중입니다....</div> */}\r\n            {/* <textarea \r\n                value={newMessage}\r\n                onChange={onDoingTyping}\r\n                placeholder=\"Write message...\"\r\n                className=\"new-message-input-field\"\r\n            /> */}\r\n            <div className=\"btns\">\r\n                <input\r\n                    className=\"chat_input\"\r\n                    value={newMessage}\r\n                    onChange={onDoingTyping}\r\n                    placeholder=\"메시지를 작성하세요\"\r\n                    onKeyPress={onKeyPress}\r\n                />\r\n                <button onClick={onSubmitMessage} className=\"send-message-button\" >\r\n                    Send\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ChatingRoom);","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\SocketList\\useChat.js",["618","619"],"import React, {useEffect, useRef, useState} from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\n\r\nconst NEW_CHAT_MESSAGE_EVENT = 'newChatMessage';\r\nconst SOCKET_SERVER_URL = \"http://localhost:4000\";\r\n\r\nconst useChat = (roomId, checktUpdate, setchecktUpdate) => {\r\n\r\n    const [Messages, setMessages] = useState([]);\r\n    const socketRef = useRef();\r\n    \r\n    useEffect(() => {\r\n\r\n        // 웹소켓 연결을 한다\r\n        socketRef.current = socketIOClient(SOCKET_SERVER_URL,{\r\n            query : { roomId },\r\n        });\r\n\r\n        // 들어오는 메시지를 듣는다\r\n        socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, (message) => {\r\n            const incomingMessage = {\r\n                ...message,\r\n                ownedByCurrentUser : message.senderId === socketRef.current.id,\r\n            };\r\n            setMessages((messages)=>[...messages, incomingMessage]);\r\n            setchecktUpdate(!checktUpdate);\r\n        });\r\n\r\n        // 소켓 연결이 끝나면 부순다\r\n        return () => { \r\n            socketRef.current.disconnect();\r\n        }\r\n\r\n    }, [roomId])\r\n\r\n    // 같은 방에 있는 유저들에게 메세지를 전송한다\r\n    const sendMessage = (messageBody, Id, roomId, userName, image, anoter) => {\r\n        socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\r\n            message: messageBody,\r\n            senderId: socketRef.current.id,\r\n            sendUser : Id,\r\n            roomName : roomId,\r\n            userName : userName,\r\n            image : image,\r\n            user : Id,\r\n            toUser : anoter,\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return { Messages, sendMessage, checktUpdate, setchecktUpdate}\r\n}\r\n\r\nexport default useChat;","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Internet.js",[],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\UpdateUser\\UpdateUser.js",["620","621","622"],"import React, {useState, useEffect} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { updateUser } from \"../../../api/actions/user_action\";\r\nimport { Button } from '@material-ui/core';\r\nimport '../../MainPage/Main.scss';\r\n\r\nconst UpdateUser = ({UserData, history, setUpdate, Update}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [image, setImage] = useState(UserData.image);\r\n    const [FilePath, setFilePath] = useState(\"\")\r\n    const [inputs, setInputs] = useState({\r\n        nick: UserData.userNickName,\r\n        message: UserData.message,\r\n    })\r\n    const {nick, message} = inputs\r\n\r\n    useEffect(() => {\r\n        setInputs({\r\n            nick: UserData.userNickName,\r\n            message: UserData.message,\r\n        })\r\n    }, [UserData])\r\n    useEffect(() => {\r\n        setImage(UserData.image);\r\n    }, [UserData, image]);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const formData = new FormData();\r\n        console.log('온체인지파일',e.target.nick.value, e.target.message.value, e.target.profile_img.files[0])\r\n        formData.append('userId', UserData.userId)\r\n        formData.append('nick', e.target.nick.value)\r\n        formData.append('message', e.target.message.value)\r\n        formData.append('profile_img', e.target.profile_img.files[0])\r\n\r\n        dispatch(updateUser(formData))\r\n        .then(response=>{\r\n            history.push('/main/FriendList')\r\n            setUpdate(!Update)\r\n        })\r\n    }\r\n    const onChange = (e) => {\r\n        const {className, value} = e.target\r\n        const nextInputs = {\r\n            ...inputs,\r\n            [className] : value,\r\n        }\r\n        setInputs(nextInputs)\r\n    }\r\n\r\n    const btnstyle ={\r\n        margin : '18px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#845460'\r\n    }\r\n\r\n    return (\r\n        <div className=\"change_update\">\r\n            <div className=\"change\">프로필 수정</div>\r\n            <div className=\"form_change\">\r\n                <form onSubmit={onSubmit} encType=\"multipart/form-data\">\r\n                    <label className=\"profile_img_wrapper\" htmlFor=\"profile_img\">\r\n                        <img src={image} />\r\n                    </label>\r\n                    <input type=\"file\" name='profile_img' accept='image/jpg, image/png, image/jpeg, image/gif' multiple={false} />\r\n                    <input className=\"nick\" type=\"text\" value={nick} onChange={onChange} name=\"nick\"/>\r\n                    <input className=\"message\" type=\"text\" value={message} onChange={onChange} name=\"message\"/>\r\n                    <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>수정 완료</Button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(UpdateUser);","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Options\\Options.js",["623"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport TelegramIcon from '@material-ui/icons/Telegram';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport Weather from './option/Weather';\r\nimport {Link} from 'react-router-dom';\r\nimport '../../MainPage/Main.scss';\r\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\r\n\r\nconst Options = ({UserData}) => {\r\n\r\n    const onClickHandler = () =>{\r\n        axios.get('/api/users/logout')\r\n        .then(response => {\r\n            if(response.data.success){\r\n                window.location.assign('/');\r\n            }else{\r\n                alert('로그아웃 하는데 실패 했습니다.');\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"option_container\">\r\n            <div className=\"option_box\">\r\n                <div className=\"option_list1\">\r\n                    <Link to=\"/main/ChatingList\">\r\n                        <ul>\r\n                            <li><TelegramIcon /></li>\r\n                            <li>대화</li>\r\n                        </ul>\r\n                    </Link>\r\n                    <Link to=\"/main/FriendList\">\r\n                        <ul>\r\n                            <li><PeopleAltIcon /></li>\r\n                            <li>친구</li>\r\n                        </ul>\r\n                    </Link>\r\n                    <Link to=\"/main/Bucket\">\r\n                        <ul>\r\n                            <li><ShoppingBasketIcon /></li>\r\n                            <li>보관함</li>\r\n                        </ul>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"option_list2\">\r\n                    <Link to=\"/main/Internet/Shop\">\r\n                        <ul>\r\n                            <li><ShoppingCartIcon /></li>\r\n                            <li>쇼핑</li>\r\n                        </ul>\r\n                    </Link>\r\n                    <Link to=\"/main/Internet/TV\">\r\n                        <ul>\r\n                            <li><LiveTvIcon /></li>\r\n                            <li>TV</li>\r\n                        </ul>\r\n                    </Link>\r\n                    <Link to=\"/main/Internet/posts\">\r\n                        <ul>\r\n                            <li><ChatIcon /></li>\r\n                            <li>Board</li>\r\n                        </ul>\r\n                    </Link>\r\n                </div>\r\n                {/* <TelegramIcon /> 대화하기\r\n                <PeopleAltIcon /> 친구목록\r\n                <AnnouncementIcon /> 뉴스\r\n                <ShoppingCartIcon /> 쇼핑\r\n                <LiveTvIcon /> Egg TV\r\n                <ChatIcon /> Egg Board */}\r\n            </div>\r\n            \r\n            <Weather UserData={UserData}/>\r\n            <div className=\"egg_cont\">\r\n                <img className=\"egg_box\" src=\"/gyeran.png\" /><br/>\r\n                항상 계란톡을 이용해주셔서 감사합니다.\r\n            </div>\r\n            <button className=\"egg_log\" style={{marginLeft:'10px'}} onClick={onClickHandler}>\r\n                    로그아웃\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Options\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\ViewFriend\\ViewFriend.js",["624","625","626"],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\FriendList\\MyProfile\\MyProfile.js",["627"],"import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nconst MyProfile = React.memo(({UserData}) => {\r\n\r\n    return (\r\n        <div className=\"myfile\">\r\n            <Link to=\"/main/UpdateUser\">\r\n                <img src={UserData.image} />\r\n                <div className=\"text_site\">\r\n                    <div className=\"top\">{UserData.userName}</div>\r\n                    <div className=\"bottom\">{UserData.message}</div>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default withRouter(MyProfile);\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\SearchFriend.js",["628"],"import React from 'react';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport '../../../MainPage/Main.scss';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst SearchFriend = React.memo(({friendDB, UserData, onPlustHandler, ListFriend }) => {\r\n    console.log(ListFriend);\r\n    if(friendDB.friend){\r\n        if(friendDB.friend.length !== 0){ //검색결과 있을 때\r\n            return (\r\n                <div>\r\n                    {\r\n                        friendDB.friend.map((searched) => (\r\n                            // let searched = searched.filter(exceptsearch => exceptsearch.userId === UserData.userId)\r\n                            searched.userId !== UserData.userId ?   //검색결과에서 자신 제외\r\n                                <div className=\"myProfile\" key={searched.userId} onClick={()=>onPlustHandler(searched.userId)}>\r\n                                    <img src={searched.image} />\r\n                                    <div className=\"text_site\">\r\n                                        <div className=\"top\">{searched.userName}</div>\r\n                                        <div className=\"bottom\">{searched.message}</div>\r\n                                    </div>\r\n                                    <AddBoxIcon className=\"plus\"/>\r\n                                </div>\r\n                                :\r\n                                <div className=\"error_me\">검색결과가 없습니다</div>\r\n                        ))           \r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n        else{          //검색결과 없을 때\r\n            return(\r\n                <div className=\"plus_site\">검색 결과가 없습니다</div>\r\n            )\r\n        }\r\n    }else{          //검색결과 없을 때\r\n        return(\r\n            <div className=\"plus_site\">검색 결과가 없습니다</div>\r\n        )\r\n    }\r\n    \r\n    \r\n});\r\n\r\nexport default withRouter(SearchFriend);\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\FriendList\\Title\\LeftTitle.js",["629","630"],"import axios from 'axios';\r\nimport React, { useRef, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../../../MainPage/Main.scss';\r\nimport {\r\n    SearchOutlined,\r\n    UserAddOutlined\r\n} from '@ant-design/icons';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst LeftTitle = React.memo(({\r\n    Search,\r\n    Friend,\r\n    FriendClick,\r\n    InputText,\r\n    InputText2,\r\n    onToggle,\r\n    onToggle2,\r\n    onInputTextHandler,\r\n    onInputTextHandler2\r\n}) => {\r\n\r\n    const inputEl = useRef(null);\r\n    const inputEl2 = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if(Search) inputEl.current.focus();\r\n        if(Friend) inputEl2.current.focus();\r\n        if(FriendClick) inputEl2.current.focus();\r\n    }, [Search, Friend, FriendClick])\r\n\r\n    return (\r\n        <div className=\"left_title\">\r\n            <div>친구</div>\r\n            <div className=\"search_friend\">\r\n                {Search ? <div className=\"input_box\"><input type=\"text\" placeholder=\"친구검색\" value={InputText} ref={inputEl} onChange={onInputTextHandler} /><SearchIcon className=\"search_icon\" /></div> : null}\r\n                {Friend || FriendClick ? <div className=\"input_box\"><input type=\"text\" placeholder=\"친구추가\" value={InputText2} ref={inputEl2} onChange={onInputTextHandler2}/><SearchIcon className=\"search_icon\" /></div> : null}\r\n                {/* <SearchOutlined onClick={onToggle}/> */}\r\n                <UserAddOutlined onClick={onToggle2} className=\"add_friend\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default withRouter(LeftTitle);\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\PlusFriend.js",[],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\FriendList\\ShowFriend\\ShowFriend.js",["631","632","633"],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\actions\\chat_action.js",[],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Options\\option\\Weather.js",["634","635","636","637","638"],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\Board.js",["639","640","641"],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\TV\\TV.js",["642","643","644","645","646"],"import React, { useEffect, useState } from 'react'\r\nimport client from 'cheerio-httpcli'\r\nimport cheerio from 'cheerio'\r\nimport axios from 'axios'\r\n\r\nconst TV = () => {\r\n    //츄 검색\r\n    // const url = 'https://www.youtube.com/results?search_query=%EC%B8%84'\r\n    // const url = 'http://www.google.com/search';\r\n    // const word = '츄';\r\n    // const param = {};\r\n    // const [result, setResult] = useState('');\r\n\r\n    // client.fetch(url, {q:word}, function(err, $, res, body){\r\n    //     if(err){console.log(err); return}\r\n\r\n    //     // $('#video-title > yt-formatted-string').each(function(post){\r\n    //     //     console.log($(this).text());\r\n    //     // });\r\n    //     const alist = $('div.rc').find('.r').find('a');\r\n    //     for (let i = 0; i < alist.length; i++) {\r\n    //         console.log($(alist[i]).text());\r\n    //         console.log($(alist[i]).attr('href'));\r\n    //     }\r\n    // })\r\n    //\r\n    \r\n    // let $href = [];\r\n    // // axios.get(`https://www.youtube.com/results?search_query=%EC%B8%84`)\r\n    // axios.get(`https://news.naver.com/`)\r\n    // .then(dataa => {\r\n    //     console.log(dataa);\r\n    //     // const $ = cheerio.load(dataa.data);\r\n    //     // $('#video-title > yt-formatted-string').each((index, item) => { $href.push(item.attribs.href)});\r\n    // })\r\n\r\n    //됨\r\n    // async function getHTML() {\r\n    //     try {\r\n    //     //   return await axios.get(\"https://chaewonkong.github.io\");\r\n    //     return await axios.get(\"https://www.youtube.com/results?search_query=%EC%B8%84\");\r\n    //     } catch (error) {\r\n    //       console.error(error);\r\n    //     }\r\n    //   }\r\n    //     // getHTML 함수 실행 후 데이터에서\r\n    //     // body > main > div > section > ul > li > article > h2 > a\r\n    //     // 에 속하는 제목을 titleList에 저장\r\n    //   getHTML()\r\n    //   .then(html => {\r\n    //     let titleList = [];\r\n    //     const $ = cheerio.load(html.data);\r\n    //     // ul.list--posts를 찾고 그 children 노드를 bodyList에 저장\r\n    //     const bodyList = $(\"ul.list--posts\").children(\"li.item--post\");\r\n    \r\n    //     // bodyList를 순회하며 titleList에 h2 > a의 내용을 저장\r\n    //     bodyList.each(function(i, elem) {\r\n    //       titleList[i] = {\r\n    //         title: $(this)\r\n    //           .find(\"h2 a\")\r\n    //           .text()\r\n    //       };\r\n    //     });\r\n    //     return titleList;\r\n    //   })\r\n    //   .then(res => console.log(res)); // 저장된 결과를 출력\r\n      \r\n    //네이버웹툰- cors\r\n    // const axios = require(\"axios\");\r\n    // const cheerio = require(\"cheerio\");\r\n    // const client = require(\"cheerio-httpcli\");\r\n    // client.fetch(\r\n    //   \"http://comic.naver.com/webtoon/weekday.nhn\",\r\n    //   {},\r\n    //   function (err, $, res, body) {\r\n    //     var list = $(\".list_area .col_selected li\");\r\n    //     list.each(function () {\r\n    //       console.log($(this).find(\".title\").text()); // 제목을 검색해서 출력한다\r\n    //       console.log($(this).find(\"div.thumb a img\").attr(\"src\")); //이미지를 검색해서 출력한다\r\n    //     });\r\n    //   }\r\n    // );\r\n    axios.get('/api/videos')\r\n            .then(response => {\r\n                const { data } = response.data;\r\n                console.log('aaaaaaaaaa', response.data);\r\n            })\r\n    \r\n\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TV;","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\Shop.js",["647","648"],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\News\\News.js",["649"],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatItem.js",["650","651","652","653","654"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { ChatInform } from '../../../api/actions/socket_action';\r\nimport moment from 'moment';\r\nimport { FriendProfile } from '../../../api/actions/socket_action';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../../MainPage/Main.scss';\r\nimport useChat from './useChat';\r\nimport { CountHow } from '../../../api/actions/socket_action';\r\nimport 'moment/locale/ko'; \r\n\r\nconst ChatItem = ({ chat, UserData, checktUpdate, setchecktUpdate }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [Mes, setMes] = useState(\"\");\r\n    const [MatchUrl, setMatchUrl] = useState(\"\");\r\n    const [Fri, setFri] = useState(\"\");\r\n    const {Messages} = useChat(chat, checktUpdate, setchecktUpdate);\r\n    const [Num, setNum] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        let body ={\r\n            chat : chat,\r\n            userdata : UserData\r\n        }\r\n        dispatch(ChatInform(body))\r\n        .then(response => {\r\n            setMes(response.payload[0]);\r\n            setMatchUrl(response.payload[0].roomName.split('_'));\r\n            if(UserData._id===response.payload[0].roomName.split('_')[0]){\r\n                let body ={\r\n                    mem : response.payload[0].roomName.split('_')[1]\r\n                }\r\n                dispatch(FriendProfile(body))\r\n                .then(response => {\r\n                    setFri(response.payload[0])\r\n                })\r\n            }else{\r\n                let body ={\r\n                    mem : response.payload[0].roomName.split('_')[0]\r\n                }\r\n                dispatch(FriendProfile(body))\r\n                .then(response => {\r\n                    setFri(response.payload[0])\r\n                })\r\n            }\r\n        })\r\n    }, [ UserData, chat, Messages, checktUpdate ])\r\n\r\n    useEffect(() => {\r\n        let body = {\r\n            roomId : chat,\r\n            _id : UserData._id,\r\n        }\r\n        dispatch(CountHow(body))\r\n        .then(response => {\r\n            setNum(response.payload.number);\r\n        })\r\n        // axios.post('/api/chats/countMessage',body)\r\n        // .then(response => {\r\n        //     console.log(response)\r\n        // })\r\n    }, [ Messages, Fri ])\r\n\r\n    useEffect(() => {\r\n        setchecktUpdate(!checktUpdate)\r\n    }, [Num])\r\n\r\n    return (\r\n        <div className=\"talking\">\r\n            {\r\n                Mes && Fri &&\r\n                <Link to={`/main/ChatingRoom/${chat}`}>\r\n                    <div className=\"talk_site\">\r\n                        <img src={Fri.image} />\r\n                        <div className=\"talk_pro\">\r\n                            <span>\r\n                                {Fri.userName}\r\n                            </span><br/>\r\n                            <span className=\"talk_message\">\r\n                                {Mes.message}\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"talk_div\">\r\n                            <div className=\"talk_time\">\r\n                                {moment(Mes.date).format('A h:mm')}\r\n                            </div>\r\n                            <div className=\"talk_count\">\r\n                                {\r\n                                    Num !== 0 ?\r\n                                    Num\r\n                                    : <></>\r\n                                    }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n            }\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default withRouter(ChatItem);\r\n\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\IntTitle\\IntTitle.js",[],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\SocketList\\AddBaner.js",["655","656"],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatTitle.js",[],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\ChatList\\Sections\\ChatCard.js",["657","658","659","660","661"],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\News\\NewsItem.js",["662","663","664"],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\usePromise.js",["665","666"],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\PayResult.js",["667","668","669","670"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst PayResult= ({location, match, UserData}) => {\r\n    const [search, setSearch] = useState('');\r\n    const [state, setState] = useState({\r\n        params: {\r\n        cid: \"TC0ONETIME\",\r\n        // localstorage에서 tid값을 읽어온다.\r\n        tid: window.localStorage.getItem(\"tid\"),\r\n        partner_order_id: \"partner_order_id\",\r\n        partner_user_id: \"partner_user_id\",\r\n        // pg_token: \"\",\r\n        pg_token: location.search.split(\"=\")[1]\r\n        },\r\n    });\r\n\r\n    const payresult = match.params.select;\r\n    // url에 붙어서 온 pg_token을 결제 API에 줄 params에 할당\r\n    // params.pg_token = search.split(\"=\")[1];\r\n    \r\n    useEffect(()=>{\r\n        // setState({pg_token: location.search.split(\"=\")[1]});\r\n        const { params } = state;\r\n        console.log('params', params);\r\n        console.log('result state', state);\r\n        console.log('aa', state.params.pg_token);\r\n        if(state.params.pg_token !== undefined){\r\n            axios({\r\n            url: \"/v1/payment/approve\",\r\n            method: \"POST\",\r\n            headers: {\r\n                Authorization: \"KakaoAK ca4cd7847b43dd1a89e836e3ce896daf\",\r\n                \"Content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n            },\r\n            params,\r\n            }).then((response) => {\r\n            // 결제 승인에 대한 응답 출력\r\n            console.log(response);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n\r\n    return (\r\n      <div style={{textAlign: 'center'}}>\r\n        {payresult === 'success' && <h4>결제에 성공하였습니다.</h4>}\r\n        {payresult === 'fail' && <h4>결제에 실패하였습니다.</h4>}\r\n        {payresult === 'cancel' && <h4>결제를 취소하였습니다.</h4>}        \r\n        <Link to=\"/main/Internet/Shop\"><Button>쇼핑으로 돌아가기</Button></Link>\r\n      </div>\r\n    );\r\n}\r\nexport default withRouter(PayResult);","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\ShopItem.js",["671","672","673","674","675"],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardDetail.js",["676","677"],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardUpdate.js",["678","679"],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardList.js",["680","681"],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardCreate.js",["682"],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\actions\\post_action.js",[],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Bucket\\Bucket.js",["683"],"import React from 'react';\r\nimport '../../MainPage/Main.scss';\r\n\r\nconst Bucket = ({UserData}) => {\r\n    return (\r\n        <div className=\"option_type\">\r\n            <div className=\"type_profile\">\r\n                <img src={UserData.image} />\r\n                <div className=\"type_text\">{UserData.userName}({UserData.userId})님의<br />장바구니</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bucket;\r\n",{"ruleId":"684","replacedBy":"685"},{"ruleId":"686","replacedBy":"687"},{"ruleId":"688","severity":1,"message":"689","line":6,"column":31,"nodeType":"690","messageId":"691","endLine":6,"endColumn":40},{"ruleId":"692","severity":1,"message":"693","line":100,"column":21,"nodeType":"694","endLine":100,"endColumn":72},{"ruleId":"692","severity":1,"message":"693","line":101,"column":50,"nodeType":"694","endLine":101,"endColumn":103},{"ruleId":"695","severity":1,"message":"696","line":5,"column":1,"nodeType":"697","endLine":44,"endColumn":2},{"ruleId":"698","severity":1,"message":"699","line":38,"column":12,"nodeType":"700","endLine":38,"endColumn":14,"suggestions":"701"},{"ruleId":"688","severity":1,"message":"702","line":5,"column":23,"nodeType":"690","messageId":"691","endLine":5,"endColumn":29},{"ruleId":"688","severity":1,"message":"703","line":8,"column":10,"nodeType":"690","messageId":"691","endLine":8,"endColumn":23},{"ruleId":"688","severity":1,"message":"704","line":18,"column":11,"nodeType":"690","messageId":"691","endLine":18,"endColumn":25},{"ruleId":"698","severity":1,"message":"705","line":34,"column":7,"nodeType":"700","endLine":34,"endColumn":9,"suggestions":"706"},{"ruleId":"698","severity":1,"message":"705","line":41,"column":8,"nodeType":"700","endLine":41,"endColumn":16,"suggestions":"707"},{"ruleId":"695","severity":1,"message":"696","line":10,"column":1,"nodeType":"697","endLine":31,"endColumn":2},{"ruleId":"695","severity":1,"message":"696","line":5,"column":1,"nodeType":"697","endLine":16,"endColumn":2},{"ruleId":"688","severity":1,"message":"708","line":2,"column":7,"nodeType":"690","messageId":"691","endLine":2,"endColumn":21},{"ruleId":"695","severity":1,"message":"696","line":9,"column":1,"nodeType":"697","endLine":30,"endColumn":2},{"ruleId":"695","severity":1,"message":"696","line":5,"column":1,"nodeType":"697","endLine":16,"endColumn":2},{"ruleId":"688","severity":1,"message":"709","line":2,"column":31,"nodeType":"690","messageId":"691","endLine":2,"endColumn":36},{"ruleId":"688","severity":1,"message":"710","line":9,"column":8,"nodeType":"690","messageId":"691","endLine":9,"endColumn":12},{"ruleId":"688","severity":1,"message":"711","line":18,"column":10,"nodeType":"690","messageId":"691","endLine":18,"endColumn":21},{"ruleId":"688","severity":1,"message":"712","line":19,"column":8,"nodeType":"690","messageId":"691","endLine":19,"endColumn":13},{"ruleId":"698","severity":1,"message":"713","line":43,"column":8,"nodeType":"700","endLine":43,"endColumn":40,"suggestions":"714"},{"ruleId":"688","severity":1,"message":"715","line":1,"column":38,"nodeType":"690","messageId":"691","endLine":1,"endColumn":49},{"ruleId":"688","severity":1,"message":"711","line":8,"column":22,"nodeType":"690","messageId":"691","endLine":8,"endColumn":33},{"ruleId":"688","severity":1,"message":"716","line":11,"column":10,"nodeType":"690","messageId":"691","endLine":11,"endColumn":23},{"ruleId":"698","severity":1,"message":"717","line":63,"column":7,"nodeType":"700","endLine":63,"endColumn":17,"suggestions":"718"},{"ruleId":"698","severity":1,"message":"719","line":74,"column":7,"nodeType":"700","endLine":74,"endColumn":19,"suggestions":"720"},{"ruleId":"698","severity":1,"message":"705","line":90,"column":8,"nodeType":"700","endLine":90,"endColumn":20,"suggestions":"721"},{"ruleId":"688","severity":1,"message":"722","line":1,"column":17,"nodeType":"690","messageId":"691","endLine":1,"endColumn":25},{"ruleId":"723","severity":1,"message":"724","line":76,"column":24,"nodeType":"725","messageId":"726","endLine":76,"endColumn":36,"fix":"727"},{"ruleId":"688","severity":1,"message":"712","line":1,"column":8,"nodeType":"690","messageId":"691","endLine":1,"endColumn":13},{"ruleId":"698","severity":1,"message":"728","line":27,"column":8,"nodeType":"700","endLine":27,"endColumn":10,"suggestions":"729"},{"ruleId":"692","severity":1,"message":"693","line":32,"column":17,"nodeType":"694","endLine":32,"endColumn":47},{"ruleId":"688","severity":1,"message":"730","line":4,"column":8,"nodeType":"690","messageId":"691","endLine":4,"endColumn":19},{"ruleId":"688","severity":1,"message":"711","line":5,"column":23,"nodeType":"690","messageId":"691","endLine":5,"endColumn":34},{"ruleId":"688","severity":1,"message":"731","line":18,"column":36,"nodeType":"690","messageId":"691","endLine":18,"endColumn":41},{"ruleId":"688","severity":1,"message":"732","line":20,"column":12,"nodeType":"690","messageId":"691","endLine":20,"endColumn":17},{"ruleId":"688","severity":1,"message":"733","line":22,"column":9,"nodeType":"690","messageId":"691","endLine":22,"endColumn":20},{"ruleId":"698","severity":1,"message":"734","line":34,"column":8,"nodeType":"700","endLine":34,"endColumn":10,"suggestions":"735"},{"ruleId":"698","severity":1,"message":"736","line":44,"column":8,"nodeType":"700","endLine":44,"endColumn":18,"suggestions":"737"},{"ruleId":"698","severity":1,"message":"738","line":66,"column":7,"nodeType":"700","endLine":66,"endColumn":14,"suggestions":"739"},{"ruleId":"698","severity":1,"message":"705","line":72,"column":7,"nodeType":"700","endLine":72,"endColumn":13,"suggestions":"740"},{"ruleId":"698","severity":1,"message":"741","line":89,"column":8,"nodeType":"700","endLine":89,"endColumn":20,"suggestions":"742"},{"ruleId":"743","severity":1,"message":"744","line":92,"column":28,"nodeType":"745","messageId":"746","endLine":92,"endColumn":30},{"ruleId":"692","severity":1,"message":"693","line":125,"column":37,"nodeType":"694","endLine":125,"endColumn":91},{"ruleId":"692","severity":1,"message":"693","line":129,"column":37,"nodeType":"694","endLine":129,"endColumn":92},{"ruleId":"692","severity":1,"message":"693","line":145,"column":37,"nodeType":"694","endLine":145,"endColumn":86},{"ruleId":"692","severity":1,"message":"693","line":149,"column":37,"nodeType":"694","endLine":149,"endColumn":86},{"ruleId":"688","severity":1,"message":"747","line":3,"column":10,"nodeType":"690","messageId":"691","endLine":3,"endColumn":14},{"ruleId":"688","severity":1,"message":"748","line":14,"column":12,"nodeType":"690","messageId":"691","endLine":14,"endColumn":20},{"ruleId":"688","severity":1,"message":"749","line":17,"column":11,"nodeType":"690","messageId":"691","endLine":17,"endColumn":31},{"ruleId":"698","severity":1,"message":"705","line":29,"column":8,"nodeType":"700","endLine":29,"endColumn":32,"suggestions":"750"},{"ruleId":"698","severity":1,"message":"751","line":47,"column":8,"nodeType":"700","endLine":47,"endColumn":22,"suggestions":"752"},{"ruleId":"688","severity":1,"message":"753","line":4,"column":22,"nodeType":"690","messageId":"691","endLine":4,"endColumn":33},{"ruleId":"688","severity":1,"message":"754","line":4,"column":35,"nodeType":"690","messageId":"691","endLine":4,"endColumn":49},{"ruleId":"688","severity":1,"message":"755","line":12,"column":12,"nodeType":"690","messageId":"691","endLine":12,"endColumn":20},{"ruleId":"688","severity":1,"message":"756","line":12,"column":22,"nodeType":"690","messageId":"691","endLine":12,"endColumn":33},{"ruleId":"692","severity":1,"message":"693","line":67,"column":25,"nodeType":"694","endLine":67,"endColumn":44},{"ruleId":"688","severity":1,"message":"757","line":1,"column":16,"nodeType":"690","messageId":"691","endLine":1,"endColumn":25},{"ruleId":"688","severity":1,"message":"711","line":3,"column":10,"nodeType":"690","messageId":"691","endLine":3,"endColumn":21},{"ruleId":"692","severity":1,"message":"693","line":15,"column":33,"nodeType":"694","endLine":15,"endColumn":65},{"ruleId":"692","severity":1,"message":"693","line":17,"column":37,"nodeType":"694","endLine":17,"endColumn":65},{"ruleId":"688","severity":1,"message":"712","line":2,"column":8,"nodeType":"690","messageId":"691","endLine":2,"endColumn":13},{"ruleId":"688","severity":1,"message":"711","line":4,"column":10,"nodeType":"690","messageId":"691","endLine":4,"endColumn":21},{"ruleId":"692","severity":1,"message":"693","line":11,"column":17,"nodeType":"694","endLine":11,"endColumn":45},{"ruleId":"688","severity":1,"message":"712","line":1,"column":8,"nodeType":"690","messageId":"691","endLine":1,"endColumn":13},{"ruleId":"688","severity":1,"message":"758","line":6,"column":5,"nodeType":"690","messageId":"691","endLine":6,"endColumn":19},{"ruleId":"688","severity":1,"message":"708","line":4,"column":7,"nodeType":"690","messageId":"691","endLine":4,"endColumn":21},{"ruleId":"698","severity":1,"message":"759","line":29,"column":8,"nodeType":"700","endLine":29,"endColumn":10,"suggestions":"760"},{"ruleId":"692","severity":1,"message":"693","line":32,"column":13,"nodeType":"694","endLine":32,"endColumn":51},{"ruleId":"688","severity":1,"message":"761","line":1,"column":8,"nodeType":"690","messageId":"691","endLine":1,"endColumn":13},{"ruleId":"688","severity":1,"message":"711","line":2,"column":10,"nodeType":"690","messageId":"691","endLine":2,"endColumn":21},{"ruleId":"698","severity":1,"message":"741","line":35,"column":8,"nodeType":"700","endLine":35,"endColumn":16,"suggestions":"762"},{"ruleId":"688","severity":1,"message":"763","line":13,"column":31,"nodeType":"690","messageId":"691","endLine":13,"endColumn":36},{"ruleId":"688","severity":1,"message":"764","line":3,"column":10,"nodeType":"690","messageId":"691","endLine":3,"endColumn":17},{"ruleId":"688","severity":1,"message":"765","line":3,"column":19,"nodeType":"690","messageId":"691","endLine":3,"endColumn":26},{"ruleId":"688","severity":1,"message":"702","line":3,"column":28,"nodeType":"690","messageId":"691","endLine":3,"endColumn":34},{"ruleId":"692","severity":1,"message":"693","line":20,"column":17,"nodeType":"694","endLine":20,"endColumn":72},{"ruleId":"766","severity":1,"message":"767","line":32,"column":17,"nodeType":"694","endLine":37,"endColumn":19},{"ruleId":"688","severity":1,"message":"722","line":1,"column":17,"nodeType":"690","messageId":"691","endLine":1,"endColumn":25},{"ruleId":"692","severity":1,"message":"693","line":69,"column":25,"nodeType":"694","endLine":69,"endColumn":103},{"ruleId":"688","severity":1,"message":"757","line":1,"column":16,"nodeType":"690","messageId":"691","endLine":1,"endColumn":25},{"ruleId":"688","severity":1,"message":"768","line":7,"column":20,"nodeType":"690","messageId":"691","endLine":7,"endColumn":31},{"ruleId":"692","severity":1,"message":"693","line":18,"column":29,"nodeType":"694","endLine":18,"endColumn":53},{"ruleId":"688","severity":1,"message":"747","line":3,"column":10,"nodeType":"690","messageId":"691","endLine":3,"endColumn":14},{"ruleId":"688","severity":1,"message":"769","line":4,"column":10,"nodeType":"690","messageId":"691","endLine":4,"endColumn":21},{"ruleId":"692","severity":1,"message":"693","line":82,"column":13,"nodeType":"694","endLine":82,"endColumn":91},{"ruleId":"692","severity":1,"message":"693","line":87,"column":19,"nodeType":"694","endLine":87,"endColumn":65},{"ruleId":"692","severity":1,"message":"693","line":90,"column":13,"nodeType":"694","endLine":90,"endColumn":98},{"ruleId":"698","severity":1,"message":"770","line":22,"column":7,"nodeType":"690","endLine":22,"endColumn":11},{"ruleId":"698","severity":1,"message":"771","line":22,"column":7,"nodeType":"690","endLine":22,"endColumn":11,"suggestions":"772"},{"ruleId":"692","severity":1,"message":"693","line":79,"column":17,"nodeType":"694","endLine":79,"endColumn":62},{"ruleId":"688","severity":1,"message":"711","line":2,"column":23,"nodeType":"690","messageId":"691","endLine":2,"endColumn":34},{"ruleId":"688","severity":1,"message":"712","line":10,"column":8,"nodeType":"690","messageId":"691","endLine":10,"endColumn":13},{"ruleId":"688","severity":1,"message":"773","line":19,"column":12,"nodeType":"690","messageId":"691","endLine":19,"endColumn":20},{"ruleId":"698","severity":1,"message":"705","line":50,"column":8,"nodeType":"700","endLine":50,"endColumn":36,"suggestions":"774"},{"ruleId":"698","severity":1,"message":"775","line":65,"column":8,"nodeType":"700","endLine":65,"endColumn":25,"suggestions":"776"},{"ruleId":"698","severity":1,"message":"741","line":69,"column":8,"nodeType":"700","endLine":69,"endColumn":13,"suggestions":"777"},{"ruleId":"692","severity":1,"message":"693","line":77,"column":25,"nodeType":"694","endLine":77,"endColumn":48},{"ruleId":"688","severity":1,"message":"778","line":8,"column":12,"nodeType":"690","messageId":"691","endLine":8,"endColumn":17},{"ruleId":"688","severity":1,"message":"779","line":8,"column":19,"nodeType":"690","messageId":"691","endLine":8,"endColumn":27},{"ruleId":"688","severity":1,"message":"763","line":11,"column":31,"nodeType":"690","messageId":"691","endLine":11,"endColumn":36},{"ruleId":"688","severity":1,"message":"780","line":31,"column":11,"nodeType":"690","messageId":"691","endLine":31,"endColumn":15},{"ruleId":"692","severity":1,"message":"693","line":37,"column":17,"nodeType":"694","endLine":37,"endColumn":88},{"ruleId":"688","severity":1,"message":"747","line":2,"column":10,"nodeType":"690","messageId":"691","endLine":2,"endColumn":14},{"ruleId":"698","severity":1,"message":"781","line":20,"column":8,"nodeType":"700","endLine":20,"endColumn":29,"suggestions":"782"},{"ruleId":"698","severity":1,"message":"783","line":24,"column":8,"nodeType":"700","endLine":24,"endColumn":30,"suggestions":"784"},{"ruleId":"698","severity":1,"message":"705","line":20,"column":8,"nodeType":"700","endLine":20,"endColumn":22,"suggestions":"785"},{"ruleId":"692","severity":1,"message":"693","line":34,"column":58,"nodeType":"694","endLine":34,"endColumn":121},{"ruleId":"698","severity":1,"message":"786","line":24,"column":8,"nodeType":"700","endLine":24,"endColumn":19,"suggestions":"787"},{"ruleId":"692","severity":1,"message":"693","line":38,"column":17,"nodeType":"694","endLine":38,"endColumn":80},{"ruleId":"688","severity":1,"message":"788","line":10,"column":11,"nodeType":"690","messageId":"691","endLine":10,"endColumn":20},{"ruleId":"698","severity":1,"message":"789","line":30,"column":8,"nodeType":"700","endLine":30,"endColumn":19,"suggestions":"790"},{"ruleId":"688","severity":1,"message":"791","line":46,"column":15,"nodeType":"690","messageId":"691","endLine":46,"endColumn":21},{"ruleId":"688","severity":1,"message":"792","line":8,"column":12,"nodeType":"690","messageId":"691","endLine":8,"endColumn":18},{"ruleId":"688","severity":1,"message":"793","line":8,"column":20,"nodeType":"690","messageId":"691","endLine":8,"endColumn":29},{"ruleId":"688","severity":1,"message":"794","line":9,"column":19,"nodeType":"690","messageId":"691","endLine":9,"endColumn":27},{"ruleId":"698","severity":1,"message":"795","line":45,"column":8,"nodeType":"700","endLine":45,"endColumn":10,"suggestions":"796"},{"ruleId":"684","replacedBy":"797"},{"ruleId":"686","replacedBy":"798"},{"ruleId":"688","severity":1,"message":"689","line":6,"column":31,"nodeType":"690","messageId":"691","endLine":6,"endColumn":40},{"ruleId":"692","severity":1,"message":"693","line":100,"column":21,"nodeType":"694","endLine":100,"endColumn":72},{"ruleId":"692","severity":1,"message":"693","line":101,"column":50,"nodeType":"694","endLine":101,"endColumn":103},{"ruleId":"688","severity":1,"message":"702","line":5,"column":23,"nodeType":"690","messageId":"691","endLine":5,"endColumn":29},{"ruleId":"698","severity":1,"message":"705","line":32,"column":7,"nodeType":"700","endLine":32,"endColumn":9,"suggestions":"799"},{"ruleId":"698","severity":1,"message":"705","line":39,"column":8,"nodeType":"700","endLine":39,"endColumn":16,"suggestions":"800"},{"ruleId":"695","severity":1,"message":"696","line":5,"column":1,"nodeType":"697","endLine":44,"endColumn":2},{"ruleId":"698","severity":1,"message":"699","line":38,"column":12,"nodeType":"700","endLine":38,"endColumn":14,"suggestions":"801"},{"ruleId":"695","severity":1,"message":"696","line":10,"column":1,"nodeType":"697","endLine":31,"endColumn":2},{"ruleId":"695","severity":1,"message":"696","line":5,"column":1,"nodeType":"697","endLine":16,"endColumn":2},{"ruleId":"695","severity":1,"message":"696","line":5,"column":1,"nodeType":"697","endLine":16,"endColumn":2},{"ruleId":"688","severity":1,"message":"708","line":2,"column":7,"nodeType":"690","messageId":"691","endLine":2,"endColumn":21},{"ruleId":"695","severity":1,"message":"696","line":9,"column":1,"nodeType":"697","endLine":30,"endColumn":2},{"ruleId":"698","severity":1,"message":"713","line":42,"column":8,"nodeType":"700","endLine":42,"endColumn":40,"suggestions":"802"},{"ruleId":"688","severity":1,"message":"715","line":1,"column":38,"nodeType":"690","messageId":"691","endLine":1,"endColumn":49},{"ruleId":"688","severity":1,"message":"711","line":8,"column":22,"nodeType":"690","messageId":"691","endLine":8,"endColumn":33},{"ruleId":"688","severity":1,"message":"716","line":11,"column":10,"nodeType":"690","messageId":"691","endLine":11,"endColumn":23},{"ruleId":"698","severity":1,"message":"717","line":63,"column":7,"nodeType":"700","endLine":63,"endColumn":17,"suggestions":"803"},{"ruleId":"698","severity":1,"message":"719","line":74,"column":7,"nodeType":"700","endLine":74,"endColumn":19,"suggestions":"804"},{"ruleId":"698","severity":1,"message":"705","line":90,"column":8,"nodeType":"700","endLine":90,"endColumn":20,"suggestions":"805"},{"ruleId":"688","severity":1,"message":"708","line":4,"column":7,"nodeType":"690","messageId":"691","endLine":4,"endColumn":21},{"ruleId":"688","severity":1,"message":"722","line":1,"column":17,"nodeType":"690","messageId":"691","endLine":1,"endColumn":25},{"ruleId":"723","severity":1,"message":"724","line":76,"column":24,"nodeType":"725","messageId":"726","endLine":76,"endColumn":36,"fix":"806"},{"ruleId":"688","severity":1,"message":"748","line":13,"column":12,"nodeType":"690","messageId":"691","endLine":13,"endColumn":20},{"ruleId":"688","severity":1,"message":"749","line":16,"column":11,"nodeType":"690","messageId":"691","endLine":16,"endColumn":31},{"ruleId":"698","severity":1,"message":"705","line":28,"column":8,"nodeType":"700","endLine":28,"endColumn":32,"suggestions":"807"},{"ruleId":"688","severity":1,"message":"731","line":17,"column":36,"nodeType":"690","messageId":"691","endLine":17,"endColumn":41},{"ruleId":"688","severity":1,"message":"732","line":19,"column":12,"nodeType":"690","messageId":"691","endLine":19,"endColumn":17},{"ruleId":"698","severity":1,"message":"734","line":32,"column":8,"nodeType":"700","endLine":32,"endColumn":10,"suggestions":"808"},{"ruleId":"698","severity":1,"message":"736","line":42,"column":8,"nodeType":"700","endLine":42,"endColumn":18,"suggestions":"809"},{"ruleId":"698","severity":1,"message":"738","line":64,"column":7,"nodeType":"700","endLine":64,"endColumn":14,"suggestions":"810"},{"ruleId":"698","severity":1,"message":"705","line":70,"column":7,"nodeType":"700","endLine":70,"endColumn":13,"suggestions":"811"},{"ruleId":"698","severity":1,"message":"741","line":87,"column":8,"nodeType":"700","endLine":87,"endColumn":20,"suggestions":"812"},{"ruleId":"743","severity":1,"message":"744","line":90,"column":28,"nodeType":"745","messageId":"746","endLine":90,"endColumn":30},{"ruleId":"692","severity":1,"message":"693","line":123,"column":37,"nodeType":"694","endLine":123,"endColumn":91},{"ruleId":"692","severity":1,"message":"693","line":127,"column":37,"nodeType":"694","endLine":127,"endColumn":92},{"ruleId":"692","severity":1,"message":"693","line":143,"column":37,"nodeType":"694","endLine":143,"endColumn":86},{"ruleId":"692","severity":1,"message":"693","line":147,"column":37,"nodeType":"694","endLine":147,"endColumn":86},{"ruleId":"688","severity":1,"message":"761","line":1,"column":8,"nodeType":"690","messageId":"691","endLine":1,"endColumn":13},{"ruleId":"698","severity":1,"message":"741","line":34,"column":8,"nodeType":"700","endLine":34,"endColumn":16,"suggestions":"813"},{"ruleId":"688","severity":1,"message":"755","line":12,"column":12,"nodeType":"690","messageId":"691","endLine":12,"endColumn":20},{"ruleId":"688","severity":1,"message":"756","line":12,"column":22,"nodeType":"690","messageId":"691","endLine":12,"endColumn":33},{"ruleId":"692","severity":1,"message":"693","line":67,"column":25,"nodeType":"694","endLine":67,"endColumn":44},{"ruleId":"692","severity":1,"message":"693","line":79,"column":17,"nodeType":"694","endLine":79,"endColumn":62},{"ruleId":"688","severity":1,"message":"712","line":1,"column":8,"nodeType":"690","messageId":"691","endLine":1,"endColumn":13},{"ruleId":"698","severity":1,"message":"728","line":27,"column":8,"nodeType":"700","endLine":27,"endColumn":10,"suggestions":"814"},{"ruleId":"692","severity":1,"message":"693","line":32,"column":17,"nodeType":"694","endLine":32,"endColumn":47},{"ruleId":"692","severity":1,"message":"693","line":9,"column":17,"nodeType":"694","endLine":9,"endColumn":45},{"ruleId":"692","severity":1,"message":"693","line":17,"column":37,"nodeType":"694","endLine":17,"endColumn":65},{"ruleId":"688","severity":1,"message":"712","line":1,"column":8,"nodeType":"690","messageId":"691","endLine":1,"endColumn":13},{"ruleId":"688","severity":1,"message":"758","line":6,"column":5,"nodeType":"690","messageId":"691","endLine":6,"endColumn":19},{"ruleId":"688","severity":1,"message":"757","line":1,"column":16,"nodeType":"690","messageId":"691","endLine":1,"endColumn":25},{"ruleId":"688","severity":1,"message":"711","line":3,"column":10,"nodeType":"690","messageId":"691","endLine":3,"endColumn":21},{"ruleId":"692","severity":1,"message":"693","line":15,"column":33,"nodeType":"694","endLine":15,"endColumn":65},{"ruleId":"688","severity":1,"message":"778","line":8,"column":12,"nodeType":"690","messageId":"691","endLine":8,"endColumn":17},{"ruleId":"688","severity":1,"message":"779","line":8,"column":19,"nodeType":"690","messageId":"691","endLine":8,"endColumn":27},{"ruleId":"688","severity":1,"message":"763","line":11,"column":31,"nodeType":"690","messageId":"691","endLine":11,"endColumn":36},{"ruleId":"688","severity":1,"message":"780","line":31,"column":11,"nodeType":"690","messageId":"691","endLine":31,"endColumn":15},{"ruleId":"692","severity":1,"message":"693","line":37,"column":17,"nodeType":"694","endLine":37,"endColumn":88},{"ruleId":"688","severity":1,"message":"747","line":2,"column":10,"nodeType":"690","messageId":"691","endLine":2,"endColumn":14},{"ruleId":"698","severity":1,"message":"781","line":20,"column":8,"nodeType":"700","endLine":20,"endColumn":29,"suggestions":"815"},{"ruleId":"698","severity":1,"message":"783","line":24,"column":8,"nodeType":"700","endLine":24,"endColumn":30,"suggestions":"816"},{"ruleId":"688","severity":1,"message":"757","line":1,"column":17,"nodeType":"690","messageId":"691","endLine":1,"endColumn":26},{"ruleId":"688","severity":1,"message":"722","line":1,"column":28,"nodeType":"690","messageId":"691","endLine":1,"endColumn":36},{"ruleId":"688","severity":1,"message":"817","line":2,"column":8,"nodeType":"690","messageId":"691","endLine":2,"endColumn":14},{"ruleId":"688","severity":1,"message":"818","line":3,"column":8,"nodeType":"690","messageId":"691","endLine":3,"endColumn":15},{"ruleId":"688","severity":1,"message":"819","line":85,"column":25,"nodeType":"690","messageId":"691","endLine":85,"endColumn":29},{"ruleId":"688","severity":1,"message":"722","line":1,"column":17,"nodeType":"690","messageId":"691","endLine":1,"endColumn":25},{"ruleId":"692","severity":1,"message":"693","line":69,"column":25,"nodeType":"694","endLine":69,"endColumn":103},{"ruleId":"688","severity":1,"message":"763","line":13,"column":31,"nodeType":"690","messageId":"691","endLine":13,"endColumn":36},{"ruleId":"688","severity":1,"message":"773","line":18,"column":12,"nodeType":"690","messageId":"691","endLine":18,"endColumn":20},{"ruleId":"698","severity":1,"message":"705","line":50,"column":8,"nodeType":"700","endLine":50,"endColumn":50,"suggestions":"820"},{"ruleId":"698","severity":1,"message":"775","line":65,"column":8,"nodeType":"700","endLine":65,"endColumn":25,"suggestions":"821"},{"ruleId":"698","severity":1,"message":"741","line":69,"column":8,"nodeType":"700","endLine":69,"endColumn":13,"suggestions":"822"},{"ruleId":"692","severity":1,"message":"693","line":77,"column":25,"nodeType":"694","endLine":77,"endColumn":48},{"ruleId":"698","severity":1,"message":"759","line":29,"column":8,"nodeType":"700","endLine":29,"endColumn":10,"suggestions":"823"},{"ruleId":"692","severity":1,"message":"693","line":32,"column":13,"nodeType":"694","endLine":32,"endColumn":51},{"ruleId":"688","severity":1,"message":"764","line":3,"column":10,"nodeType":"690","messageId":"691","endLine":3,"endColumn":17},{"ruleId":"688","severity":1,"message":"765","line":3,"column":19,"nodeType":"690","messageId":"691","endLine":3,"endColumn":26},{"ruleId":"688","severity":1,"message":"702","line":3,"column":28,"nodeType":"690","messageId":"691","endLine":3,"endColumn":34},{"ruleId":"692","severity":1,"message":"693","line":20,"column":17,"nodeType":"694","endLine":20,"endColumn":72},{"ruleId":"766","severity":1,"message":"767","line":32,"column":17,"nodeType":"694","endLine":37,"endColumn":19},{"ruleId":"688","severity":1,"message":"757","line":1,"column":16,"nodeType":"690","messageId":"691","endLine":1,"endColumn":25},{"ruleId":"688","severity":1,"message":"768","line":7,"column":20,"nodeType":"690","messageId":"691","endLine":7,"endColumn":31},{"ruleId":"692","severity":1,"message":"693","line":18,"column":29,"nodeType":"694","endLine":18,"endColumn":53},{"ruleId":"698","severity":1,"message":"770","line":22,"column":7,"nodeType":"690","endLine":22,"endColumn":11},{"ruleId":"698","severity":1,"message":"771","line":22,"column":7,"nodeType":"690","endLine":22,"endColumn":11,"suggestions":"824"},{"ruleId":"688","severity":1,"message":"792","line":8,"column":12,"nodeType":"690","messageId":"691","endLine":8,"endColumn":18},{"ruleId":"688","severity":1,"message":"793","line":8,"column":20,"nodeType":"690","messageId":"691","endLine":8,"endColumn":29},{"ruleId":"688","severity":1,"message":"794","line":9,"column":19,"nodeType":"690","messageId":"691","endLine":9,"endColumn":27},{"ruleId":"698","severity":1,"message":"795","line":45,"column":8,"nodeType":"700","endLine":45,"endColumn":10,"suggestions":"825"},{"ruleId":"688","severity":1,"message":"747","line":3,"column":10,"nodeType":"690","messageId":"691","endLine":3,"endColumn":14},{"ruleId":"688","severity":1,"message":"769","line":4,"column":10,"nodeType":"690","messageId":"691","endLine":4,"endColumn":21},{"ruleId":"692","severity":1,"message":"693","line":82,"column":13,"nodeType":"694","endLine":82,"endColumn":91},{"ruleId":"692","severity":1,"message":"693","line":87,"column":19,"nodeType":"694","endLine":87,"endColumn":65},{"ruleId":"692","severity":1,"message":"693","line":90,"column":13,"nodeType":"694","endLine":90,"endColumn":98},{"ruleId":"698","severity":1,"message":"786","line":24,"column":8,"nodeType":"700","endLine":24,"endColumn":19,"suggestions":"826"},{"ruleId":"692","severity":1,"message":"693","line":38,"column":17,"nodeType":"694","endLine":38,"endColumn":80},{"ruleId":"698","severity":1,"message":"789","line":30,"column":8,"nodeType":"700","endLine":30,"endColumn":19,"suggestions":"827"},{"ruleId":"688","severity":1,"message":"791","line":46,"column":15,"nodeType":"690","messageId":"691","endLine":46,"endColumn":21},{"ruleId":"698","severity":1,"message":"705","line":20,"column":8,"nodeType":"700","endLine":20,"endColumn":22,"suggestions":"828"},{"ruleId":"692","severity":1,"message":"693","line":34,"column":58,"nodeType":"694","endLine":34,"endColumn":121},{"ruleId":"688","severity":1,"message":"788","line":10,"column":11,"nodeType":"690","messageId":"691","endLine":10,"endColumn":20},{"ruleId":"692","severity":1,"message":"693","line":8,"column":17,"nodeType":"694","endLine":8,"endColumn":45},"no-native-reassign",["829"],"no-negated-in-lhs",["830"],"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["831"],"'Avatar' is defined but never used.","'getFriendList' is defined but never used.","'onClickHandler' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["832"],["833"],"'SOCKET_RECEIVE' is assigned a value but never used.","'Route' is defined but never used.","'Chat' is defined but never used.","'useSelector' is defined but never used.","'axios' is defined but never used.","React Hook useEffect has missing dependencies: 'UserData._id' and 'dispatch'. Either include them or remove the dependency array.",["834"],"'useCallback' is defined but never used.","'alreadyFriend' is defined but never used.","React Hook useEffect has missing dependencies: 'ClickEvent', 'checktUpdate', and 'setchecktUpdate'. Either include them or remove the dependency array. If 'setchecktUpdate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["835"],"React Hook useEffect has missing dependencies: 'UserData.userId' and 'dispatch'. Either include them or remove the dependency array.",["836"],["837"],"'useState' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"838","text":"839"},"React Hook useEffect has missing dependencies: 'data' and 'dispatch'. Either include them or remove the dependency array.",["840"],"'TextsmsIcon' is defined but never used.","'setId' is assigned a value but never used.","'Write' is assigned a value but never used.","'mesaagesEnd' is defined but never used.","React Hook useEffect has missing dependencies: 'UserData._id', 'checktUpdate', 'roomId', and 'setchecktUpdate'. Either include them or remove the dependency array. If 'setchecktUpdate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["841"],"React Hook useEffect has missing dependencies: 'checktUpdate', 'roomId', and 'setchecktUpdate'. Either include them or remove the dependency array. If 'setchecktUpdate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["842"],"React Hook useEffect has missing dependencies: 'checkMembers' and 'dispatch'. Either include them or remove the dependency array.",["843"],["844"],"React Hook useEffect has missing dependencies: 'checktUpdate' and 'setchecktUpdate'. Either include them or remove the dependency array. If 'setchecktUpdate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["845"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","'roomName' is assigned a value but never used.","'handleRoomNameChange' is assigned a value but never used.",["846"],"React Hook useEffect has missing dependencies: 'ListRoom', 'UserData', and 'setchecktUpdate'. Either include them or remove the dependency array.",["847"],"'uploadImage' is defined but never used.","'uploadImageTmp' is defined but never used.","'FilePath' is assigned a value but never used.","'setFilePath' is assigned a value but never used.","'useEffect' is defined but never used.","'SearchOutlined' is defined but never used.","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["848"],"'React' is defined but never used.",["849"],"'error' is assigned a value but never used.","'Comment' is defined but never used.","'Tooltip' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'description' is assigned a value but never used.","'useDispatch' is defined but never used.","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'promiseCreator'. Either include it or remove the dependency array. If 'promiseCreator' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["850"],"'MatchUrl' is assigned a value but never used.",["851"],"React Hook useEffect has missing dependencies: 'UserData._id', 'chat', and 'dispatch'. Either include them or remove the dependency array.",["852"],["853"],"'state' is assigned a value but never used.","'setstate' is assigned a value but never used.","'open' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'selection'. Either include it or remove the dependency array.",["854"],"React Hook useEffect has a missing dependency: 'process'. Either include it or remove the dependency array.",["855"],["856"],"React Hook useEffect has missing dependencies: 'UserData', 'dispatch', and 'post'. Either include them or remove the dependency array.",["857"],"'selection' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'UserData', 'dispatch', and 'process'. Either include them or remove the dependency array.",["858"],"'Writer' is assigned a value but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'setState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.",["859"],["829"],["830"],["860"],["861"],["862"],["863"],["864"],["865"],["866"],{"range":"867","text":"839"},["868"],["869"],["870"],["871"],["872"],["873"],["874"],["875"],["876"],["877"],"'client' is defined but never used.","'cheerio' is defined but never used.","'data' is assigned a value but never used.",["878"],["879"],["880"],["881"],["882"],["883"],["884"],["885"],["886"],"no-global-assign","no-unsafe-negation",{"desc":"887","fix":"888"},{"desc":"889","fix":"890"},{"desc":"891","fix":"892"},{"desc":"893","fix":"894"},{"desc":"895","fix":"896"},{"desc":"897","fix":"898"},{"desc":"899","fix":"900"},[2277,2277],"()",{"desc":"901","fix":"902"},{"desc":"903","fix":"904"},{"desc":"905","fix":"906"},{"desc":"907","fix":"908"},{"desc":"909","fix":"910"},{"desc":"911","fix":"912"},{"desc":"913","fix":"914"},{"desc":"915","fix":"916"},{"desc":"917","fix":"918"},{"desc":"919","fix":"920"},{"desc":"921","fix":"922"},{"desc":"923","fix":"924"},{"desc":"925","fix":"926"},{"desc":"927","fix":"928"},{"desc":"929","fix":"930"},{"desc":"931","fix":"932"},{"desc":"933","fix":"934"},{"desc":"935","fix":"936"},{"desc":"937","fix":"938"},{"desc":"939","fix":"940"},{"desc":"889","fix":"941"},{"desc":"891","fix":"942"},{"desc":"887","fix":"943"},{"desc":"893","fix":"944"},{"desc":"895","fix":"945"},{"desc":"897","fix":"946"},{"desc":"899","fix":"947"},[2277,2277],{"desc":"913","fix":"948"},{"desc":"903","fix":"949"},{"desc":"905","fix":"950"},{"desc":"907","fix":"951"},{"desc":"909","fix":"952"},{"desc":"911","fix":"953"},{"desc":"919","fix":"954"},{"desc":"901","fix":"955"},{"desc":"929","fix":"956"},{"desc":"931","fix":"957"},{"desc":"958","fix":"959"},{"desc":"925","fix":"960"},{"desc":"927","fix":"961"},{"desc":"917","fix":"962"},{"desc":"921","fix":"963"},{"desc":"939","fix":"964"},{"desc":"935","fix":"965"},{"desc":"937","fix":"966"},{"desc":"933","fix":"967"},"Update the dependencies array to be: [dispatch, props.history]",{"range":"968","text":"969"},"Update the dependencies array to be: [dispatch]",{"range":"970","text":"971"},"Update the dependencies array to be: [Update, dispatch]",{"range":"972","text":"973"},"Update the dependencies array to be: [checktUpdate, data, Messages, UserData._id, dispatch]",{"range":"974","text":"975"},"Update the dependencies array to be: [ClickEvent, UserData, checktUpdate, setchecktUpdate]",{"range":"976","text":"977"},"Update the dependencies array to be: [ClickEvent, UserData.userId, dispatch]",{"range":"978","text":"979"},"Update the dependencies array to be: [InputText2, dispatch]",{"range":"980","text":"981"},"Update the dependencies array to be: [data, dispatch]",{"range":"982","text":"983"},"Update the dependencies array to be: [UserData._id, checktUpdate, roomId, setchecktUpdate]",{"range":"984","text":"985"},"Update the dependencies array to be: [UserData, checktUpdate, roomId, setchecktUpdate]",{"range":"986","text":"987"},"Update the dependencies array to be: [checkMembers, dispatch, match]",{"range":"988","text":"989"},"Update the dependencies array to be: [Body, dispatch]",{"range":"990","text":"991"},"Update the dependencies array to be: [checktUpdate, newMessage, setchecktUpdate]",{"range":"992","text":"993"},"Update the dependencies array to be: [UserData, checktUpdate, dispatch]",{"range":"994","text":"995"},"Update the dependencies array to be: [ListRoom, UserData, checktUpdate, setchecktUpdate]",{"range":"996","text":"997"},"Update the dependencies array to be: [data]",{"range":"998","text":"999"},"Update the dependencies array to be: [checktUpdate, roomId, setchecktUpdate]",{"range":"1000","text":"1001"},"Update the dependencies array to be: [promiseCreator]",{"range":"1002","text":"1003"},"Update the dependencies array to be: [UserData, chat, Messages, dispatch]",{"range":"1004","text":"1005"},"Update the dependencies array to be: [Messages, Fri, chat, UserData._id, dispatch]",{"range":"1006","text":"1007"},"Update the dependencies array to be: [Num, checktUpdate, setchecktUpdate]",{"range":"1008","text":"1009"},"Update the dependencies array to be: [match.params.select, selection]",{"range":"1010","text":"1011"},"Update the dependencies array to be: [match.params.process, process]",{"range":"1012","text":"1013"},"Update the dependencies array to be: [dispatch, match.params]",{"range":"1014","text":"1015"},"Update the dependencies array to be: [UserData, dispatch, post, selection]",{"range":"1016","text":"1017"},"Update the dependencies array to be: [UserData, dispatch, process, selection]",{"range":"1018","text":"1019"},"Update the dependencies array to be: [state]",{"range":"1020","text":"1021"},{"range":"1022","text":"971"},{"range":"1023","text":"973"},{"range":"1024","text":"969"},{"range":"1025","text":"975"},{"range":"1026","text":"977"},{"range":"1027","text":"979"},{"range":"1028","text":"981"},{"range":"1029","text":"995"},{"range":"1030","text":"985"},{"range":"1031","text":"987"},{"range":"1032","text":"989"},{"range":"1033","text":"991"},{"range":"1034","text":"993"},{"range":"1035","text":"1001"},{"range":"1036","text":"983"},{"range":"1037","text":"1011"},{"range":"1038","text":"1013"},"Update the dependencies array to be: [UserData, chat, Messages, checktUpdate, dispatch]",{"range":"1039","text":"1040"},{"range":"1041","text":"1007"},{"range":"1042","text":"1009"},{"range":"1043","text":"999"},{"range":"1044","text":"1003"},{"range":"1045","text":"1021"},{"range":"1046","text":"1017"},{"range":"1047","text":"1019"},{"range":"1048","text":"1015"},[1182,1184],"[dispatch, props.history]",[1029,1031],"[dispatch]",[1180,1188],"[Update, dispatch]",[1735,1767],"[checktUpdate, data, Messages, UserData._id, dispatch]",[2102,2112],"[ClickEvent, UserData, checktUpdate, setchecktUpdate]",[2343,2355],"[ClickEvent, UserData.userId, dispatch]",[2710,2722],"[InputText2, dispatch]",[709,711],"[data, dispatch]",[1293,1295],"[UserData._id, checktUpdate, roomId, setchecktUpdate]",[1527,1537],"[UserData, checktUpdate, roomId, setchecktUpdate]",[2185,2192],"[checkMembers, dispatch, match]",[2354,2360],"[Body, dispatch]",[2781,2793],"[checktUpdate, newMessage, setchecktUpdate]",[904,928],"[UserData, checktUpdate, dispatch]",[1562,1576],"[ListRoom, UserData, checktUpdate, setchecktUpdate]",[820,822],"[data]",[1078,1086],"[checktUpdate, roomId, setchecktUpdate]",[664,668],"[promiseCreator]",[1845,1873],"[UserData, chat, Messages, dispatch]",[2263,2280],"[Messages, Fri, chat, UserData._id, dispatch]",[2355,2360],"[Num, checktUpdate, setchecktUpdate]",[816,837],"[match.params.select, selection]",[953,975],"[match.params.process, process]",[679,693],"[dispatch, match.params]",[788,799],"[UserData, dispatch, post, selection]",[936,947],"[UserData, dispatch, process, selection]",[1559,1561],"[state]",[965,967],[1116,1124],[1182,1184],[1689,1721],[2102,2112],[2343,2355],[2710,2722],[862,886],[1203,1205],[1437,1447],[2095,2102],[2264,2270],[2691,2703],[1034,1042],[709,711],[816,837],[953,975],[1839,1881],"[UserData, chat, Messages, checktUpdate, dispatch]",[2271,2288],[2363,2368],[820,822],[664,668],[1559,1561],[788,799],[936,947],[679,693]]