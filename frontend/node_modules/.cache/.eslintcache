[{"C:\\Users\\redqo\\Desktop\\react-backend\\frontend\\src\\index.js":"1","C:\\Users\\redqo\\Desktop\\react-backend\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\redqo\\Desktop\\react-backend\\frontend\\src\\App.js":"3","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\index.js":"4","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\App.js":"5","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\reportWebVitals.js":"6","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LoginPage.js":"7","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\RegisterPage.js":"8","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\index.js":"9","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\user_reducer.js":"10","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\user_action.js":"11","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\auth\\auth.js":"12","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\MainPage\\Main.js":"13","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\LeftPage.js":"14","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\Title\\LeftTitle.js":"15","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\MyProfile\\MyProfile.js":"16","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\FriendList.js":"17","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\ChatList\\ChatList.js":"18","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\main_action.js":"19","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\PlusFriend.js":"20","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\RegisterPage_tmp.js":"21"},{"size":500,"mtime":1616722518685,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1616722518685,"results":"24","hashOfConfig":"23"},{"size":107,"mtime":1619093953161,"results":"25","hashOfConfig":"23"},{"size":1062,"mtime":1619226324989,"results":"26","hashOfConfig":"27"},{"size":665,"mtime":1619396853100,"results":"28","hashOfConfig":"27"},{"size":375,"mtime":1619140719705,"results":"29","hashOfConfig":"27"},{"size":3913,"mtime":1619278838018,"results":"30","hashOfConfig":"27"},{"size":10980,"mtime":1619399157379,"results":"31","hashOfConfig":"27"},{"size":162,"mtime":1619357911187,"results":"32","hashOfConfig":"27"},{"size":984,"mtime":1619397271134,"results":"33","hashOfConfig":"27"},{"size":1623,"mtime":1619396617060,"results":"34","hashOfConfig":"27"},{"size":1417,"mtime":1619263190053,"results":"35","hashOfConfig":"27"},{"size":1339,"mtime":1619359104136,"results":"36","hashOfConfig":"27"},{"size":1448,"mtime":1619359177739,"results":"37","hashOfConfig":"27"},{"size":1715,"mtime":1619334889386,"results":"38","hashOfConfig":"27"},{"size":496,"mtime":1619393862357,"results":"39","hashOfConfig":"27"},{"size":560,"mtime":1619361972982,"results":"40","hashOfConfig":"27"},{"size":157,"mtime":1619345317079,"results":"41","hashOfConfig":"27"},{"size":266,"mtime":1619357976694,"results":"42","hashOfConfig":"27"},{"size":336,"mtime":1619364422137,"results":"43","hashOfConfig":"27"},{"size":11028,"mtime":1619396617060,"results":"44","hashOfConfig":"27"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pg51pb",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"c8e9fu",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"53"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"53"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"53"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"53"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"53"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"53"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"53"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\redqo\\Desktop\\react-backend\\frontend\\src\\index.js",[],"C:\\Users\\redqo\\Desktop\\react-backend\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\redqo\\Desktop\\react-backend\\frontend\\src\\App.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\index.js",[],["95","96"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\App.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LoginPage.js",["97","98","99"],"import React, {useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport { loginUser } from '../api/actions/user_action';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { Grid, Paper, Avatar, TextField, Button, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    customTextField: {\r\n      \"& input::placeholder\": {\r\n        color : '#fff',\r\n        fontWeight : 'bolder'\r\n      }\r\n    }\r\n})\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [UserId, setUserId] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n\r\n    const onUserIdHandler = (e) => {\r\n        setUserId(e.target.value);\r\n    }\r\n    const onPasswordHandler = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        let body = {\r\n            userId : UserId,\r\n            password : Password,\r\n        }\r\n\r\n        dispatch(loginUser(body))\r\n        .then(response => {\r\n            if(response.payload.loginSuccess){\r\n                props.history.push('/main');\r\n            }else{\r\n                alert('Error');\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const paperStyle = {\r\n        padding : 20,\r\n        height : '568px',\r\n        width : 280,\r\n        margin : '0 auto',\r\n        textAlign : 'center',\r\n        background : '#f6bd63',\r\n        position: 'absolute',\r\n        top:'50%',\r\n        left:'50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    }\r\n    const avatarStyle = {\r\n        width : '230px',\r\n        height : '90px',\r\n        margin: '10px 0 30px',\r\n        background : '#f6bd63',\r\n    }\r\n    const btnstyle = {\r\n        margin : '8px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#845460'\r\n    }\r\n    const imgstyle ={\r\n        width : '100%',\r\n        height : '100%',\r\n    }\r\n    const logostyle ={\r\n        width: '200px',\r\n        marginTop: '50px',\r\n    }\r\n    const inputstyle ={\r\n        width : '90%',\r\n        margin : '0 auto',\r\n        height : '30px',\r\n        marginBottom : '20px',\r\n        background : '#855460',\r\n        color : '#fff'\r\n    }\r\n    const linkstyle ={\r\n        color : '#fff',\r\n        fontWeight : 'bolder',\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid>\r\n            <Paper elevation={10} style={paperStyle} classes={{root:classes.customTextField}}>\r\n                <Grid align=\"center\">\r\n                    <img src=\"/text_transparent.png\" style={logostyle}></img>\r\n                    <Avatar style={avatarStyle} ><img src=\"/gyeran_height_cut.png\" style={imgstyle} /></Avatar>\r\n\r\n                </Grid>\r\n                <form onSubmit={onSubmitHandler}>\r\n                    <input style={inputstyle} type=\"text\" label=\"UserId\" placeholder=\"Enter UserId\" value={UserId} onChange={onUserIdHandler} required/>\r\n                    <input style={inputstyle} type=\"password\" label=\"Password\" placeholder=\"Enter Password\" value={Password} onChange={onPasswordHandler} required/>\r\n                    {/* <FormControlLabel \r\n                        control={\r\n                            <Checkbox\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Remember Me\"\r\n                    /> */}\r\n                    <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>Sign in</Button>\r\n                </form>\r\n                <Typography>\r\n                    <Link to=\"/register\" style={linkstyle}>\r\n                        Sign up\r\n                    </Link>\r\n                </Typography>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\RegisterPage.js",["100","101"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\index.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\user_reducer.js",["102"],"const LOGIN_USER = \"login_user\";\r\nconst REGISTER_USER = \"register_user\";\r\nconst AUTH_USER = \"auth_user\";\r\nconst CHECK_ID = 'checkid_user';\r\nconst CHECK_NICK = 'checknick_user';\r\nconst GET_USER = \"get_user\";\r\nconst CHECK_PHONE = 'checkphone_user';\r\n\r\nexport default function(state={}, action){\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return { ...state, loginSuccess : action.payload };\r\n        case REGISTER_USER:\r\n            return {...state, register : action.payload };\r\n        case AUTH_USER:\r\n            return {...state, userData : action.payload };\r\n        case CHECK_ID:\r\n            return {...state, chekckId : action.payload};\r\n        case CHECK_NICK:\r\n            return {...state, checkNick : action.payload};    \r\n        case GET_USER:\r\n            return {...state, userData : action.payload};\r\n        case CHECK_PHONE:\r\n            return {...state, checkPhone : action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\user_action.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\auth\\auth.js",["103","104"],"import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { auth } from '../actions/user_action';\r\n\r\nexport default function(SpecificComponent, option, adminRoute = null){\r\n\r\n    // option\r\n    // null => 아무나 출입이 가능한 페이지\r\n    // true => 로그인한 유저만 출입이 가능한 페이지\r\n    // false => 로그인한 유저는 출입 불가능한 페이지\r\n\r\n    // adminRoute는 true가 되면 어드민 유저만 가능하다.\r\n    \r\n    function AuthenticationCheck(props){\r\n        \r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(()=>{\r\n            \r\n            dispatch(auth()).then(response => {\r\n\r\n                // 로그인 하지 않은 상태\r\n                if(!response.payload.isAuth){\r\n                    if(option){\r\n                        props.history.push('/');\r\n                    }\r\n                }else{\r\n                    // 로그인 한 상태\r\n                    if(adminRoute && !response.payload.isAdmin){\r\n                        props.history.push('/main')\r\n                    }else{\r\n                        if(option === false){\r\n                            props.history.push('/main');\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }, [])\r\n        return (\r\n            <SpecificComponent />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\MainPage\\Main.js",["105"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './Main.scss';\r\nimport LeftPage from '../LeftPage/LeftPage';\r\nimport { getUser } from '../../api/actions/main_action';\r\nconst Main = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [UserData, setUserData] = useState(\"\");\r\n\r\n    const onClickHandler = () =>{\r\n        axios.get('/api/users/logout')\r\n        .then(response => {\r\n            if(response.data.success){\r\n                props.history.push(\"/\");\r\n            }else{\r\n                alert('로그아웃 하는데 실패 했습니다.');\r\n            }\r\n        })\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        dispatch(getUser())\r\n        .then(response => {\r\n            setUserData(response.payload);\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"box\">\r\n                <LeftPage props={props} UserData={UserData}/>\r\n                {/* <div className=\"right_side\">\r\n                    dddd\r\n                </div> */}\r\n                <button onClick={onClickHandler}>\r\n                        로그아웃\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(Main);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\LeftPage.js",["106","107"],"import React, { useState } from 'react';\r\nimport { withRouter, NavLink, Route } from 'react-router-dom';\r\nimport '../MainPage/Main.scss';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport QuestionAnswerRoundedIcon from '@material-ui/icons/QuestionAnswerRounded';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport FriendList from './FriendList/FriendList.js';\r\nimport ChatList from './ChatList/ChatList';\r\n\r\nconst LeftPage = ({match, UserData}) => {\r\n\r\n    const data = match.params.category || 'FriendList';\r\n\r\n    return (\r\n        <div className=\"left_side\">\r\n            <div className=\"left_category\">\r\n                <NavLink className=\"default_active\" activeClassName=\"active\" to=\"/main/FriendList\">\r\n                    <PersonIcon style={{ fontSize: 30 }} />\r\n                </NavLink>\r\n                <NavLink className=\"default_active\" activeClassName=\"active\" to=\"/main/ChatList\">\r\n                    <QuestionAnswerRoundedIcon style={{ fontSize: 30 }} />\r\n                </NavLink>\r\n                <LanguageIcon style={{ fontSize: 30 }} />\r\n                <MoreHorizIcon style={{ fontSize: 30 }} />\r\n            </div>\r\n            {data === 'FriendList' ? <FriendList UserData={UserData}/> : null}\r\n            {data === 'ChatList' ? <ChatList UserData={UserData}/> : null}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default withRouter(LeftPage);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\Title\\LeftTitle.js",["108"],"import axios from 'axios';\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../../../MainPage/Main.scss';\r\nimport {\r\n    SearchOutlined,\r\n    UserAddOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst LeftTitle = () => {\r\n\r\n    const [Search, setSearch] = useState(false);\r\n    const [Friend, setFriend] = useState(false);\r\n    const [InputText, setInputText] = useState(\"\");\r\n    const [InputText2, setInputText2] = useState(\"\");\r\n\r\n    const inputEl = useRef(null);\r\n    const inputEl2 = useRef(null);\r\n\r\n    const onToggle = () =>{\r\n        setSearch(!Search);\r\n        setFriend(false);\r\n    }\r\n    const onToggle2 = () =>{\r\n        setFriend(!Friend);\r\n        setSearch(false);\r\n    }\r\n    const onInputTextHandler = (e) =>{\r\n        setInputText(e.target.value);\r\n    }\r\n    const onInputTextHandler2 = (e) =>{\r\n        setInputText2(e.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(Search) inputEl.current.focus();\r\n        if(Friend) inputEl2.current.focus();\r\n    }, [Search, Friend])\r\n\r\n    return (\r\n        <div className=\"left_title\">\r\n            <div>친구</div>\r\n            <div className=\"search_friend\">\r\n                {Search ? <input type=\"text\" placeholder=\"친구검색\" value={InputText} ref={inputEl} onChange={onInputTextHandler}/> : null}\r\n                {Friend ? <input type=\"text\" placeholder=\"친구추가\" value={InputText2} ref={inputEl2} onChange={onInputTextHandler2}/> : null}\r\n                <SearchOutlined onClick={onToggle}/>\r\n                <UserAddOutlined onClick={onToggle2} className=\"add_friend\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(LeftTitle);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\MyProfile\\MyProfile.js",["109","110"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst MyProfile = ({UserData}) => {\r\n\r\n    return (\r\n        <div className=\"myProfile\">\r\n            <img src={UserData.image} />\r\n            <div className=\"text_site\">\r\n                <div className=\"top\">{UserData.userName}</div>\r\n                <div className=\"bottom\">{UserData.message}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(MyProfile);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\FriendList.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\ChatList\\ChatList.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\main_action.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\PlusFriend.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\RegisterPage_tmp.js",["111","112"],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":6,"column":31,"nodeType":"119","messageId":"120","endLine":6,"endColumn":40},{"ruleId":"121","severity":1,"message":"122","line":100,"column":21,"nodeType":"123","endLine":100,"endColumn":72},{"ruleId":"121","severity":1,"message":"122","line":101,"column":50,"nodeType":"123","endLine":101,"endColumn":103},{"ruleId":"117","severity":1,"message":"124","line":5,"column":23,"nodeType":"119","messageId":"120","endLine":5,"endColumn":29},{"ruleId":"125","severity":1,"message":"126","line":194,"column":7,"nodeType":"127","endLine":194,"endColumn":34,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":9,"column":1,"nodeType":"131","endLine":28,"endColumn":2},{"ruleId":"129","severity":1,"message":"130","line":5,"column":1,"nodeType":"131","endLine":44,"endColumn":2},{"ruleId":"125","severity":1,"message":"132","line":38,"column":12,"nodeType":"127","endLine":38,"endColumn":14,"suggestions":"133"},{"ruleId":"125","severity":1,"message":"134","line":30,"column":7,"nodeType":"127","endLine":30,"endColumn":9,"suggestions":"135"},{"ruleId":"117","severity":1,"message":"136","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"137","line":2,"column":31,"nodeType":"119","messageId":"120","endLine":2,"endColumn":36},{"ruleId":"117","severity":1,"message":"138","line":1,"column":8,"nodeType":"119","messageId":"120","endLine":1,"endColumn":13},{"ruleId":"117","severity":1,"message":"138","line":2,"column":8,"nodeType":"119","messageId":"120","endLine":2,"endColumn":13},{"ruleId":"121","severity":1,"message":"122","line":9,"column":13,"nodeType":"123","endLine":9,"endColumn":41},{"ruleId":"117","severity":1,"message":"124","line":5,"column":23,"nodeType":"119","messageId":"120","endLine":5,"endColumn":29},{"ruleId":"125","severity":1,"message":"126","line":195,"column":7,"nodeType":"127","endLine":195,"endColumn":34,"suggestions":"139"},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Avatar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Checking'. Either include it or remove the dependency array. You can also do a functional update 'setChecking(C => ...)' if you only need 'Checking' in the 'setChecking' call.","ArrayExpression",["142"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.",["143"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["144"],"'useState' is defined but never used.","'Route' is defined but never used.","'axios' is defined but never used.",["145"],"no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"146","fix":"152"},"Update the dependencies array to be: [Password, ConfirmPassword, Checking]",{"range":"153","text":"154"},"Update the dependencies array to be: [dispatch, props.history]",{"range":"155","text":"156"},"Update the dependencies array to be: [dispatch]",{"range":"157","text":"158"},{"range":"159","text":"154"},[5626,5653],"[Password, ConfirmPassword, Checking]",[1160,1162],"[dispatch, props.history]",[853,855],"[dispatch]",[5645,5672]]