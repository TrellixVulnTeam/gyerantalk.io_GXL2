<<<<<<< HEAD
[{"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\index.js":"1","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\App.js":"3","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\reducers\\index.js":"4","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LoginPage.js":"5","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\RegisterPage.js":"6","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\MainPage\\Main.js":"7","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\auth\\auth.js":"8","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\reducers\\user_reducer.js":"9","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\reducers\\chat_reducer.js":"10","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\reducers\\friend_reducer.js":"11","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\reducers\\socket_reducer.js":"12","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\actions\\user_action.js":"13","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\actions\\main_action.js":"14","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\LeftPage.js":"15","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\FriendList\\FriendList.js":"16","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\actions\\socket_action.js":"17","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Internet.js":"18","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\UpdateUser\\UpdateUser.js":"19","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatingList.js":"20","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\ViewFriend\\ViewFriend.js":"21","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\SocketList\\useChat.js":"22","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Options\\Options.js":"23","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatingRoom.js":"24","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Bucket\\Bucket.js":"25","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\FriendList\\ShowFriend\\ShowFriend.js":"26","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\actions\\friend_action.js":"27","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\FriendList\\Title\\LeftTitle.js":"28","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\SearchFriend.js":"29","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\PlusFriend.js":"30","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\FriendList\\MyProfile\\MyProfile.js":"31","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\actions\\chat_action.js":"32","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatItem.js":"33","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatTitle.js":"34","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\SocketList\\AddBaner.js":"35","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\Board.js":"36","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\News\\News.js":"37","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\TV\\TV.js":"38","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\Shop.js":"39","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Options\\option\\Weather.js":"40","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Bucket\\BucketItem.js":"41","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\IntTitle\\IntTitle.js":"42","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardUpdate.js":"43","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardCreate.js":"44","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardList.js":"45","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\News\\NewsItem.js":"46","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\usePromise.js":"47","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardDetail.js":"48","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\ShopItem.js":"49","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\PayResult.js":"50","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\actions\\post_action.js":"51"},{"size":1062,"mtime":1620195929181,"results":"52","hashOfConfig":"53"},{"size":375,"mtime":1620195929181,"results":"54","hashOfConfig":"53"},{"size":858,"mtime":1620195929162,"results":"55","hashOfConfig":"53"},{"size":313,"mtime":1620195929165,"results":"56","hashOfConfig":"53"},{"size":3924,"mtime":1620195929179,"results":"57","hashOfConfig":"53"},{"size":11771,"mtime":1620195929180,"results":"58","hashOfConfig":"53"},{"size":1676,"mtime":1620272059475,"results":"59","hashOfConfig":"53"},{"size":1439,"mtime":1620195929164,"results":"60","hashOfConfig":"53"},{"size":1108,"mtime":1620195929166,"results":"61","hashOfConfig":"53"},{"size":527,"mtime":1620195929165,"results":"62","hashOfConfig":"53"},{"size":475,"mtime":1620195929165,"results":"63","hashOfConfig":"53"},{"size":1112,"mtime":1620195929166,"results":"64","hashOfConfig":"53"},{"size":1900,"mtime":1620195929164,"results":"65","hashOfConfig":"53"},{"size":266,"mtime":1620195929163,"results":"66","hashOfConfig":"53"},{"size":4043,"mtime":1620272059470,"results":"67","hashOfConfig":"53"},{"size":4068,"mtime":1620195929168,"results":"68","hashOfConfig":"53"},{"size":1858,"mtime":1620195929164,"results":"69","hashOfConfig":"53"},{"size":712,"mtime":1620195929172,"results":"70","hashOfConfig":"53"},{"size":2877,"mtime":1620272059474,"results":"71","hashOfConfig":"53"},{"size":1519,"mtime":1620272059472,"results":"72","hashOfConfig":"53"},{"size":1219,"mtime":1620195929178,"results":"73","hashOfConfig":"53"},{"size":1694,"mtime":1620272059473,"results":"74","hashOfConfig":"53"},{"size":3390,"mtime":1620272059470,"results":"75","hashOfConfig":"53"},{"size":7135,"mtime":1620272059472,"results":"76","hashOfConfig":"53"},{"size":610,"mtime":1620272059453,"results":"77","hashOfConfig":"53"},{"size":1303,"mtime":1620195929169,"results":"78","hashOfConfig":"53"},{"size":837,"mtime":1620195929163,"results":"79","hashOfConfig":"53"},{"size":1591,"mtime":1620195929169,"results":"80","hashOfConfig":"53"},{"size":1965,"mtime":1620195929169,"results":"81","hashOfConfig":"53"},{"size":606,"mtime":1620195929168,"results":"82","hashOfConfig":"53"},{"size":566,"mtime":1620272059455,"results":"83","hashOfConfig":"53"},{"size":983,"mtime":1620195929162,"results":"84","hashOfConfig":"53"},{"size":3669,"mtime":1620272059471,"results":"85","hashOfConfig":"53"},{"size":337,"mtime":1620195929176,"results":"86","hashOfConfig":"53"},{"size":995,"mtime":1620195929176,"results":"87","hashOfConfig":"53"},{"size":1423,"mtime":1620195929170,"results":"88","hashOfConfig":"53"},{"size":1207,"mtime":1620195929172,"results":"89","hashOfConfig":"53"},{"size":1188,"mtime":1620272059459,"results":"90","hashOfConfig":"53"},{"size":3623,"mtime":1620272059458,"results":"91","hashOfConfig":"53"},{"size":1653,"mtime":1620195929175,"results":"92","hashOfConfig":"53"},{"size":1969,"mtime":1620272059454,"results":"93","hashOfConfig":"53"},{"size":865,"mtime":1620195929172,"results":"94","hashOfConfig":"53"},{"size":2517,"mtime":1620195929171,"results":"95","hashOfConfig":"53"},{"size":2127,"mtime":1620195929170,"results":"96","hashOfConfig":"53"},{"size":1996,"mtime":1620195929171,"results":"97","hashOfConfig":"53"},{"size":1238,"mtime":1620195929173,"results":"98","hashOfConfig":"53"},{"size":742,"mtime":1620195929182,"results":"99","hashOfConfig":"53"},{"size":2263,"mtime":1620272059456,"results":"100","hashOfConfig":"53"},{"size":3679,"mtime":1620272059458,"results":"101","hashOfConfig":"53"},{"size":2279,"mtime":1620272059457,"results":"102","hashOfConfig":"53"},{"size":1462,"mtime":1620195929163,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wccko0",{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\index.js",[],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\App.js",[],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\reducers\\index.js",[],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LoginPage.js",["244","245","246"],"import React, {useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport { loginUser } from '../api/actions/user_action';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { Grid, Paper, Avatar, TextField, Button, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    customTextField: {\r\n      \"& input::placeholder\": {\r\n        color : '#fff',\r\n        fontWeight : 'bolder'\r\n      }\r\n    }\r\n})\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [UserId, setUserId] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n\r\n    const onUserIdHandler = (e) => {\r\n        setUserId(e.target.value);\r\n    }\r\n    const onPasswordHandler = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        let body = {\r\n            userId : UserId,\r\n            password : Password,\r\n        }\r\n\r\n        dispatch(loginUser(body))\r\n        .then(response => {\r\n            if(response.payload.loginSuccess){\r\n                props.history.push('/main/FriendList');\r\n            }else{\r\n                alert('Error');\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const paperStyle = {\r\n        padding : 20,\r\n        height : '568px',\r\n        width : 280,\r\n        margin : '0 auto',\r\n        textAlign : 'center',\r\n        background : '#f6bd63',\r\n        position: 'absolute',\r\n        top:'50%',\r\n        left:'50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    }\r\n    const avatarStyle = {\r\n        width : '230px',\r\n        height : '90px',\r\n        margin: '10px 0 30px',\r\n        background : '#f6bd63',\r\n    }\r\n    const btnstyle = {\r\n        margin : '8px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#845460'\r\n    }\r\n    const imgstyle ={\r\n        width : '100%',\r\n        height : '100%',\r\n    }\r\n    const logostyle ={\r\n        width: '200px',\r\n        marginTop: '50px',\r\n    }\r\n    const inputstyle ={\r\n        width : '90%',\r\n        margin : '0 auto',\r\n        height : '30px',\r\n        marginBottom : '20px',\r\n        background : '#855460',\r\n        color : '#fff'\r\n    }\r\n    const linkstyle ={\r\n        color : '#fff',\r\n        fontWeight : 'bolder',\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid>\r\n            <Paper elevation={10} style={paperStyle} classes={{root:classes.customTextField}}>\r\n                <Grid align=\"center\">\r\n                    <img src=\"/text_transparent.png\" style={logostyle}></img>\r\n                    <Avatar style={avatarStyle} ><img src=\"/gyeran_height_cut.png\" style={imgstyle} /></Avatar>\r\n\r\n                </Grid>\r\n                <form onSubmit={onSubmitHandler}>\r\n                    <input style={inputstyle} type=\"text\" label=\"UserId\" placeholder=\"Enter UserId\" value={UserId} onChange={onUserIdHandler} required/>\r\n                    <input style={inputstyle} type=\"password\" label=\"Password\" placeholder=\"Enter Password\" value={Password} onChange={onPasswordHandler} required/>\r\n                    {/* <FormControlLabel \r\n                        control={\r\n                            <Checkbox\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Remember Me\"\r\n                    /> */}\r\n                    <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>Sign in</Button>\r\n                </form>\r\n                <Typography>\r\n                    <Link to=\"/register\" style={linkstyle}>\r\n                        Sign up\r\n                    </Link>\r\n                </Typography>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\RegisterPage.js",["247"],"import React, { useState, useEffect } from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport { registerUser, checkId, checkNick, checkPhone } from '../api/actions/user_action';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Grid, Paper, Avatar, FormControlLabel, Checkbox, TextField, Button, Typography } from '@material-ui/core';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [UserId, setUserId] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n    const [ConfirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [NickName, setNickName] = useState(\"\");\r\n    const [Name, setName] = useState(\"\");\r\n    const [Phone, setPhone] = useState(\"\");\r\n    const [checkPassword, setcheckPassword] = useState(true);\r\n    const [NoticeId, setNoticeId] = useState(\"\");\r\n    const [NoticeNick, setNoticeNick] = useState(\"\");\r\n    const [NoticePhone, setNoticePhone] = useState(\"\");\r\n    // const [Checking, setChecking] = useState(0);\r\n    const [isCheckedId, setisCheckedId] = useState(false);\r\n    const [isCheckedNick, setisCheckedNick] = useState(false);\r\n    const [isCheckedPhone, setisCheckedPhone] = useState(false);\r\n    const [isCheckedPassword, setisCheckedPassword] = useState(false);\r\n\r\n\r\n    const onUserIdHandler = (e) => {\r\n        setUserId(e.target.value);\r\n    }\r\n    const onPasswordHandler = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n    const onPasswordHandler2 = (e) => {\r\n        setConfirmPassword(e.target.value);\r\n    }\r\n    const onNickNameHandler = (e) => {\r\n        setNickName(e.target.value);\r\n    }\r\n    const onNameHandler = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n    const onPhoneHandler = (e) => {\r\n        const regex = /^[0-9\\b -]{0,13}$/;\r\n        if (regex.test(e.target.value)){\r\n            setPhone(e.target.value);\r\n        }\r\n    }\r\n    const onCheckIdHandler = (e) => {\r\n\r\n        e.preventDefault();\r\n        let body = {\r\n            userId : UserId,\r\n        }\r\n\r\n        dispatch(checkId(body))\r\n        .then(response => {\r\n            setNoticeId(response.payload.message);\r\n            if(response.payload.checkId){\r\n                setisCheckedId(true)\r\n            } else {\r\n                setisCheckedId(false)\r\n            }\r\n        })\r\n    }\r\n    const onCheckNick = (e) => {\r\n        \r\n        e.preventDefault();\r\n        let body = {\r\n            userNickName : NickName,\r\n        }\r\n\r\n        dispatch(checkNick(body))\r\n        .then(response => {\r\n            setNoticeNick(response.payload.message);\r\n            if(response.payload.checkNick){\r\n                setisCheckedNick(true)\r\n            } else {\r\n                setisCheckedNick(false)\r\n            }\r\n        })\r\n    }\r\n    const onCheckPhone = (e) => {\r\n        \r\n        e.preventDefault();\r\n        let body = {\r\n            userPhone : Phone,\r\n        }\r\n\r\n        dispatch(checkPhone(body))\r\n        .then(response => {\r\n            setNoticePhone(response.payload.message);\r\n            if(response.payload.checkPhone){\r\n                setisCheckedPhone(true)\r\n            } else {\r\n                setisCheckedPhone(false)\r\n            }\r\n        })\r\n    }\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        let body = {\r\n            userId : UserId,\r\n            password : Password,\r\n            userNickName : NickName,\r\n            userName : Name,\r\n            userPhone : Phone,\r\n        }\r\n        dispatch(registerUser(body))\r\n        .then(response => {\r\n            if(response.payload.success){\r\n                props.history.push(\"/\");\r\n            }else{\r\n                alert(\"Failed to sign up\");\r\n            }\r\n        })\r\n    }\r\n\r\n    const paperStyle ={\r\n        padding : 20,\r\n        height : '650px',\r\n        width : 280,\r\n        margin : '20px auto',\r\n        // textAlign : 'center',\r\n        position: 'absolute',\r\n        top:'50%',\r\n        left:'50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n    const hrstyle ={\r\n        backgroundColor : 'gray',\r\n        height : '1px'\r\n    }\r\n    const divstyle1 ={\r\n        paddingLeft: '12.5px',\r\n        marginTop: '20px',\r\n    }\r\n    const divstyle2 ={\r\n        marginTop: '10px',\r\n        fontSize: '12px',\r\n    }\r\n    const textStyle1 ={\r\n        width : 175,\r\n        marginBottom : '10px',\r\n    }\r\n    const textStyle2 ={\r\n        width : 250,\r\n        marginBottom : '10px',\r\n    }\r\n    const btnstyle ={\r\n        margin : '18px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#845460'\r\n    }\r\n    const btnstyle2 ={\r\n        margin : '8px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#f6bd63',\r\n        width : '80px',\r\n        height : '40px',\r\n        borderRadius : '15px 15px',\r\n        border : 'none',\r\n        cursor : 'pointer',\r\n    }\r\n    const disablestyle ={\r\n        margin : '18px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : 'rgb(189, 189, 189)',\r\n    }\r\n    const pstyle ={\r\n        margin : '0 0',\r\n        fontWeight : 'bolder',\r\n        fontSize : '10px',\r\n    }\r\n    const linkstyle ={\r\n        color : 'inherit',\r\n    }\r\n    const spanstyle ={\r\n        fontSize : '25px',\r\n        fontWeight : 'bolder',\r\n        marginLeft : '70px',\r\n    }\r\n\r\n    useEffect(()=>{\r\n        // if(Password !== ConfirmPassword){\r\n        //     setcheckPassword(false);\r\n        // }else{\r\n        //     setcheckPassword(true);\r\n        // }\r\n        if(Password.length === 0 && ConfirmPassword.length === 0){\r\n            setcheckPassword(true);\r\n            setisCheckedPassword(false);\r\n        }else if(Password.length < 5 && ConfirmPassword.length < 5){\r\n            setcheckPassword(false);\r\n            setisCheckedPassword(false);\r\n        }else if(Password !== ConfirmPassword){\r\n            setcheckPassword(false);\r\n            setisCheckedPassword(false);\r\n        }else{\r\n            setcheckPassword(true);\r\n            setisCheckedPassword(true);\r\n        }\r\n    },[Password, ConfirmPassword])\r\n\r\n    useEffect(()=>{\r\n        if(Phone.length === 11) {\r\n            setPhone(Phone.replace(/-/g,'').replace(/(\\d{3})(\\d{4})(\\d{4})/, '$1-$2-$3'));\r\n        }\r\n    }, [Phone]);\r\n\r\n    return (\r\n        <Grid>\r\n            <Paper elevation={10} style={paperStyle} >\r\n                <Grid align=\"left\">\r\n                    <Typography>\r\n                        <Link to=\"/\" style={linkstyle}>\r\n                            <ArrowBackIosIcon />\r\n                        </Link>\r\n                        <span style={spanstyle}>회원가입</span>\r\n                    </Typography>\r\n                </Grid>\r\n                <hr style={hrstyle}/>\r\n                <form onSubmit={onSubmitHandler}>\r\n                    <div style={divstyle1}>\r\n                        <TextField style={textStyle1} id=\"standard-basic\" label=\"아이디\" type=\"text\" value={UserId} onChange={onUserIdHandler} />\r\n                        <button type=\"submit\" style={btnstyle2} onClick={onCheckIdHandler}>중복확인</button>\r\n                        {NoticeId.length !== 0 ? <p style={pstyle}>{NoticeId}</p> : null}\r\n                        {checkPassword === true ? <TextField style={textStyle2} id=\"standard-basic\" label=\"비밀번호\" type=\"password\" value={Password} onChange={onPasswordHandler} /> : <TextField error id=\"standard-error-helper-text\" label=\"비밀번호\" type=\"password\" value={Password} onChange={onPasswordHandler} helperText=\"Incorrect entry.\" />}\r\n                        {checkPassword === true ? <TextField style={textStyle2} id=\"standard-basic\" label=\"비밀번호확인\" type=\"password\" value={ConfirmPassword} onChange={onPasswordHandler2} /> : <TextField error id=\"standard-error-helper-text\" label=\"비밀번호확인\" type=\"password\" value={ConfirmPassword} onChange={onPasswordHandler2} helperText=\"최소 5자리 이상 조합\"/>}\r\n                        <TextField style={textStyle1} id=\"standard-basic\" label=\"닉네임\" type=\"text\" value={NickName} onChange={onNickNameHandler} />\r\n                        <button type=\"submit\" style={btnstyle2} onClick={onCheckNick}>중복확인</button>\r\n                        {NoticeNick.length !== 0 ? <p style={pstyle}>{NoticeNick}</p> : null}\r\n                        <TextField style={textStyle2} id=\"standard-basic\" label=\"이름\" type=\"text\" value={Name} onChange={onNameHandler} />\r\n                        <TextField style={textStyle1} id=\"standard-basic\" label=\"휴대폰번호\" type=\"text\" value={Phone} onChange={onPhoneHandler} />\r\n                        <button type=\"submit\" style={btnstyle2} onClick={onCheckPhone}>중복확인</button>\r\n                        {NoticePhone.length !== 0 ? <p style={pstyle}>{NoticePhone}</p> : null}\r\n\r\n                        <div style={divstyle2}>\r\n                            {/* <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                // label=\"모두 동의합니다\"\r\n                            />\r\n                            모두 동의합니다.<br/> */}\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                        required\r\n                                    />\r\n                                }\r\n                                label=\"이용약관 동의\"\r\n                            />\r\n                            {/* 이용약관 동의<br/> */}\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                        required\r\n                                    />\r\n                                }\r\n                                label=\"개인정보 취급방침 동의\"\r\n                            />\r\n                            {/* 개인정보 취급방침 동의<br/> */}\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                        required\r\n                                    />\r\n                                }\r\n                                label=\"마케팅 정보 수신 동의\"\r\n                            />\r\n                            {/* 마케팅 정보 수신 동의<br/> */}\r\n                        </div>\r\n                    </div>\r\n                    {/* {Checking >= 4 ? <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>Sign up</Button> : <Button disabled style={disablestyle} variant=\"contained\" fullWidth>Sign up</Button>} */}\r\n                    {isCheckedId && isCheckedNick && isCheckedPhone && isCheckedPassword ? <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>Sign up</Button> : <Button disabled style={disablestyle} variant=\"contained\" fullWidth>Sign up</Button>}\r\n                    \r\n                </form>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\MainPage\\Main.js",["248","249"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './Main.scss';\r\nimport LeftPage from '../LeftPage/LeftPage';\r\nimport { getUser } from '../../api/actions/main_action';\r\n\r\nconst Main = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [UserData, setUserData] = useState(\"\");\r\n    // const [ListFriend, setListFriend] = useState(\"\");\r\n    const [Update, setUpdate] = useState(false);\r\n\r\n    // const onClickHandler = () =>{\r\n    //     axios.get('/api/users/logout')\r\n    //     .then(response => {\r\n    //         if(response.data.success){\r\n    //             props.history.push(\"/\");\r\n    //         }else{\r\n    //             alert('로그아웃 하는데 실패 했습니다.');\r\n    //         }\r\n    //     })\r\n    // }\r\n    \r\n    useEffect(()=>{\r\n        dispatch(getUser())\r\n        .then(response => {\r\n            setUserData(response.payload);\r\n        })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        dispatch(getUser())\r\n        .then(response => {\r\n            setUserData(response.payload);\r\n        })\r\n    }, [Update])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"box\">\r\n                <LeftPage props={props} UserData={UserData} Update={Update} setUpdate={setUpdate}/>\r\n                {/* <div className=\"right_side\">\r\n                    dddd\r\n                </div> */}\r\n                {/* <button style={{marginLeft:'10px'}} onClick={onClickHandler}>\r\n                    로그아웃\r\n                </button> */}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(Main);","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\auth\\auth.js",["250","251"],"import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { auth } from '../actions/user_action';\r\n\r\nexport default function(SpecificComponent, option, adminRoute = null){\r\n\r\n    // option\r\n    // null => 아무나 출입이 가능한 페이지\r\n    // true => 로그인한 유저만 출입이 가능한 페이지\r\n    // false => 로그인한 유저는 출입 불가능한 페이지\r\n\r\n    // adminRoute는 true가 되면 어드민 유저만 가능하다.\r\n    \r\n    function AuthenticationCheck(props){\r\n        \r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(()=>{\r\n            \r\n            dispatch(auth()).then(response => {\r\n\r\n                // 로그인 하지 않은 상태\r\n                if(!response.payload.isAuth){\r\n                    if(option){\r\n                        props.history.push('/');\r\n                    }\r\n                }else{\r\n                    // 로그인 한 상태\r\n                    if(adminRoute && !response.payload.isAdmin){\r\n                        props.history.push('/main/FriendList')\r\n                    }else{\r\n                        if(option === false){\r\n                            props.history.push('/main/FriendList');\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }, [])\r\n        return (\r\n            <SpecificComponent />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\reducers\\user_reducer.js",["252"],"const LOGIN_USER = \"login_user\";\r\nconst REGISTER_USER = \"register_user\";\r\nconst AUTH_USER = \"auth_user\";\r\nconst CHECK_ID = 'checkid_user';\r\nconst CHECK_NICK = 'checknick_user';\r\nconst GET_USER = \"get_user\";\r\nconst CHECK_PHONE = 'checkphone_user';\r\nconst UPDATE_USER = 'update_user';\r\n\r\nexport default function(state={}, action){\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return { ...state, loginSuccess : action.payload };\r\n        case REGISTER_USER:\r\n            return {...state, register : action.payload };\r\n        case AUTH_USER:\r\n            return {...state, userData : action.payload };\r\n        case CHECK_ID:\r\n            return {...state, chekckId : action.payload};\r\n        case CHECK_NICK:\r\n            return {...state, checkNick : action.payload};    \r\n        case GET_USER:\r\n            return {...state, userData : action.payload};\r\n        case CHECK_PHONE:\r\n            return {...state, checkPhone : action.payload};\r\n        case UPDATE_USER:\r\n            return {...state, updateUser : action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\reducers\\chat_reducer.js",["253"],"const CHAT_SERVER = 'chat_server';\r\nconst AFTER_POST_MESSAGE = 'after_post_message';\r\nconst CHECK_CHAT = 'check_chat';\r\n\r\nexport default function(state={},action){\r\n    switch(action.type){\r\n        case CHAT_SERVER:\r\n            return { ...state, chats: action.payload }\r\n        case AFTER_POST_MESSAGE:\r\n                return { ...state, chats: state.chats.concat(action.payload) }\r\n        case CHECK_CHAT:\r\n                return { ...state, check: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\reducers\\friend_reducer.js",["254"],"const SEARCH_USER = \"search_user\";\r\nconst ADD_USER = \"add_user\";\r\nconst SHOW_FRIEND = 'show_friend';\r\n\r\nexport default function(state={}, action){\r\n    switch (action.type) {\r\n        case SEARCH_USER:\r\n            return {...state, friend : action.payload}\r\n        case ADD_USER:\r\n            return {...state, plus : action.payload}\r\n        case SHOW_FRIEND:\r\n            return {...state, Myfriend : action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\reducers\\socket_reducer.js",["255","256"],"const SOCKET_SEND = 'socket_send';\r\nconst SOCKET_RECEIVE = 'socket_receive';\r\nconst SOCKET_LIST = 'socket_list';\r\nconst SOCKET_CHATINFORM = 'socket_chatinform';\r\nconst SOCKET_FRIEND_PROFILE = 'socket_profile';\r\nconst SOCKET_COUNT = 'socket_count';\r\nconst SOCKET_ALL = 'socket_all';\r\n\r\nexport default function(state={}, action){\r\n    switch (action.type) {\r\n        case SOCKET_SEND:\r\n            return {...state, chats: action.payload }\r\n        // case SOCKET_RECEIVE:\r\n        //     let newChatList = state.chatList.slice();\r\n        //     newChatList.push(action.data);\r\n        //     return { ...state, chatList: newChatList };\r\n        case SOCKET_LIST:\r\n            return {...state, list: action.payload }\r\n        case SOCKET_CHATINFORM:\r\n            return {...state, inform: action.payload}\r\n        case SOCKET_FRIEND_PROFILE:\r\n            return {...state, indid: action.payload}\r\n        case SOCKET_COUNT:\r\n            return {...state, count : action.payload}\r\n        case SOCKET_ALL:\r\n            return {...state, ass : action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\actions\\user_action.js",[],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\actions\\main_action.js",[],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\LeftPage.js",["257"],"import React, { useState, useEffect } from 'react';\r\nimport { withRouter, NavLink } from 'react-router-dom';\r\nimport '../MainPage/Main.scss';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport QuestionAnswerRoundedIcon from '@material-ui/icons/QuestionAnswerRounded';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport FriendList from './FriendList/FriendList.js';\r\nimport UpdateUser from './UpdateUser/UpdateUser';\r\n// import UpdateUser from './UpdateUser/UpdateUser_tmp';\r\n// import UpdateUser from './UpdateUser/UpdateTest';\r\nimport Internet from './Internet/Internet';\r\nimport ChatingList from './SocketList/ChatingList';\r\nimport ChatingRoom from './SocketList/ChatingRoom';\r\nimport ViewFriend from './ViewFriend/ViewFriend';\r\nimport Options from './Options/Options';\r\nimport { useDispatch } from 'react-redux';\r\nimport {allChat} from '../../api/actions/socket_action';\r\nimport useChat from '../LeftPage/SocketList/useChat';\r\nimport Bucket from './Bucket/Bucket';\r\n\r\nconst LeftPage = ({match, UserData, Update, setUpdate}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n// 잠시 ListFriend props에 빼고 밑에 FriendList 페이지에 상속 지움\r\n    const data = match.params.category || 'FriendList';\r\n\r\n    const [checktUpdate, setchecktUpdate] = useState(false);\r\n    const [MesCount, setMesCount] = useState(0)\r\n    const { Messages } = useChat();\r\n    \r\n    useEffect(() => {\r\n        let body = {\r\n            userId : UserData._id,\r\n        }\r\n        dispatch(allChat(body))\r\n        .then(response=>{\r\n            setMesCount(response.payload.number);\r\n            // console.log(response.data);\r\n        })\r\n    }, [ checktUpdate, data, Messages ])\r\n\r\n    return (\r\n        <div className=\"left_side\">\r\n            <div className=\"left_category\">\r\n                <NavLink className=\"default_active\" activeClassName=\"active\" to=\"/main/FriendList\">\r\n                    <PersonIcon style={{ fontSize: 30 }} />\r\n                </NavLink>\r\n                {/* <NavLink className=\"default_active\" activeClassName=\"active\" to=\"/main/ChatList\">\r\n                    <QuestionAnswerRoundedIcon style={{ fontSize: 30 }} />\r\n                </NavLink> */}\r\n                <NavLink className=\"default_active\" activeClassName=\"active\" to=\"/main/ChatingList\" style={{position: 'relative'}}>\r\n                    <QuestionAnswerRoundedIcon style={{ fontSize: 30 }} />\r\n                    {MesCount !== 0 ?\r\n                        <div className=\"unread_cnt\">{MesCount}</div>\r\n                        :\r\n                        <></>\r\n                    }\r\n                </NavLink>\r\n                <NavLink className=\"default_active\" activeClassName=\"active\" to=\"/main/Internet\">\r\n                    <LanguageIcon style={{ fontSize: 30 }} />\r\n                </NavLink>\r\n                <NavLink className=\"default_active\" activeClassName=\"active\" to=\"/main/Options\">\r\n                    <MoreHorizIcon style={{ fontSize: 30 }} />\r\n                </NavLink>\r\n            </div>\r\n            {data === 'FriendList' && <FriendList UserData={UserData} checktUpdate={checktUpdate} setchecktUpdate={setchecktUpdate} />}\r\n            {/* {data === 'ChatList' ? <Chat UserData={UserData}/> : null}       */}\r\n            {data === 'ChatingList' && <ChatingList UserData={UserData} checktUpdate={checktUpdate} setchecktUpdate={setchecktUpdate}/> }\r\n            {data === 'ChatingRoom' && <ChatingRoom UserData={UserData} checktUpdate={checktUpdate} setchecktUpdate={setchecktUpdate}/> }\r\n            {data === 'UpdateUser' && <UpdateUser UserData={UserData} Update={Update} setUpdate={setUpdate} /> }\r\n            {data === 'Internet' && <Internet UserData={UserData}/> }\r\n            {data === 'ViewFriend' && <ViewFriend UserData={UserData} /> }\r\n            {data === 'Options' && <Options UserData={UserData}/> }\r\n            {data === 'Bucket' && <Bucket UserData={UserData}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(LeftPage);\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\FriendList\\FriendList.js",["258","259","260","261","262","263"],"import React, { useState, useEffect, useCallback } from 'react';\r\nimport LeftTitle from './Title/LeftTitle';\r\nimport MyProfile from './MyProfile/MyProfile';\r\nimport PlusFriend from './PlusFriend/PlusFriend';\r\nimport { withRouter } from 'react-router-dom';\r\nimport SearchFriend from './PlusFriend/SearchFriend';\r\nimport { searchFriend, friendAdd } from '../../../api/actions/friend_action';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport ShowFriend from './ShowFriend/ShowFriend';\r\nimport { getFriendList } from '../../../api/actions/friend_action';\r\nimport { alreadyFriend } from '../../../api/actions/friend_action';\r\n\r\nconst FriendList = ({UserData, checktUpdate, setchecktUpdate}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [Search, setSearch] = useState(false);\r\n    const [Friend, setFriend] = useState(false);\r\n    const [FriendClick, setFriendClick] = useState(false);\r\n    const [InputText, setInputText] = useState(\"\");\r\n    const [InputText2, setInputText2] = useState(\"\");\r\n    const [friendDB, setfriendDB] = useState(\"\");\r\n    const [ListFriend, setListFriend] = useState(\"\");\r\n    const [ClickEvent, setClickEvent] = useState(false);\r\n\r\n    const onToggle = () =>{\r\n        setSearch(!Search);\r\n        setFriend(false);\r\n        setFriendClick(false);\r\n    }\r\n    const onToggle2 = () =>{\r\n        setFriend(!Friend);\r\n        setSearch(false);\r\n        setFriendClick(false);\r\n    }\r\n    const onToggle3 = () =>{\r\n        setFriendClick(!Friend);\r\n        setFriend(!Friend);\r\n        setSearch(false);\r\n    }\r\n    const onInputTextHandler = (e) =>{\r\n        setInputText(e.target.value);\r\n    }\r\n    const onInputTextHandler2 = (e) =>{\r\n        setInputText2(e.target.value);\r\n    }\r\n\r\n    const onPlustHandler = (e) =>{\r\n        let body = {\r\n            data : e,\r\n            user : UserData.userId\r\n        }\r\n        \r\n        dispatch(friendAdd(body))\r\n        .then(response => {\r\n            setClickEvent(!ClickEvent);\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setClickEvent(!ClickEvent);\r\n        setchecktUpdate(!checktUpdate);\r\n    },[UserData])\r\n\r\n    useEffect(()=>{\r\n        let body = {\r\n            userId : UserData.userId\r\n        }\r\n\r\n        dispatch(getFriendList(body))\r\n        .then(response => {\r\n            setListFriend(response.payload);\r\n        })\r\n    },[ClickEvent])\r\n\r\n    useEffect(() => {\r\n        if(InputText2 !== \"\"){\r\n            let body = {\r\n                data : InputText2\r\n            }\r\n            \r\n            dispatch(searchFriend(body))\r\n            .then(response => {\r\n                setfriendDB(response.payload);\r\n            })\r\n\r\n        }else{\r\n            setfriendDB(\"\");\r\n        }\r\n    }, [InputText2])\r\n\r\n    \r\n    return (\r\n        <div style={{height:'520px',overflow:'scroll'}}>\r\n            <LeftTitle \r\n                Search={Search}\r\n                Friend={Friend}\r\n                FriendClick={FriendClick}\r\n                InputText={InputText}\r\n                InputText2={InputText2}\r\n                onToggle={onToggle}\r\n                onToggle2={onToggle2}\r\n                onInputTextHandler={onInputTextHandler}\r\n                onInputTextHandler2={onInputTextHandler2}\r\n            />\r\n            <MyProfile\r\n                UserData={UserData}\r\n            />\r\n            {/* <div className=\"line\" /> */}\r\n            {InputText2.length === 0 ?\r\n                <PlusFriend\r\n                    onToggle3={onToggle3}\r\n                />\r\n                :\r\n                <SearchFriend\r\n                    friendDB={friendDB}\r\n                    UserData={UserData}\r\n                    onPlustHandler={onPlustHandler}\r\n                    ListFriend={ListFriend}\r\n                />\r\n            }\r\n            {/* <div className=\"line\" /> */}\r\n            <ShowFriend\r\n                UserData={UserData}\r\n                ListFriend={ListFriend}\r\n                setClickEvent={setClickEvent}\r\n                ClickEvent={ClickEvent}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(FriendList);\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\actions\\socket_action.js",["264"],"import axios from 'axios';\r\n\r\nconst SOCKET_SEND = 'socket_send';\r\nconst SOCKET_RECEIVE = 'socket_receive'\r\nconst SOCKET_LIST = 'socket_list';\r\nconst SOCKET_CHATINFORM = 'socket_chatinform';\r\nconst SOCKET_FRIEND_PROFILE = 'socket_profile';\r\nconst SOCKET_COUNT = 'socket_count';\r\nconst SOCKET_ALL = 'socket_all';\r\nexport function getChats(dataToSubmit){\r\n    const request = axios.post('/api/chats/getChat',dataToSubmit)\r\n    .then(response => response.data)\r\n\r\n    return {\r\n        type :  SOCKET_SEND,\r\n        payload : request\r\n    }\r\n}\r\n\r\nexport function ListFind(dataToSubmit) {\r\n    const request = axios.post('/api/chats/ListShow', dataToSubmit)\r\n    .then(response => response.data)\r\n\r\n    return {\r\n        type : SOCKET_LIST,\r\n        payload : request\r\n    }\r\n}\r\n\r\nexport function ChatInform(dataToSubmit) {\r\n\r\n    const request = axios.post('/api/chats/textMessage',dataToSubmit)\r\n    .then(response => response.data)\r\n\r\n    return {\r\n        type : SOCKET_CHATINFORM,\r\n        payload : request\r\n    }\r\n}\r\n\r\nexport function FriendProfile(dataToSubmit) {\r\n    const request = axios.post('/api/chats/profiles',dataToSubmit)\r\n    .then(response => response.data)\r\n\r\n    return {\r\n        type : SOCKET_FRIEND_PROFILE,\r\n        payload : request\r\n    }\r\n}\r\n\r\nexport function CountHow(dataToSubmit){\r\n    const request = axios.post('/api/chats/countMessage',dataToSubmit)\r\n    .then(response => response.data )\r\n\r\n    return {\r\n        type : SOCKET_COUNT,\r\n        payload : request\r\n    }\r\n}\r\n\r\nexport function allChat(dataToSubmit){\r\n    const request = axios.post('/api/chats/total',dataToSubmit)\r\n    .then(response=> response.data )\r\n\r\n    return {\r\n        type : SOCKET_ALL,\r\n        payload : request\r\n    }\r\n}\r\n\r\n// export function receiveChat(data){\r\n\r\n//     return {\r\n//         type: SOCKET_RECEIVE,\r\n//         data\r\n//     }\r\n// }\r\n\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Internet.js",[],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\UpdateUser\\UpdateUser.js",["265","266","267"],"import React, {useState, useEffect} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { updateUser } from \"../../../api/actions/user_action\";\r\nimport { Button } from '@material-ui/core';\r\nimport '../../MainPage/Main.scss';\r\n\r\nconst UpdateUser = ({UserData, history, setUpdate, Update}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [image, setImage] = useState(UserData.image);\r\n    const [FilePath, setFilePath] = useState(\"\")\r\n    const [inputs, setInputs] = useState({\r\n        nick: UserData.userNickName,\r\n        message: UserData.message,\r\n    })\r\n    const {nick, message} = inputs\r\n\r\n    useEffect(() => {\r\n        setInputs({\r\n            nick: UserData.userNickName,\r\n            message: UserData.message,\r\n        })\r\n    }, [UserData])\r\n    useEffect(() => {\r\n        setImage(UserData.image);\r\n    }, [UserData, image]);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const formData = new FormData();\r\n        console.log('온체인지파일',e.target.nick.value, e.target.message.value, e.target.profile_img.files[0])\r\n        formData.append('userId', UserData.userId)\r\n        formData.append('nick', e.target.nick.value)\r\n        formData.append('message', e.target.message.value)\r\n        formData.append('profile_img', e.target.profile_img.files[0])\r\n\r\n        dispatch(updateUser(formData))\r\n        .then(response=>{\r\n            history.push('/main/FriendList')\r\n            setUpdate(!Update)\r\n        })\r\n    }\r\n    const onChange = (e) => {\r\n        const {className, value} = e.target\r\n        const nextInputs = {\r\n            ...inputs,\r\n            [className] : value,\r\n        }\r\n        setInputs(nextInputs)\r\n    }\r\n\r\n    const btnstyle ={\r\n        margin : '18px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#845460'\r\n    }\r\n\r\n    return (\r\n        <div className=\"change_update\">\r\n            <div className=\"change\">프로필 수정</div>\r\n            <div className=\"form_change\">\r\n                <form onSubmit={onSubmit} encType=\"multipart/form-data\">\r\n                    <label className=\"profile_img_wrapper\" htmlFor=\"profile_img\">\r\n                        <img src={image} />\r\n                    </label>\r\n                    <input type=\"file\" name='profile_img' accept='image/jpg, image/png, image/jpeg, image/gif' multiple={false} />\r\n                    <input className=\"nick\" type=\"text\" value={nick} onChange={onChange} name=\"nick\"/>\r\n                    <input className=\"message\" type=\"text\" value={message} onChange={onChange} name=\"message\"/>\r\n                    <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>수정 완료</Button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(UpdateUser);","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatingList.js",["268","269","270"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ChatTitle from './ChatTitle';\r\nimport AddBaner from './AddBaner';\r\nimport { ListFind } from '../../../api/actions/socket_action';\r\nimport ChatItem from './ChatItem';\r\n\r\nconst ChatingList = React.memo(({UserData, checktUpdate, setchecktUpdate}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [roomName, setRoomName ] = useState(\"\");\r\n    const [ListRoom, setListRoom] = useState([]);\r\n\r\n    const handleRoomNameChange = (event) => {\r\n        setRoomName(event.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let body = {\r\n            _id : UserData._id\r\n        }\r\n        dispatch(ListFind(body))\r\n        .then(response => {\r\n            setListRoom(response.payload);\r\n        });\r\n    }, [UserData, checktUpdate])\r\n    \r\n    // let renderChat = () => \r\n    //     ListRoom.map( (chat)=>(\r\n    //         <ChatItem key={chat} chat={chat} UserData={UserData} checktUpdate={checktUpdate} setchecktUpdate={setchecktUpdate}/>\r\n    //     ))\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <ChatTitle />\r\n            <AddBaner />\r\n            {\r\n                ListRoom.map( (chat)=>(\r\n                    <ChatItem key={chat} chat={chat} UserData={UserData} checktUpdate={checktUpdate} setchecktUpdate={setchecktUpdate}/>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default withRouter(ChatingList);","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\ViewFriend\\ViewFriend.js",["271","272","273"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getFriend } from '../../../api/actions/chat_action';\r\nimport TelegramIcon from '@material-ui/icons/Telegram';\r\n\r\nconst ViewFriend = ({match, UserData}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const data = match.params.search || null;\r\n\r\n    const [DataFriend, setDataFriend] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n\r\n        let body = {\r\n            data : data\r\n        }\r\n\r\n        dispatch(getFriend(body))\r\n        .then(response => {\r\n            setDataFriend(response.payload);\r\n        })\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"friend_profile\">\r\n            <div>\r\n                <img src={DataFriend.image} />\r\n                <div className=\"friend_name\">{DataFriend.userName}</div>\r\n                <div className=\"friend_say\">{DataFriend.message}</div>\r\n                <Link to={`/main/ChatingRoom/${UserData._id}_${DataFriend._id}`}>\r\n                    <TelegramIcon />\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ViewFriend);\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\SocketList\\useChat.js",["274","275"],"import React, {useEffect, useRef, useState} from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\n\r\nconst NEW_CHAT_MESSAGE_EVENT = 'newChatMessage';\r\nconst SOCKET_SERVER_URL = \"http://localhost:4000\";\r\n\r\nconst useChat = (roomId, checktUpdate, setchecktUpdate) => {\r\n\r\n    const [Messages, setMessages] = useState([]);\r\n    const socketRef = useRef();\r\n    \r\n    useEffect(() => {\r\n\r\n        // 웹소켓 연결을 한다\r\n        socketRef.current = socketIOClient(SOCKET_SERVER_URL,{\r\n            query : { roomId },\r\n        });\r\n\r\n        // 들어오는 메시지를 듣는다\r\n        socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, (message) => {\r\n            const incomingMessage = {\r\n                ...message,\r\n                ownedByCurrentUser : message.senderId === socketRef.current.id,\r\n            };\r\n            setMessages((messages)=>[...messages, incomingMessage]);\r\n            setchecktUpdate(!checktUpdate);\r\n        });\r\n\r\n        // 소켓 연결이 끝나면 부순다\r\n        return () => { \r\n            socketRef.current.disconnect();\r\n        }\r\n\r\n    }, [roomId])\r\n\r\n    // 같은 방에 있는 유저들에게 메세지를 전송한다\r\n    const sendMessage = (messageBody, Id, roomId, userName, image, anoter) => {\r\n        socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\r\n            message: messageBody,\r\n            senderId: socketRef.current.id,\r\n            sendUser : Id,\r\n            roomName : roomId,\r\n            userName : userName,\r\n            image : image,\r\n            user : Id,\r\n            toUser : anoter,\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return { Messages, sendMessage, checktUpdate, setchecktUpdate}\r\n}\r\n\r\nexport default useChat;","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Options\\Options.js",["276"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport TelegramIcon from '@material-ui/icons/Telegram';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport Weather from './option/Weather';\r\nimport {Link} from 'react-router-dom';\r\nimport '../../MainPage/Main.scss';\r\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\r\n\r\nconst Options = ({UserData}) => {\r\n\r\n    const onClickHandler = () =>{\r\n        axios.get('/api/users/logout')\r\n        .then(response => {\r\n            if(response.data.success){\r\n                window.location.assign('/');\r\n            }else{\r\n                alert('로그아웃 하는데 실패 했습니다.');\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"option_container\">\r\n            <div className=\"option_box\">\r\n                <div className=\"option_list1\">\r\n                    <Link to=\"/main/ChatingList\">\r\n                        <ul>\r\n                            <li><TelegramIcon /></li>\r\n                            <li>대화</li>\r\n                        </ul>\r\n                    </Link>\r\n                    <Link to=\"/main/FriendList\">\r\n                        <ul>\r\n                            <li><PeopleAltIcon /></li>\r\n                            <li>친구</li>\r\n                        </ul>\r\n                    </Link>\r\n                    <Link to=\"/main/Bucket\">\r\n                        <ul>\r\n                            <li><ShoppingBasketIcon /></li>\r\n                            <li>주문내역</li>\r\n                        </ul>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"option_list2\">\r\n                    <Link to=\"/main/Internet/Shop\">\r\n                        <ul>\r\n                            <li><ShoppingCartIcon /></li>\r\n                            <li>쇼핑</li>\r\n                        </ul>\r\n                    </Link>\r\n                    <Link to=\"/main/Internet/TV\">\r\n                        <ul>\r\n                            <li><LiveTvIcon /></li>\r\n                            <li>TV</li>\r\n                        </ul>\r\n                    </Link>\r\n                    <Link to=\"/main/Internet/posts\">\r\n                        <ul>\r\n                            <li><ChatIcon /></li>\r\n                            <li>게시판</li>\r\n                        </ul>\r\n                    </Link>\r\n                </div>\r\n                {/* <TelegramIcon /> 대화하기\r\n                <PeopleAltIcon /> 친구목록\r\n                <AnnouncementIcon /> 뉴스\r\n                <ShoppingCartIcon /> 쇼핑\r\n                <LiveTvIcon /> Egg TV\r\n                <ChatIcon /> Egg Board */}\r\n            </div>\r\n            \r\n            <Weather UserData={UserData}/>\r\n            <div className=\"egg_cont\">\r\n                <img className=\"egg_box\" src=\"/gyeran_height_cut.png\" /><br/>\r\n                항상 계란톡을 이용해주셔서 감사합니다.\r\n            </div>\r\n            <div className=\"log_cont\">\r\n                <button className=\"egg_log\" onClick={onClickHandler}>\r\n                        로그아웃\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Options\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatingRoom.js",["277","278","279","280","281","282","283","284","285","286","287","288"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport useChat from './useChat';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getChats } from '../../../api/actions/socket_action';\r\nimport '../../MainPage/Main.scss';\r\nimport { checkMember } from '../../../api/actions/chat_action';\r\nimport axios from 'axios';\r\n\r\nconst ChatingRoom = ({match, UserData, checktUpdate, setchecktUpdate }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [roomId, setroomId] = useState(match.params.search);\r\n    const [Body, setBody] = useState(\"\");\r\n    const [changeRoom, setchangeRoom] = useState(\"\")\r\n\r\n    const { Messages, sendMessage, setId } = useChat(changeRoom, checktUpdate, setchecktUpdate);\r\n    const [newMessage, setnewMessage] = useState(\"\");\r\n    const [Write, setWrite] = useState(\"\")\r\n    let anoter =\"\";\r\n\r\n    // const roomId = match.params.search;\r\n    const checkMembers = match.params.search.split('_');\r\n    useEffect(() => {\r\n        let body = {\r\n            roomId : roomId,\r\n            userId : UserData._id\r\n        }\r\n        axios.post('/api/chats/changeMes',body)\r\n\r\n        setchecktUpdate(!checktUpdate)\r\n    }, [])\r\n    useEffect(() => {\r\n        setchecktUpdate(!checktUpdate)\r\n        \r\n        let body = {\r\n            roomId : roomId,\r\n            userId : UserData._id\r\n        }\r\n        axios.post('/api/chats/changeMes',body)\r\n\r\n    }, [UserData])\r\n\r\n    useEffect(()=>{\r\n        let member = {\r\n            one: checkMembers[0],\r\n            two: checkMembers[1],\r\n        };\r\n        dispatch(checkMember(member))\r\n            .then(response => {\r\n                if(match.params.search !== response.payload.url){\r\n                    window.location.assign(`/main/ChatingRoom/${response.payload.url}`);\r\n                    \r\n                }\r\n                else{\r\n                    setroomId(response.payload.url)\r\n                    setBody({\r\n                        roomId: response.payload.url\r\n                    })\r\n\r\n                }\r\n                \r\n            })\r\n    },[match])\r\n    useEffect(()=>{\r\n        dispatch(getChats(Body))\r\n            .then(response => {\r\n                setStartData(response.payload);\r\n            })\r\n    },[Body])\r\n    useEffect(()=>{\r\n        setchangeRoom(roomId);\r\n    },[roomId])\r\n    \r\n    const [StartData, setStartData] = useState([])\r\n    \r\n    const onDoingTyping = (event) => {\r\n        setnewMessage(event.target.value);\r\n        setWrite(`${UserData.userId}님이 작성중입니다....`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(newMessage===\"\"){\r\n            setWrite('');\r\n        }\r\n        setchecktUpdate(!checktUpdate)\r\n    }, [newMessage])\r\n\r\n    const onSubmitMessage = () => {\r\n        if(checkMembers[0] == UserData._id){\r\n            anoter = checkMembers[1];\r\n        }else{\r\n            anoter = checkMembers[0];\r\n        }\r\n        sendMessage(newMessage, UserData._id, changeRoom, UserData.userName, UserData.image, anoter);\r\n        setnewMessage(\"\");\r\n    }\r\n\r\n    const onKeyPress = (e) => {\r\n        if(e.key === 'Enter'){\r\n            onSubmitMessage();\r\n        }\r\n    };\r\n\r\n    const scrollRef = useRef();          \r\n    useEffect(() => {         \r\n        scrollRef.current.scrollIntoView({ behavior: 'smooth', block: 'end' });\r\n    },[ Messages, checktUpdate ]);\r\n\r\n    return (\r\n        <div className=\"chatting_area\">\r\n            <div className=\"chat_inside\">\r\n                <div className=\"chat_box\">\r\n                    <ol>\r\n                        {\r\n                            StartData.map((data)=>(\r\n                                data.sendUser._id === UserData._id ?\r\n                                <div className=\"talk_box\">\r\n                                    <div className=\"say\">\r\n                                        <span className=\"span_name\">{data.sendUser.userName}</span>\r\n                                        <span className=\"span_mess\">{data.message}</span>\r\n                                    </div>\r\n                                    <img className=\"user_img\" src={data.sendUser.image} />\r\n                                </div>\r\n                                :\r\n                                <div className=\"talk_box1\">\r\n                                    <img className=\"user_img1\" src={data.sendUser.image} />\r\n                                    <div className=\"say1\">\r\n                                        <span className=\"span_name1\">{data.sendUser.userName}</span>\r\n                                        <span className=\"span_mess1\">{data.message}</span>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        {\r\n                            Messages.map((message, i)=>(\r\n                                message.ownedByCurrentUser ? \r\n                                <div className=\"talk_box\">\r\n                                    <div className=\"say\">\r\n                                        <span className=\"span_name\">{UserData.userName}</span>\r\n                                        <span className=\"span_mess\">{message.message}</span>\r\n                                    </div>\r\n                                    <img className=\"user_img\" src={UserData.image} />\r\n                                </div>\r\n                                :\r\n                                <div className=\"talk_box1\">\r\n                                    <img className=\"user_img1\" src={message.image} />\r\n                                    <div className=\"say1\">\r\n                                        <span className=\"span_name1\">{message.userName}</span>\r\n                                        <span className=\"span_mess1\">{message.message}</span>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        <div\r\n                            ref={scrollRef}\r\n                        ></div>\r\n                    </ol>\r\n                </div>\r\n                \r\n            </div>\r\n            {/* <input\r\n                value={Write}\r\n            /> */}\r\n            {/* <div onChange={handleNewMessageChange}><TextsmsIcon />{UserData.userName}님이 작성중입니다....</div> */}\r\n            {/* <textarea \r\n                value={newMessage}\r\n                onChange={onDoingTyping}\r\n                placeholder=\"Write message...\"\r\n                className=\"new-message-input-field\"\r\n            /> */}\r\n            <div className=\"btns\">\r\n                <input\r\n                    className=\"chat_input\"\r\n                    value={newMessage}\r\n                    onChange={onDoingTyping}\r\n                    placeholder=\"메시지를 작성하세요\"\r\n                    onKeyPress={onKeyPress}\r\n                />\r\n                <button onClick={onSubmitMessage} className=\"send-message-button\" >\r\n                    전송\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ChatingRoom);","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Bucket\\Bucket.js",["289"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../../MainPage/Main.scss';\r\nimport BucketItem from './BucketItem';\r\n\r\nconst Bucket = ({UserData}) => {\r\n    return (\r\n        <div>\r\n            <div className=\"option_type\">\r\n                <div className=\"type_profile\">\r\n                    <img src={UserData.image} />\r\n                    <div className=\"type_text\">{UserData.userName}({UserData.userId})님의<br />주문내역</div>\r\n                </div>\r\n            </div>\r\n            <BucketItem/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Bucket);\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\FriendList\\ShowFriend\\ShowFriend.js",["290","291","292"],"import React, {useEffect} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ShowFriend = React.memo(({UserData, ListFriend, ClickEvent, setClickEvent}) => {\r\n\r\n    if(ListFriend.Myfriend !== undefined){\r\n        return (\r\n            <div>\r\n                {\r\n                    ListFriend.Myfriend.map((friend)=>(\r\n                        <Link key={friend._id} to={`/main/ViewFriend/${friend.friendId}`} style={{textDecoration:'none',color:'#000'}}>\r\n                            <div className=\"myProfile\" key={friend._id}>\r\n                                <img src={friend.friendImage} />\r\n                                <div className=\"text_site\">\r\n                                    <div className=\"top\">{friend.friendName}</div>\r\n                                    <div className=\"bottom\">{friend.friendMessage}</div>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }else{\r\n        return (\r\n            <div>\r\n                <div>친구가 없습니다</div>\r\n            </div>\r\n        )\r\n    }\r\n})\r\n\r\nexport default withRouter(ShowFriend);\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\actions\\friend_action.js",[],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\FriendList\\Title\\LeftTitle.js",["293","294"],"import axios from 'axios';\r\nimport React, { useRef, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../../../MainPage/Main.scss';\r\nimport {\r\n    SearchOutlined,\r\n    UserAddOutlined\r\n} from '@ant-design/icons';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst LeftTitle = React.memo(({\r\n    Search,\r\n    Friend,\r\n    FriendClick,\r\n    InputText,\r\n    InputText2,\r\n    onToggle,\r\n    onToggle2,\r\n    onInputTextHandler,\r\n    onInputTextHandler2\r\n}) => {\r\n\r\n    const inputEl = useRef(null);\r\n    const inputEl2 = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if(Search) inputEl.current.focus();\r\n        if(Friend) inputEl2.current.focus();\r\n        if(FriendClick) inputEl2.current.focus();\r\n    }, [Search, Friend, FriendClick])\r\n\r\n    return (\r\n        <div className=\"left_title\">\r\n            <div>친구</div>\r\n            <div className=\"search_friend\">\r\n                {Search ? <div className=\"input_box\"><input type=\"text\" placeholder=\"친구검색\" value={InputText} ref={inputEl} onChange={onInputTextHandler} /><SearchIcon className=\"search_icon\" /></div> : null}\r\n                {Friend || FriendClick ? <div className=\"input_box\"><input type=\"text\" placeholder=\"친구추가\" value={InputText2} ref={inputEl2} onChange={onInputTextHandler2}/><SearchIcon className=\"search_icon\" /></div> : null}\r\n                {/* <SearchOutlined onClick={onToggle}/> */}\r\n                <UserAddOutlined onClick={onToggle2} className=\"add_friend\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default withRouter(LeftTitle);\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\SearchFriend.js",["295"],"import React from 'react';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport '../../../MainPage/Main.scss';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst SearchFriend = React.memo(({friendDB, UserData, onPlustHandler, ListFriend }) => {\r\n    console.log(ListFriend);\r\n    if(friendDB.friend){\r\n        if(friendDB.friend.length !== 0){ //검색결과 있을 때\r\n            return (\r\n                <div>\r\n                    {\r\n                        friendDB.friend.map((searched) => (\r\n                            // let searched = searched.filter(exceptsearch => exceptsearch.userId === UserData.userId)\r\n                            searched.userId !== UserData.userId ?   //검색결과에서 자신 제외\r\n                                <div className=\"myProfile\" key={searched.userId} onClick={()=>onPlustHandler(searched.userId)}>\r\n                                    <img src={searched.image} />\r\n                                    <div className=\"text_site\">\r\n                                        <div className=\"top\">{searched.userName}</div>\r\n                                        <div className=\"bottom\">{searched.message}</div>\r\n                                    </div>\r\n                                    <AddBoxIcon className=\"plus\"/>\r\n                                </div>\r\n                                :\r\n                                <div className=\"error_me\">검색결과가 없습니다</div>\r\n                        ))           \r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n        else{          //검색결과 없을 때\r\n            return(\r\n                <div className=\"plus_site\">검색 결과가 없습니다</div>\r\n            )\r\n        }\r\n    }else{          //검색결과 없을 때\r\n        return(\r\n            <div className=\"plus_site\">검색 결과가 없습니다</div>\r\n        )\r\n    }\r\n    \r\n    \r\n});\r\n\r\nexport default withRouter(SearchFriend);\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\PlusFriend.js",[],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\FriendList\\MyProfile\\MyProfile.js",["296"],"import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nconst MyProfile = React.memo(({UserData}) => {\r\n\r\n    return (\r\n        <div className=\"myfile\">\r\n            <Link to=\"/main/UpdateUser\">\r\n                <img src={UserData.image} />\r\n                <div className=\"text_site\">\r\n                    <div className=\"top\">{UserData.userName}</div>\r\n                    <div className=\"bottom\">{UserData.message}</div>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default withRouter(MyProfile);\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\actions\\chat_action.js",[],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatItem.js",["297","298","299","300","301"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { ChatInform } from '../../../api/actions/socket_action';\r\nimport moment from 'moment';\r\nimport { FriendProfile } from '../../../api/actions/socket_action';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../../MainPage/Main.scss';\r\nimport useChat from './useChat';\r\nimport { CountHow } from '../../../api/actions/socket_action';\r\nimport 'moment/locale/ko'; \r\n\r\nconst ChatItem = ({ chat, UserData, checktUpdate, setchecktUpdate }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [Mes, setMes] = useState(\"\");\r\n    const [MatchUrl, setMatchUrl] = useState(\"\");\r\n    const [Fri, setFri] = useState(\"\");\r\n    const {Messages} = useChat(chat, checktUpdate, setchecktUpdate);\r\n    const [Num, setNum] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        let body ={\r\n            chat : chat,\r\n            userdata : UserData\r\n        }\r\n        dispatch(ChatInform(body))\r\n        .then(response => {\r\n            setMes(response.payload[0]);\r\n            setMatchUrl(response.payload[0].roomName.split('_'));\r\n            if(UserData._id===response.payload[0].roomName.split('_')[0]){\r\n                let body ={\r\n                    mem : response.payload[0].roomName.split('_')[1]\r\n                }\r\n                dispatch(FriendProfile(body))\r\n                .then(response => {\r\n                    setFri(response.payload[0])\r\n                })\r\n            }else{\r\n                let body ={\r\n                    mem : response.payload[0].roomName.split('_')[0]\r\n                }\r\n                dispatch(FriendProfile(body))\r\n                .then(response => {\r\n                    setFri(response.payload[0])\r\n                })\r\n            }\r\n        })\r\n    }, [ UserData, chat, Messages, checktUpdate ])\r\n\r\n    useEffect(() => {\r\n        let body = {\r\n            roomId : chat,\r\n            _id : UserData._id,\r\n        }\r\n        dispatch(CountHow(body))\r\n        .then(response => {\r\n            setNum(response.payload.number);\r\n        })\r\n        // axios.post('/api/chats/countMessage',body)\r\n        // .then(response => {\r\n        //     console.log(response)\r\n        // })\r\n    }, [ Messages, Fri ])\r\n\r\n    useEffect(() => {\r\n        setchecktUpdate(!checktUpdate)\r\n    }, [Num])\r\n\r\n    return (\r\n        <div className=\"talking\">\r\n            {\r\n                Mes && Fri &&\r\n                <Link to={`/main/ChatingRoom/${chat}`}>\r\n                    <div className=\"talk_site\">\r\n                        <img src={Fri.image} />\r\n                        <div className=\"talk_pro\">\r\n                            <span>\r\n                                {Fri.userName}\r\n                            </span><br/>\r\n                            <span className=\"talk_message\">\r\n                                {Mes.message}\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"talk_div\">\r\n                            <div className=\"talk_time\">\r\n                                {moment(Mes.date).format('A h:mm')}\r\n                            </div>\r\n                            <div className=\"talk_count\">\r\n                                {\r\n                                    Num !== 0 ?\r\n                                    Num\r\n                                    : <></>\r\n                                    }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n            }\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default withRouter(ChatItem);\r\n\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatTitle.js",[],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\SocketList\\AddBaner.js",["302","303"],"import React, { useState, useEffect } from 'react';\r\nimport '../../MainPage/Main.scss';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst AddBaner = () => {\r\n\r\n    const [Image, setImage] = useState(\"\");\r\n\r\n    const data = [\r\n        '/advertise/k-000.png',\r\n        '/advertise/k-001.png',\r\n        '/advertise/k-002.png',\r\n        '/advertise/k-003.png',\r\n        '/advertise/k-004.png',\r\n        '/advertise/k-005.png',\r\n        '/advertise/k-006.png',\r\n        '/advertise/k-007.png',\r\n        '/advertise/k-008.png',\r\n        '/advertise/k-009.png',\r\n        '/advertise/k-0010.png',\r\n        '/advertise/k-0011.png',\r\n    ]\r\n\r\n    useEffect(() => {\r\n        // 0~9 랜덤\r\n        const randomNum = Math.floor(Math.random()*10 + 1);\r\n        setImage(data[randomNum]);\r\n        console.log(randomNum);\r\n    }, [])\r\n    return (\r\n        <div className=\"big_ad\">\r\n            <img className=\"ad_ver\" src={Image} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(AddBaner);\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\Board.js",["304","305","306"],"import React, {useEffect, useState} from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport BoardList from './BoardList';\r\nimport BoardCreate from './BoardCreate';\r\nimport BoardDetail from './BoardDetail';\r\nimport BoardUpdate from './BoardUpdate';\r\n\r\nconst Board = ({match, UserData}) => {\r\n    // const [selection, setselection] = useState('BoardList');\r\n    // useEffect(() => {\r\n        //     console.log('selection', selection);\r\n        // }, [selection])\r\n    // const selection = match.params.select || 'BoardList';\r\n    const [selection, setSelection] = useState('BoardList');\r\n    const [process, setProcess] = useState('');\r\n    console.log('params', match.params);\r\n    useEffect(()=>{\r\n        setSelection(match.params.select);\r\n        console.log('selection', selection);\r\n    }, [match.params.select])\r\n    useEffect(()=>{\r\n        setProcess(match.params.process);\r\n        console.log('process', process);\r\n    }, [match.params.process])\r\n        return (\r\n        <div>\r\n            {selection === 'BoardList' || selection === undefined ? <BoardList UserData={UserData} selection={selection}/> \r\n            : selection === 'create' ? <BoardCreate UserData={UserData}/> \r\n            : process === 'update' ? <BoardUpdate UserData={UserData}/> \r\n            : <BoardDetail UserData={UserData} selection={selection} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Board);\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\News\\News.js",["307"],"import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\nimport usePromise from '../../../../usePromise';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport NewsItem from './NewsItem';\r\n\r\nconst News = ({ UserData }) => {\r\n\r\n    const [Count, setCount] = useState(0);\r\n\r\n\r\n    const [loading, resolved, error] = usePromise(() => {\r\n        return axios.get(\r\n            `https://newsapi.org/v2/top-headlines?country=kr&apiKey=112d8e8b89e94be1a897eaffad725b6a`\r\n        );\r\n    }, [UserData]);\r\n\r\n    // 대기중 일때 실행\r\n    if (loading) {\r\n        return (\r\n            <LoadingOutlined className=\"loading\"/>\r\n        )\r\n    }\r\n    // 값이 없으면 null 값으로 반환\r\n    if (!resolved) {\r\n        return (\r\n            <div>뉴스오류</div>\r\n        );\r\n    }\r\n\r\n    // resolved값이 유효할 때\r\n    const { articles } = resolved.data;\r\n\r\n    return (\r\n        <div className=\"news_top\">\r\n            {articles.map((article)=>(\r\n                <NewsItem key={article.url} article={article} Count={Count} setCount={setCount}/>\r\n                ))}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default withRouter(News);\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\TV\\TV.js",["308","309","310","311"],"import React, { useEffect, useState } from 'react'\r\nimport client from 'cheerio-httpcli'\r\nimport cheerio from 'cheerio'\r\nimport axios from 'axios'\r\nimport '../../../MainPage/Main.scss';\r\n\r\nconst TV = () => {\r\n\r\n    const [Chu, setChu] = useState([]);\r\n    useEffect(() => {\r\n        axios.get('/api/videos')\r\n            .then(response => {\r\n                const { data } = response.data;\r\n                console.log('aaaaaaaaaa', response.data.result);\r\n                setChu(response.data.result);\r\n            })\r\n    }, [])\r\n    \r\n    return (\r\n        <div className=\"chu_box\">\r\n            { Chu &&\r\n            Chu.map((ch) => (\r\n                <a href={ch.video_src}>\r\n                    <div className=\"chu_src\" key={ch.video_src}>\r\n                        <div className=\"chu_div\">\r\n                            <img className=\"chu_img\" src={ch.img_data}/>\r\n                        </div>\r\n                        <div className=\"chu_span\">\r\n                            <span className=\"chu_say\">{ch.span_text}</span>\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n            ))\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TV;","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\Shop.js",["312","313"],"import React, { useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport ShopItem from './ShopItem';\r\nimport PayResult from './PayResult';\r\n\r\nconst Shop = ({location, match, UserData}) => {\r\n    function getUrlParams() {\r\n        var params = {};\r\n        location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(str, key, value) { params[key] = value; });\r\n        return params;\r\n    }\r\n    const query = getUrlParams();\r\n    const dataBase= [\r\n        {\r\n            image: '/shopping/shopping_1.png',\r\n            productName: '오트밀크로 만든 쫀득 수제 생초콜릿 5종(밀크/다크/녹차/인절미/누텔라)',\r\n            productCode: 1,\r\n            productPrice: 15900,\r\n            productDesc: '/shopping/shopping_1_desc.jpg',\r\n        },\r\n        {\r\n            image: '/shopping/shopping_2.jpg',\r\n            productName: '\"고마운분께 감사선물\" 하루견과 고마워요/사랑해요/감사해요 30입세트',\r\n            productCode: 2,\r\n            productPrice: 13900,\r\n            productDesc: '/shopping/shopping_2_desc.jpg',\r\n        },\r\n        {\r\n            image: '/shopping/shopping_3.jpg',\r\n            productName: '[디저트선물] 프랑스 프리미엄 마카롱 (12입)',\r\n            productCode: 3,\r\n            productPrice: 12500,\r\n            productDesc: '/shopping/shopping_3_desc.jpg',\r\n        },\r\n        {\r\n            image: '/shopping/shopping_4.jpg',\r\n            productName: '\"내마음은 하트\" 페레로로쉐 T8 하트 초콜릿',\r\n            productCode: 4,\r\n            productPrice: 8400,\r\n            productDesc: '/shopping/shopping_4_desc.jpg',\r\n        },\r\n    ]\r\n\r\n    const boxStyle = {\r\n      display: \"inline-block\",\r\n      width: \"43%\",\r\n      padding: \"10% 0 0\",\r\n      textDecoration: 'none',\r\n      color: 'inherit',\r\n      fontSize: '13px',\r\n    };\r\n\r\n    const titleStyle = {\r\n      display: \"-webkit-box\",\r\n      fontSize: \"12px\",\r\n      width: \"100%\",\r\n      height: \"35px\",\r\n      overflow: \"hidden\",\r\n      whiteSpace: 'normal',\r\n      textOverflow: \"ellipsis\",\r\n      margin: '3% 0 3%'\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"products_section\" style={{display: 'flex', justifyContent: 'space-around', flexWrap: 'wrap', width: '90%', margin: '0 auto'}}>\r\n                {match.params.select === undefined ?\r\n                query.item === undefined ? \r\n                //리스트\r\n                dataBase.map((productBox, index) => (\r\n                    // <Link to={`/main/Internet/Shop/${index+1}`} className=\"products_box\" style={boxStyle}>\r\n                    <Link to={`/main/Internet/Shop?item=${index}`} className=\"products_box\" style={boxStyle} key={index}>\r\n                        <img className=\"products_img\" src={productBox.image} style={{width: '100%'}}/>\r\n                        <div className=\"products_title\" style={titleStyle}>{productBox.productName}</div>\r\n                        <div className=\"products_price\" style={{fontWeight: '700'}}>{productBox.productPrice.toLocaleString()}원</div>\r\n                    </Link>\r\n                ))\r\n                :\r\n                //상품조회\r\n                <ShopItem key={query.item} productBox={dataBase[query.item]} querynum={query.item} UserData={UserData}/>\r\n                :\r\n                query.item === undefined ?\r\n                //결제승인\r\n                <PayResult UserData={UserData}/>\r\n                :\r\n                <div>페이지가 없습니다.</div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Shop);\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Options\\option\\Weather.js",["314","315","316","317","318"],"import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport usePromise from '../../../../usePromise';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Weather = ({UserData}) => {\r\n\r\n    const [state, setstate] = useState(\"\")\r\n\r\n    // api.openweathermap.org/data/2.5/weather?q=seoul&appid=3759cf2983458ec945fed258d8c987fb&units=imperial\r\n    const [loading, resolved, error] = usePromise(() => {\r\n        return axios.get(\r\n            `http://api.openweathermap.org/data/2.5/weather?q=seoul&appid=3759cf2983458ec945fed258d8c987fb`\r\n        );\r\n    }, [UserData]);\r\n\r\n    // 대기중 일때 실행\r\n    if (loading) {\r\n        return (\r\n            <LoadingOutlined className=\"loading\"/>\r\n        )\r\n    }\r\n    // 값이 없으면 null 값으로 반환\r\n    if (!resolved) {\r\n        return (\r\n            <div>날씨오류</div>\r\n        );\r\n    }\r\n\r\n    // resolved값이 유효할 때\r\n    const open = resolved;\r\n    const { weather } = resolved.data;\r\n    console.log(resolved);\r\n    return (\r\n        <div className=\"news_top\">\r\n            <div className=\"news_head\">\r\n                <img src={`http://openweathermap.org/img/wn/${weather[0].icon}.png`} />\r\n                <div className=\"news_weather\">\r\n                    <ul>\r\n                        <li>위치 : {resolved.data.name}</li>\r\n                        <li>날씨 : {weather[0].main}</li>\r\n                        <li>풍속 : {resolved.data.wind.speed}</li>\r\n                    </ul>\r\n                    \r\n                    \r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Bucket\\BucketItem.js",["319","320","321","322","323"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n// import '../../MainPage/Main.scss';\r\nimport moment from 'moment';\r\n\r\nconst BucketItem = ({UserData}) => {\r\n    const [items, setItems] = useState('');\r\n    \r\n    console.log('items', items);\r\n    useEffect(()=>{\r\n        axios.post('/api/bucket/list', UserData)\r\n        .then(res => {\r\n            console.log('res', res, res.data);\r\n            setItems(res.data.items);\r\n            console.log('asdf', res.data.items)\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"item_container\">\r\n            {items.length !== 0 ?\r\n                items.map(item => (\r\n                    <div className=\"item_wrapper\">\r\n                        <h5>주문 내역</h5>\r\n                        <div className=\"item_approvedAt\">{moment(item.bucketData.approved_at).format('YYYY-MM-DD HH:mm:ss')}</div>\r\n                        <div className=\"item_row\">\r\n                            <div className=\"item_img\">\r\n                                {item.bucketData.item_code === '1' && <img src=\"/shopping/shopping_1.png\"/>}\r\n                                {item.bucketData.item_code === '2' && <img src=\"/shopping/shopping_2.jpg\"/>}\r\n                                {item.bucketData.item_code === '3' && <img src=\"/shopping/shopping_3.jpg\"/>}\r\n                                {item.bucketData.item_code === '4' && <img src=\"/shopping/shopping_4.jpg\"/>}\r\n                            </div>\r\n                            <div className=\"item_title\">{item.bucketData.item_name}</div>\r\n                        </div>\r\n                        <div className=\"item_price\">{item.bucketData.amount.total.toLocaleString()} 원</div>\r\n                    </div>\r\n                ))\r\n                :\r\n                <div> 주문내역이 없습니다. </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(BucketItem);\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\IntTitle\\IntTitle.js",[],"C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardUpdate.js",["324","325"],"import React, {useEffect, useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { updatePost, viewPost } from '../../../../api/actions/post_action';\r\nimport { Button } from \"@material-ui/core\";\r\nimport './Board.scss';\r\n\r\nconst BoardUpdate = ({UserData, match, history}) => {\r\n    const dispatch = useDispatch();\r\n    const selection = match.params.select;\r\n    const process = match.params.process;\r\n\r\n    const [post, setPost] = useState('');\r\n\r\n    const [inputs, setInputs] = useState({\r\n        title: '',\r\n        body: '',\r\n    });\r\n    \r\n    const {title, body} = inputs;\r\n\r\n    useEffect(()=>{\r\n        console.log('update selection', selection);\r\n        dispatch(viewPost({UserData, selection, process}))\r\n        .then(res => {\r\n            console.log('detail', res.payload.post)\r\n            setPost(res.payload.post);\r\n            \r\n        })\r\n    }, [selection]);\r\n\r\n    useEffect(()=>{\r\n        setInputs({ title: post.title, body: post.body })\r\n    }, [post]);\r\n\r\n    const onChange = (e) => {\r\n        const {className, value} = e.target\r\n        const nextInputs = {\r\n            ...inputs,\r\n            [className] : value,\r\n        }\r\n        setInputs(nextInputs)\r\n    }\r\n    const onSubmitUpdate = (e) => {\r\n        e.preventDefault();\r\n        const Writer = UserData.userNickName;\r\n        dispatch(updatePost({title, body, selection}))\r\n        .then(res => {\r\n            history.push('/main/Internet/posts');\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <form onSubmit={onSubmitUpdate} >\r\n                <div className=\"form_group\">\r\n                    <label htmlFor=\"title\">제목</label>\r\n                    <input type=\"text\" id=\"title\" name=\"title\" value={title} className=\"title\"\r\n                    onChange={onChange}/>\r\n                </div>\r\n                <div className=\"form_group\">\r\n                    <label htmlFor=\"body\">내용</label>\r\n                    <textarea id=\"body\" name=\"body\" rows=\"5\" value={body} className=\"body\"\r\n                    onChange={onChange}></textarea>\r\n                </div>\r\n                <div className=\"btn_group\">\r\n                    <Button type=\"submit\" className=\"btn btn_style\">제출</Button>\r\n                    <a className=\"btn btn_primary\" href=\"main/Internet/posts\"><Button>취소</Button></a>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(BoardUpdate)\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardCreate.js",["326"],"import React, {useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { createPost } from '../../../../api/actions/post_action';\r\nimport { Button } from \"@material-ui/core\";\r\nimport './Board.scss';\r\n\r\nconst BoardCreate = ({UserData, match, history}) => {\r\n    const dispatch = useDispatch();\r\n    const selection = match.params.select;\r\n\r\n    const [inputs, setInputs] = useState({\r\n        title: '',\r\n        body: '',\r\n    });\r\n    \r\n    const {title, body} = inputs\r\n\r\n    const onChange = (e) => {\r\n        const {className, value} = e.target\r\n        const nextInputs = {\r\n            ...inputs,\r\n            [className] : value,\r\n        }\r\n        setInputs(nextInputs)\r\n    }\r\n    const onSubmitCreate = (e) => {\r\n        e.preventDefault();\r\n        const writerData = UserData;\r\n        // console.log('submit', title, body, UserData.userNickName);\r\n        dispatch(createPost({title, body, writerData}))\r\n        .then(res => {\r\n            history.push('/main/Internet/posts');\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            {/* <form action=\"/posts\" method=\"post\"> */}\r\n            <form onSubmit={onSubmitCreate}>\r\n                <div className=\"form_group\">\r\n                    <label htmlFor=\"title\">제목</label>\r\n                    <input type=\"text\" id=\"title\" name=\"title\" value={title} className=\"title\"\r\n                    onChange={onChange}/>\r\n                </div>\r\n                <div className=\"form_group\">\r\n                    <label htmlFor=\"body\">내용</label>\r\n                    <textarea id=\"body\" name=\"body\" rows=\"5\" value={body} className=\"body\"\r\n                    onChange={onChange}></textarea>\r\n                </div>\r\n                <div className=\"btn_group\">\r\n                    <Button type=\"submit\" className=\"btn btn_style\">제출</Button>\r\n                    <a className=\"btn btn_primary\" href=\"main/Internet/posts\"><Button>취소</Button></a>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(BoardCreate)\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardList.js",["327","328"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { getPosts } from '../../../../api/actions/post_action'\r\n// import { createPost } from './BoardCU'\r\nimport { Button } from \"@material-ui/core\";\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport './Board.scss';\r\n\r\nconst BoardList = ({match, UserData}) => {\r\n    const dispatch = useDispatch();\r\n    const [posts, setPosts] = useState('');\r\n\r\n    console.log('posts', posts);\r\n    useEffect(()=>{\r\n        dispatch(getPosts())\r\n        .then(res => {\r\n            setPosts(res.payload.posts);\r\n        })\r\n    }, [match.params]);\r\n\r\n    return (\r\n        <div className=\"wrapper\" style={{position: 'relative'}}>\r\n            <h3 className=\"board_title\">Egg 게시판</h3>\r\n            {/* <div style={{display: 'flex', justifyContent: 'flex-end'}}> */}\r\n            <div style={{position: 'absolute', top: -5, right: 0,}}>\r\n                <Link to=\"/main/Internet/posts/create\"><Button className=\"btn_style\" style={{backgroundColor: '#f6bd63', color: '#fff', marginRight: '5%'}}>글쓰기</Button></Link>\r\n            </div>\r\n            {posts.length !== 0 ? \r\n                posts.map(post => (\r\n                    <Link key={post._id} className=\"post_box\" to={`/main/Internet/posts/${post._id}`}>\r\n                        <div className=\"title_row\" >\r\n                            <div className=\"title_text\">{post.title}</div>\r\n                            <div className=\"img_wrapper\"><img className=\"list_profile_img\" src={post.writerData.image}/></div>\r\n                        </div>\r\n                        {/* <div className=\"body\">{post.body}</div> */}\r\n                    </Link>\r\n                ))\r\n                :\r\n                // <div>게시글이 없습니다.</div>\r\n                <LoadingOutlined className=\"loading\"/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(BoardList)\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\News\\NewsItem.js",["329","330","331"],"import React, {useEffect} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../../../MainPage/Main.scss';\r\n\r\nconst NewsItem = ({ article, Count, setCount }) => {\r\n\r\n    const { title, description, url, urlToImage } = article;\r\n\r\n    // if (Count % 3 === 0) {\r\n        return (\r\n            <div>\r\n                \r\n                    <div className=\"box_article\">\r\n                        <a href={url} target=\"_blank\" rel=\"noopner noreferrer\">\r\n                        {urlToImage ? \r\n                            <img src={urlToImage} alt=\"해당 기사 사진이 오류입니다\" />\r\n                            :\r\n                            <img src='/gyeran.png'/>\r\n                        }\r\n                            <span>{title}</span>\r\n                        </a>\r\n                    </div>\r\n               \r\n            </div>\r\n        )\r\n    // }else {\r\n    //     return (\r\n    //         <div>\r\n    //             <div>\r\n    //                 <a href={url} target=\"_blank\" rel=\"noopner noreferrer\">\r\n    //                     <span>{title}</span>\r\n    //                 </a>\r\n    //             </div>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n}\r\n\r\nexport default withRouter(NewsItem);\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\usePromise.js",["332","333"],"// usePromise.js\r\nimport {useState, useEffect} from 'react';\r\n\r\nexport default function usePromise(promiseCreator, deps){\r\n\r\n    const [loading, setLoading] = useState(false); // 대기중 일때\r\n    const [resolved, setResolved] = useState(null); // 완료 일때\r\n    const [error, setError] = useState(null); // 실패 일때\r\n\r\n    useEffect(()=>{\r\n        const process = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const resolved = await promiseCreator();\r\n                setResolved(resolved);\r\n            } catch (error) {\r\n                setError(error);\r\n            }\r\n            setLoading(false);\r\n        }\r\n        process();\r\n    },deps);\r\n\r\n    return [loading, resolved, error];\r\n} ","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardDetail.js",["334","335"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { deletePost, viewPost } from \"../../../../api/actions/post_action\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Link } from 'react-router-dom';\r\nimport './Board.scss'\r\nimport moment from 'moment';\r\nimport 'moment/locale/ko'; \r\n\r\nconst BoardDetail = ({UserData, match, history, selection}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [post, setPost] = useState('');\r\n\r\n    useEffect(() => {\r\n        dispatch(viewPost({UserData, selection}))\r\n        .then(res => {\r\n            console.log('detail', res.payload.post)\r\n            setPost(res.payload.post);\r\n        })\r\n        .then(res => {\r\n            console.log('aaaaaaaposts', post);\r\n        })\r\n    }, [selection]);\r\n\r\n    const onClick = (e) => {\r\n        dispatch(deletePost({UserData, selection}))\r\n        .then(res => {\r\n            // history.push('/main/Internet/posts');\r\n            window.location.assign(`/main/Internet/posts`);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        { post ?\r\n        <div className=\"wrapper\" style={{display: 'block', margin: '10%'}}>\r\n            <div className=\"writer_profile\" style={{display: 'flex', backgroundColor: 'rgb(214 211 211 / 52%)', padding: '5%', borderRadius: '10px'}}>\r\n                <img className=\"profile_imgStyle\" src={post.writerData.image}/>\r\n                <div className=\"profile_txtStyle\">{post.writerData.userNickName}</div>\r\n            </div>\r\n            <h3 className=\"form_group\" >{post.title}</h3>\r\n            <div className=\"form_group\" style={{margin: '15% 0'}}>{post.body}</div>\r\n            <div>{moment(post.createdAt).startOf('sec').fromNow()}</div>\r\n            <div style={{display: 'block', textAlign: 'center', marginTop: '15%'}}>\r\n                <Link to={`/main/Internet/posts/${post._id}/update`}>\r\n                    <Button style={{backgroundColor: '#f6bd63', color: '#fff', marginRight: '5%'}}>수정</Button>\r\n                </Link>\r\n                <Button style={{backgroundColor: 'rgba(182, 182, 182, 0.521)'}} onClick={onClick}>삭제</Button>\r\n            </div>\r\n        </div>\r\n        : <></>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BoardDetail\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\ShopItem.js",["336","337","338","339","340","341"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n// import { payReady } from '../../../../api/actions/pay_action';\r\n\r\nconst ShopItem = ({UserData, productBox, querynum}) => {\r\n    const [state, setState] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n      setState({\r\n        // 응답에서 가져올 값들\r\n        next_redirect_pc_url: \"\",\r\n        tid: \"\",\r\n        // 요청에 넘겨줄 매개변수들\r\n        params: {\r\n          cid: \"TC0ONETIME\",\r\n          partner_order_id: \"partner_order_id\",\r\n          partner_user_id: \"partner_user_id\",\r\n          item_name: productBox.productName,\r\n          item_code: productBox.productCode,\r\n          quantity: 1,\r\n          total_amount: productBox.productPrice,\r\n          // total_amount: 30000,\r\n          tax_free_amount: 0,\r\n          approval_url: \"http://localhost:3000/main/Internet/Shop/success\",\r\n          fail_url: \"http://localhost:3000/main/Internet/Shop/fail\",\r\n          cancel_url: \"http://localhost:3000/main/Internet/Shop/cancel\",\r\n        },\r\n      })\r\n    }, [productBox])\r\n\r\n    useEffect(()=>{\r\n      const { params } = state;\r\n      axios({\r\n        url: \"/v1/payment/ready\",\r\n        // 결제 준비 API는 POST 메소드라고 한다.\r\n        method: \"POST\",\r\n        headers: {\r\n          // 카카오 developers에 등록한 admin키를 헤더에 줘야 한다.\r\n          Authorization: \"KakaoAK ca4cd7847b43dd1a89e836e3ce896daf\",\r\n          \"Content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          // \"Access-Control-Allow-Origin\": \"http://localhost:3000\",\r\n        },\r\n        // 설정한 매개변수들\r\n        params,\r\n      }).then((response) => {\r\n        // 응답에서 필요한 data만 뽑는다.\r\n        const {\r\n          data: { next_redirect_pc_url, tid }\r\n        } = response;\r\n        console.log(next_redirect_pc_url);\r\n        console.log(tid);\r\n        // localstorage에 tid 저장\r\n        window.localStorage.setItem(\"tid\", tid);\r\n        window.localStorage.setItem(\"customerId\", UserData.userId);\r\n        // 응답 data로 state 갱신\r\n        setState({ next_redirect_pc_url, tid });\r\n      });\r\n    },[state]);\r\n  \r\n      const { next_redirect_pc_url} = state;\r\n      console.log('kakao', next_redirect_pc_url);\r\n\r\n    const wrapperStyle = {\r\n      display: 'flex',\r\n      position: 'relative',\r\n      alignItems: 'center',\r\n      margin: '5% 0 8%',\r\n    }\r\n\r\n    const payStyle = {\r\n      margin: '5% 0',\r\n      padding: '4%',\r\n      backgroundColor: '#fbf0b0',\r\n      borderRadius: '10px',\r\n      height: '30px',\r\n    }\r\n\r\n    return (\r\n        productBox !== undefined ?\r\n        <div style={{overflow:'scroll',height:'500px'}}>\r\n            <img className=\"products_img\" src={productBox.image} style={{width: '100%'}}/>\r\n            <div className=\"products_title\" style={{fontSize: '13px',  margin: '5% 0 3%', lineHeight: '1.8'}}>{productBox.productName}</div>\r\n            <div className=\"pay_wrapper\" style={wrapperStyle}>\r\n              <div className=\"products_price\" style={{display: 'inline-block', width: '65%', fontWeight: '700'}}>{productBox.productPrice.toLocaleString()}원</div>\r\n              <div className=\"img_wrapper\" style={{display: 'inline-block'}}><a href={ next_redirect_pc_url }>\r\n                  <img style={payStyle} src=\"/gayran_pay.png\" />\r\n              </a></div>\r\n            </div>\r\n            <img className=\"products_desc\" style={{width: '100%'}} src={productBox.productDesc}/>\r\n        </div>\r\n        :\r\n        <></>\r\n    )\r\n}\r\n\r\nexport default withRouter(ShopItem)\r\n","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\PayResult.js",["342","343"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst PayResult= ({location, match}) => {\r\n    // const [customerId, setCustomerId] = useState('');\r\n    const customerId = window.localStorage.getItem(\"customerId\");\r\n    const [state, setState] = useState({\r\n        params: {\r\n        cid: \"TC0ONETIME\",\r\n        // localstorage에서 tid값을 읽어온다.\r\n        tid: window.localStorage.getItem(\"tid\"),\r\n        partner_order_id: \"partner_order_id\",\r\n        partner_user_id: \"partner_user_id\",\r\n        // pg_token: \"\",\r\n        pg_token: location.search.split(\"=\")[1]\r\n        },\r\n    });\r\n\r\n    const payresult = match.params.select;\r\n    // url에 붙어서 온 pg_token을 결제 API에 줄 params에 할당\r\n    // params.pg_token = search.split(\"=\")[1];\r\n    \r\n    useEffect(()=>{\r\n        // setState({pg_token: location.search.split(\"=\")[1]});\r\n        const { params } = state;\r\n        console.log('params', params);\r\n        console.log('result state', state);\r\n        console.log('aa', state.params.pg_token);\r\n        if(state.params.pg_token !== undefined){\r\n            axios({\r\n            url: \"/v1/payment/approve\",\r\n            method: \"POST\",\r\n            headers: {\r\n                Authorization: \"KakaoAK ca4cd7847b43dd1a89e836e3ce896daf\",\r\n                \"Content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n            },\r\n            params,\r\n            }).then((response) => {\r\n            // 결제 승인에 대한 응답 출력\r\n            const bucketData = response.data;\r\n            console.log(customerId, bucketData);\r\n            axios.post('/api/bucket', {customerId, bucketData});\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n      <div style={{textAlign: 'center'}}>\r\n        {payresult === 'success' && <h4>결제에 성공하였습니다.</h4>}\r\n        {payresult === 'fail' && <h4>결제에 실패하였습니다.</h4>}\r\n        {payresult === 'cancel' && <h4>결제를 취소하였습니다.</h4>}        \r\n        <Link to=\"/main/Internet/Shop\"><Button>쇼핑으로 돌아가기</Button></Link>\r\n      </div>\r\n    );\r\n}\r\nexport default withRouter(PayResult);","C:\\Users\\redqo\\Desktop\\git\\frontend\\src\\api\\actions\\post_action.js",[],{"ruleId":"344","severity":1,"message":"345","line":6,"column":31,"nodeType":"346","messageId":"347","endLine":6,"endColumn":40},{"ruleId":"348","severity":1,"message":"349","line":100,"column":21,"nodeType":"350","endLine":100,"endColumn":72},{"ruleId":"348","severity":1,"message":"349","line":101,"column":50,"nodeType":"350","endLine":101,"endColumn":103},{"ruleId":"344","severity":1,"message":"351","line":5,"column":23,"nodeType":"346","messageId":"347","endLine":5,"endColumn":29},{"ruleId":"352","severity":1,"message":"353","line":32,"column":7,"nodeType":"354","endLine":32,"endColumn":9,"suggestions":"355"},{"ruleId":"352","severity":1,"message":"353","line":39,"column":8,"nodeType":"354","endLine":39,"endColumn":16,"suggestions":"356"},{"ruleId":"357","severity":1,"message":"358","line":5,"column":1,"nodeType":"359","endLine":44,"endColumn":2},{"ruleId":"352","severity":1,"message":"360","line":38,"column":12,"nodeType":"354","endLine":38,"endColumn":14,"suggestions":"361"},{"ruleId":"357","severity":1,"message":"358","line":10,"column":1,"nodeType":"359","endLine":31,"endColumn":2},{"ruleId":"357","severity":1,"message":"358","line":5,"column":1,"nodeType":"359","endLine":16,"endColumn":2},{"ruleId":"357","severity":1,"message":"358","line":5,"column":1,"nodeType":"359","endLine":16,"endColumn":2},{"ruleId":"344","severity":1,"message":"362","line":2,"column":7,"nodeType":"346","messageId":"347","endLine":2,"endColumn":21},{"ruleId":"357","severity":1,"message":"358","line":9,"column":1,"nodeType":"359","endLine":30,"endColumn":2},{"ruleId":"352","severity":1,"message":"363","line":42,"column":8,"nodeType":"354","endLine":42,"endColumn":40,"suggestions":"364"},{"ruleId":"344","severity":1,"message":"365","line":1,"column":38,"nodeType":"346","messageId":"347","endLine":1,"endColumn":49},{"ruleId":"344","severity":1,"message":"366","line":8,"column":22,"nodeType":"346","messageId":"347","endLine":8,"endColumn":33},{"ruleId":"344","severity":1,"message":"367","line":11,"column":10,"nodeType":"346","messageId":"347","endLine":11,"endColumn":23},{"ruleId":"352","severity":1,"message":"368","line":63,"column":7,"nodeType":"354","endLine":63,"endColumn":17,"suggestions":"369"},{"ruleId":"352","severity":1,"message":"370","line":74,"column":7,"nodeType":"354","endLine":74,"endColumn":19,"suggestions":"371"},{"ruleId":"352","severity":1,"message":"353","line":90,"column":8,"nodeType":"354","endLine":90,"endColumn":20,"suggestions":"372"},{"ruleId":"344","severity":1,"message":"362","line":4,"column":7,"nodeType":"346","messageId":"347","endLine":4,"endColumn":21},{"ruleId":"344","severity":1,"message":"373","line":12,"column":12,"nodeType":"346","messageId":"347","endLine":12,"endColumn":20},{"ruleId":"344","severity":1,"message":"374","line":12,"column":22,"nodeType":"346","messageId":"347","endLine":12,"endColumn":33},{"ruleId":"348","severity":1,"message":"349","line":67,"column":25,"nodeType":"350","endLine":67,"endColumn":44},{"ruleId":"344","severity":1,"message":"375","line":13,"column":12,"nodeType":"346","messageId":"347","endLine":13,"endColumn":20},{"ruleId":"344","severity":1,"message":"376","line":16,"column":11,"nodeType":"346","messageId":"347","endLine":16,"endColumn":31},{"ruleId":"352","severity":1,"message":"353","line":28,"column":8,"nodeType":"354","endLine":28,"endColumn":32,"suggestions":"377"},{"ruleId":"344","severity":1,"message":"378","line":1,"column":8,"nodeType":"346","messageId":"347","endLine":1,"endColumn":13},{"ruleId":"352","severity":1,"message":"379","line":27,"column":8,"nodeType":"354","endLine":27,"endColumn":10,"suggestions":"380"},{"ruleId":"348","severity":1,"message":"349","line":32,"column":17,"nodeType":"350","endLine":32,"endColumn":47},{"ruleId":"344","severity":1,"message":"381","line":1,"column":8,"nodeType":"346","messageId":"347","endLine":1,"endColumn":13},{"ruleId":"352","severity":1,"message":"382","line":34,"column":8,"nodeType":"354","endLine":34,"endColumn":16,"suggestions":"383"},{"ruleId":"348","severity":1,"message":"349","line":79,"column":17,"nodeType":"350","endLine":79,"endColumn":73},{"ruleId":"344","severity":1,"message":"384","line":17,"column":36,"nodeType":"346","messageId":"347","endLine":17,"endColumn":41},{"ruleId":"344","severity":1,"message":"385","line":19,"column":12,"nodeType":"346","messageId":"347","endLine":19,"endColumn":17},{"ruleId":"352","severity":1,"message":"386","line":32,"column":8,"nodeType":"354","endLine":32,"endColumn":10,"suggestions":"387"},{"ruleId":"352","severity":1,"message":"388","line":42,"column":8,"nodeType":"354","endLine":42,"endColumn":18,"suggestions":"389"},{"ruleId":"352","severity":1,"message":"390","line":64,"column":7,"nodeType":"354","endLine":64,"endColumn":14,"suggestions":"391"},{"ruleId":"352","severity":1,"message":"353","line":70,"column":7,"nodeType":"354","endLine":70,"endColumn":13,"suggestions":"392"},{"ruleId":"352","severity":1,"message":"382","line":87,"column":8,"nodeType":"354","endLine":87,"endColumn":20,"suggestions":"393"},{"ruleId":"394","severity":1,"message":"395","line":90,"column":28,"nodeType":"396","messageId":"397","endLine":90,"endColumn":30},{"ruleId":"348","severity":1,"message":"349","line":123,"column":37,"nodeType":"350","endLine":123,"endColumn":91},{"ruleId":"348","severity":1,"message":"349","line":127,"column":37,"nodeType":"350","endLine":127,"endColumn":92},{"ruleId":"348","severity":1,"message":"349","line":143,"column":37,"nodeType":"350","endLine":143,"endColumn":86},{"ruleId":"348","severity":1,"message":"349","line":147,"column":37,"nodeType":"350","endLine":147,"endColumn":86},{"ruleId":"348","severity":1,"message":"349","line":11,"column":21,"nodeType":"350","endLine":11,"endColumn":49},{"ruleId":"344","severity":1,"message":"398","line":1,"column":16,"nodeType":"346","messageId":"347","endLine":1,"endColumn":25},{"ruleId":"344","severity":1,"message":"366","line":3,"column":10,"nodeType":"346","messageId":"347","endLine":3,"endColumn":21},{"ruleId":"348","severity":1,"message":"349","line":15,"column":33,"nodeType":"350","endLine":15,"endColumn":65},{"ruleId":"344","severity":1,"message":"378","line":1,"column":8,"nodeType":"346","messageId":"347","endLine":1,"endColumn":13},{"ruleId":"344","severity":1,"message":"399","line":6,"column":5,"nodeType":"346","messageId":"347","endLine":6,"endColumn":19},{"ruleId":"348","severity":1,"message":"349","line":17,"column":37,"nodeType":"350","endLine":17,"endColumn":65},{"ruleId":"348","severity":1,"message":"349","line":9,"column":17,"nodeType":"350","endLine":9,"endColumn":45},{"ruleId":"344","severity":1,"message":"400","line":18,"column":12,"nodeType":"346","messageId":"347","endLine":18,"endColumn":20},{"ruleId":"352","severity":1,"message":"353","line":50,"column":8,"nodeType":"354","endLine":50,"endColumn":50,"suggestions":"401"},{"ruleId":"352","severity":1,"message":"402","line":65,"column":8,"nodeType":"354","endLine":65,"endColumn":25,"suggestions":"403"},{"ruleId":"352","severity":1,"message":"382","line":69,"column":8,"nodeType":"354","endLine":69,"endColumn":13,"suggestions":"404"},{"ruleId":"348","severity":1,"message":"349","line":77,"column":25,"nodeType":"350","endLine":77,"endColumn":48},{"ruleId":"352","severity":1,"message":"405","line":29,"column":8,"nodeType":"354","endLine":29,"endColumn":10,"suggestions":"406"},{"ruleId":"348","severity":1,"message":"349","line":32,"column":13,"nodeType":"350","endLine":32,"endColumn":51},{"ruleId":"344","severity":1,"message":"407","line":2,"column":10,"nodeType":"346","messageId":"347","endLine":2,"endColumn":14},{"ruleId":"352","severity":1,"message":"408","line":20,"column":8,"nodeType":"354","endLine":20,"endColumn":29,"suggestions":"409"},{"ruleId":"352","severity":1,"message":"410","line":24,"column":8,"nodeType":"354","endLine":24,"endColumn":30,"suggestions":"411"},{"ruleId":"344","severity":1,"message":"412","line":13,"column":31,"nodeType":"346","messageId":"347","endLine":13,"endColumn":36},{"ruleId":"344","severity":1,"message":"413","line":2,"column":8,"nodeType":"346","messageId":"347","endLine":2,"endColumn":14},{"ruleId":"344","severity":1,"message":"414","line":3,"column":8,"nodeType":"346","messageId":"347","endLine":3,"endColumn":15},{"ruleId":"344","severity":1,"message":"415","line":13,"column":25,"nodeType":"346","messageId":"347","endLine":13,"endColumn":29},{"ruleId":"348","severity":1,"message":"349","line":26,"column":29,"nodeType":"350","endLine":26,"endColumn":73},{"ruleId":"344","severity":1,"message":"416","line":1,"column":17,"nodeType":"346","messageId":"347","endLine":1,"endColumn":25},{"ruleId":"348","severity":1,"message":"349","line":73,"column":25,"nodeType":"350","endLine":73,"endColumn":103},{"ruleId":"344","severity":1,"message":"417","line":8,"column":12,"nodeType":"346","messageId":"347","endLine":8,"endColumn":17},{"ruleId":"344","severity":1,"message":"418","line":8,"column":19,"nodeType":"346","messageId":"347","endLine":8,"endColumn":27},{"ruleId":"344","severity":1,"message":"412","line":11,"column":31,"nodeType":"346","messageId":"347","endLine":11,"endColumn":36},{"ruleId":"344","severity":1,"message":"419","line":31,"column":11,"nodeType":"346","messageId":"347","endLine":31,"endColumn":15},{"ruleId":"348","severity":1,"message":"349","line":37,"column":17,"nodeType":"350","endLine":37,"endColumn":88},{"ruleId":"352","severity":1,"message":"420","line":18,"column":8,"nodeType":"354","endLine":18,"endColumn":10,"suggestions":"421"},{"ruleId":"348","severity":1,"message":"349","line":29,"column":71,"nodeType":"350","endLine":29,"endColumn":108},{"ruleId":"348","severity":1,"message":"349","line":30,"column":71,"nodeType":"350","endLine":30,"endColumn":108},{"ruleId":"348","severity":1,"message":"349","line":31,"column":71,"nodeType":"350","endLine":31,"endColumn":108},{"ruleId":"348","severity":1,"message":"349","line":32,"column":71,"nodeType":"350","endLine":32,"endColumn":108},{"ruleId":"352","severity":1,"message":"422","line":30,"column":8,"nodeType":"354","endLine":30,"endColumn":19,"suggestions":"423"},{"ruleId":"344","severity":1,"message":"424","line":46,"column":15,"nodeType":"346","messageId":"347","endLine":46,"endColumn":21},{"ruleId":"344","severity":1,"message":"425","line":10,"column":11,"nodeType":"346","messageId":"347","endLine":10,"endColumn":20},{"ruleId":"352","severity":1,"message":"353","line":20,"column":8,"nodeType":"354","endLine":20,"endColumn":22,"suggestions":"426"},{"ruleId":"348","severity":1,"message":"349","line":34,"column":58,"nodeType":"350","endLine":34,"endColumn":121},{"ruleId":"344","severity":1,"message":"398","line":1,"column":16,"nodeType":"346","messageId":"347","endLine":1,"endColumn":25},{"ruleId":"344","severity":1,"message":"427","line":7,"column":20,"nodeType":"346","messageId":"347","endLine":7,"endColumn":31},{"ruleId":"348","severity":1,"message":"349","line":18,"column":29,"nodeType":"350","endLine":18,"endColumn":53},{"ruleId":"352","severity":1,"message":"428","line":22,"column":7,"nodeType":"346","endLine":22,"endColumn":11},{"ruleId":"352","severity":1,"message":"429","line":22,"column":7,"nodeType":"346","endLine":22,"endColumn":11,"suggestions":"430"},{"ruleId":"352","severity":1,"message":"431","line":24,"column":8,"nodeType":"354","endLine":24,"endColumn":19,"suggestions":"432"},{"ruleId":"348","severity":1,"message":"349","line":39,"column":17,"nodeType":"350","endLine":39,"endColumn":80},{"ruleId":"344","severity":1,"message":"407","line":3,"column":10,"nodeType":"346","messageId":"347","endLine":3,"endColumn":14},{"ruleId":"344","severity":1,"message":"433","line":4,"column":10,"nodeType":"346","messageId":"347","endLine":4,"endColumn":21},{"ruleId":"352","severity":1,"message":"434","line":60,"column":7,"nodeType":"354","endLine":60,"endColumn":14,"suggestions":"435"},{"ruleId":"348","severity":1,"message":"349","line":83,"column":13,"nodeType":"350","endLine":83,"endColumn":91},{"ruleId":"348","severity":1,"message":"349","line":88,"column":19,"nodeType":"350","endLine":88,"endColumn":65},{"ruleId":"348","severity":1,"message":"349","line":91,"column":13,"nodeType":"350","endLine":91,"endColumn":98},{"ruleId":"344","severity":1,"message":"436","line":10,"column":19,"nodeType":"346","messageId":"347","endLine":10,"endColumn":27},{"ruleId":"352","severity":1,"message":"437","line":48,"column":8,"nodeType":"354","endLine":48,"endColumn":10,"suggestions":"438"},"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Avatar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["439"],["440"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.",["441"],"'SOCKET_RECEIVE' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'UserData._id' and 'dispatch'. Either include them or remove the dependency array.",["442"],"'useCallback' is defined but never used.","'useSelector' is defined but never used.","'alreadyFriend' is defined but never used.","React Hook useEffect has missing dependencies: 'ClickEvent', 'checktUpdate', and 'setchecktUpdate'. Either include them or remove the dependency array. If 'setchecktUpdate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["443"],"React Hook useEffect has missing dependencies: 'UserData.userId' and 'dispatch'. Either include them or remove the dependency array.",["444"],["445"],"'FilePath' is assigned a value but never used.","'setFilePath' is assigned a value but never used.","'roomName' is assigned a value but never used.","'handleRoomNameChange' is assigned a value but never used.",["446"],"'axios' is defined but never used.","React Hook useEffect has missing dependencies: 'data' and 'dispatch'. Either include them or remove the dependency array.",["447"],"'React' is defined but never used.","React Hook useEffect has missing dependencies: 'checktUpdate' and 'setchecktUpdate'. Either include them or remove the dependency array. If 'setchecktUpdate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["448"],"'setId' is assigned a value but never used.","'Write' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'UserData._id', 'checktUpdate', 'roomId', and 'setchecktUpdate'. Either include them or remove the dependency array. If 'setchecktUpdate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["449"],"React Hook useEffect has missing dependencies: 'checktUpdate', 'roomId', and 'setchecktUpdate'. Either include them or remove the dependency array. If 'setchecktUpdate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["450"],"React Hook useEffect has missing dependencies: 'checkMembers' and 'dispatch'. Either include them or remove the dependency array.",["451"],["452"],["453"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'SearchOutlined' is defined but never used.","'MatchUrl' is assigned a value but never used.",["454"],"React Hook useEffect has missing dependencies: 'UserData._id', 'chat', and 'dispatch'. Either include them or remove the dependency array.",["455"],["456"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["457"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'selection'. Either include it or remove the dependency array.",["458"],"React Hook useEffect has a missing dependency: 'process'. Either include it or remove the dependency array.",["459"],"'error' is assigned a value but never used.","'client' is defined but never used.","'cheerio' is defined but never used.","'data' is assigned a value but never used.","'useState' is defined but never used.","'state' is assigned a value but never used.","'setstate' is assigned a value but never used.","'open' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'UserData'. Either include it or remove the dependency array.",["460"],"React Hook useEffect has missing dependencies: 'UserData', 'dispatch', and 'process'. Either include them or remove the dependency array.",["461"],"'Writer' is assigned a value but never used.","'selection' is assigned a value but never used.",["462"],"'description' is assigned a value but never used.","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'promiseCreator'. Either include it or remove the dependency array. If 'promiseCreator' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["463"],"React Hook useEffect has missing dependencies: 'UserData', 'dispatch', and 'post'. Either include them or remove the dependency array.",["464"],"'useDispatch' is defined but never used.","React Hook useEffect has a missing dependency: 'UserData.userId'. Either include it or remove the dependency array.",["465"],"'setState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'customerId' and 'state'. Either include them or remove the dependency array.",["466"],{"desc":"467","fix":"468"},{"desc":"469","fix":"470"},{"desc":"471","fix":"472"},{"desc":"473","fix":"474"},{"desc":"475","fix":"476"},{"desc":"477","fix":"478"},{"desc":"479","fix":"480"},{"desc":"481","fix":"482"},{"desc":"483","fix":"484"},{"desc":"485","fix":"486"},{"desc":"487","fix":"488"},{"desc":"489","fix":"490"},{"desc":"491","fix":"492"},{"desc":"493","fix":"494"},{"desc":"495","fix":"496"},{"desc":"497","fix":"498"},{"desc":"499","fix":"500"},{"desc":"501","fix":"502"},{"desc":"503","fix":"504"},{"desc":"505","fix":"506"},{"desc":"507","fix":"508"},{"desc":"509","fix":"510"},{"desc":"511","fix":"512"},{"desc":"513","fix":"514"},{"desc":"515","fix":"516"},{"desc":"517","fix":"518"},{"desc":"519","fix":"520"},{"desc":"521","fix":"522"},"Update the dependencies array to be: [dispatch]",{"range":"523","text":"524"},"Update the dependencies array to be: [Update, dispatch]",{"range":"525","text":"526"},"Update the dependencies array to be: [dispatch, props.history]",{"range":"527","text":"528"},"Update the dependencies array to be: [checktUpdate, data, Messages, UserData._id, dispatch]",{"range":"529","text":"530"},"Update the dependencies array to be: [ClickEvent, UserData, checktUpdate, setchecktUpdate]",{"range":"531","text":"532"},"Update the dependencies array to be: [ClickEvent, UserData.userId, dispatch]",{"range":"533","text":"534"},"Update the dependencies array to be: [InputText2, dispatch]",{"range":"535","text":"536"},"Update the dependencies array to be: [UserData, checktUpdate, dispatch]",{"range":"537","text":"538"},"Update the dependencies array to be: [data, dispatch]",{"range":"539","text":"540"},"Update the dependencies array to be: [checktUpdate, roomId, setchecktUpdate]",{"range":"541","text":"542"},"Update the dependencies array to be: [UserData._id, checktUpdate, roomId, setchecktUpdate]",{"range":"543","text":"544"},"Update the dependencies array to be: [UserData, checktUpdate, roomId, setchecktUpdate]",{"range":"545","text":"546"},"Update the dependencies array to be: [checkMembers, dispatch, match]",{"range":"547","text":"548"},"Update the dependencies array to be: [Body, dispatch]",{"range":"549","text":"550"},"Update the dependencies array to be: [checktUpdate, newMessage, setchecktUpdate]",{"range":"551","text":"552"},"Update the dependencies array to be: [UserData, chat, Messages, checktUpdate, dispatch]",{"range":"553","text":"554"},"Update the dependencies array to be: [Messages, Fri, chat, UserData._id, dispatch]",{"range":"555","text":"556"},"Update the dependencies array to be: [Num, checktUpdate, setchecktUpdate]",{"range":"557","text":"558"},"Update the dependencies array to be: [data]",{"range":"559","text":"560"},"Update the dependencies array to be: [match.params.select, selection]",{"range":"561","text":"562"},"Update the dependencies array to be: [match.params.process, process]",{"range":"563","text":"564"},"Update the dependencies array to be: [UserData]",{"range":"565","text":"566"},"Update the dependencies array to be: [UserData, dispatch, process, selection]",{"range":"567","text":"568"},"Update the dependencies array to be: [dispatch, match.params]",{"range":"569","text":"570"},"Update the dependencies array to be: [promiseCreator]",{"range":"571","text":"572"},"Update the dependencies array to be: [UserData, dispatch, post, selection]",{"range":"573","text":"574"},"Update the dependencies array to be: [UserData.userId, state]",{"range":"575","text":"576"},"Update the dependencies array to be: [customerId, state]",{"range":"577","text":"578"},[965,967],"[dispatch]",[1116,1124],"[Update, dispatch]",[1182,1184],"[dispatch, props.history]",[1689,1721],"[checktUpdate, data, Messages, UserData._id, dispatch]",[2102,2112],"[ClickEvent, UserData, checktUpdate, setchecktUpdate]",[2343,2355],"[ClickEvent, UserData.userId, dispatch]",[2710,2722],"[InputText2, dispatch]",[862,886],"[UserData, checktUpdate, dispatch]",[709,711],"[data, dispatch]",[1034,1042],"[checktUpdate, roomId, setchecktUpdate]",[1203,1205],"[UserData._id, checktUpdate, roomId, setchecktUpdate]",[1437,1447],"[UserData, checktUpdate, roomId, setchecktUpdate]",[2095,2102],"[checkMembers, dispatch, match]",[2264,2270],"[Body, dispatch]",[2691,2703],"[checktUpdate, newMessage, setchecktUpdate]",[1839,1881],"[UserData, chat, Messages, checktUpdate, dispatch]",[2271,2288],"[Messages, Fri, chat, UserData._id, dispatch]",[2363,2368],"[Num, checktUpdate, setchecktUpdate]",[820,822],"[data]",[816,837],"[match.params.select, selection]",[953,975],"[match.params.process, process]",[573,575],"[UserData]",[936,947],"[UserData, dispatch, process, selection]",[679,693],"[dispatch, match.params]",[664,668],"[promiseCreator]",[788,799],"[UserData, dispatch, post, selection]",[2119,2126],"[UserData.userId, state]",[1754,1756],"[customerId, state]"]
=======
[{"D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\index.js":"1","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\reportWebVitals.js":"2","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\App.js":"3","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\api\\reducers\\index.js":"4","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LoginPage.js":"5","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\api\\auth\\auth.js":"6","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\RegisterPage.js":"7","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\MainPage\\Main.js":"8","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\api\\reducers\\friend_reducer.js":"9","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\api\\reducers\\user_reducer.js":"10","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\api\\reducers\\chat_reducer.js":"11","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\api\\reducers\\socket_reducer.js":"12","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\api\\actions\\user_action.js":"13","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\api\\actions\\main_action.js":"14","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\LeftPage.js":"15","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\FriendList\\FriendList.js":"16","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\api\\actions\\socket_action.js":"17","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Internet\\Internet.js":"18","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\ViewFriend\\ViewFriend.js":"19","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Bucket\\Bucket.js":"20","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\SocketList\\ChatingRoom.js":"21","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\SocketList\\ChatingList.js":"22","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Options\\Options.js":"23","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\UpdateUser\\UpdateUser.js":"24","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\SocketList\\useChat.js":"25","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\api\\actions\\friend_action.js":"26","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\PlusFriend.js":"27","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\FriendList\\ShowFriend\\ShowFriend.js":"28","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\SearchFriend.js":"29","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\FriendList\\Title\\LeftTitle.js":"30","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\FriendList\\MyProfile\\MyProfile.js":"31","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\api\\actions\\chat_action.js":"32","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Bucket\\BucketItem.js":"33","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Internet\\TV\\TV.js":"34","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Options\\option\\Weather.js":"35","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\SocketList\\AddBaner.js":"36","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\SocketList\\ChatTitle.js":"37","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\SocketList\\ChatItem.js":"38","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\usePromise.js":"39","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Internet\\Board\\Board.js":"40","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Internet\\News\\News.js":"41","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Internet\\IntTitle\\IntTitle.js":"42","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\Shop.js":"43","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\PayResult.js":"44","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Internet\\News\\NewsItem.js":"45","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\ShopItem.js":"46","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardDetail.js":"47","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardUpdate.js":"48","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardList.js":"49","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardCreate.js":"50","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\api\\actions\\post_action.js":"51"},{"size":1062,"mtime":1620189582750,"results":"52","hashOfConfig":"53"},{"size":375,"mtime":1620189582750,"results":"54","hashOfConfig":"53"},{"size":858,"mtime":1620189582708,"results":"55","hashOfConfig":"53"},{"size":313,"mtime":1620189582715,"results":"56","hashOfConfig":"53"},{"size":3924,"mtime":1620189582747,"results":"57","hashOfConfig":"53"},{"size":1439,"mtime":1620189582713,"results":"58","hashOfConfig":"53"},{"size":11771,"mtime":1620189582748,"results":"59","hashOfConfig":"53"},{"size":1676,"mtime":1620271855869,"results":"60","hashOfConfig":"53"},{"size":475,"mtime":1620189582714,"results":"61","hashOfConfig":"53"},{"size":1108,"mtime":1620189582716,"results":"62","hashOfConfig":"53"},{"size":527,"mtime":1620189582714,"results":"63","hashOfConfig":"53"},{"size":1112,"mtime":1620189582716,"results":"64","hashOfConfig":"53"},{"size":1900,"mtime":1620189582713,"results":"65","hashOfConfig":"53"},{"size":266,"mtime":1620189582711,"results":"66","hashOfConfig":"53"},{"size":4043,"mtime":1620271855848,"results":"67","hashOfConfig":"53"},{"size":4068,"mtime":1620189582719,"results":"68","hashOfConfig":"53"},{"size":1858,"mtime":1620189582712,"results":"69","hashOfConfig":"53"},{"size":712,"mtime":1620189582731,"results":"70","hashOfConfig":"53"},{"size":1219,"mtime":1620189582746,"results":"71","hashOfConfig":"53"},{"size":610,"mtime":1620209036471,"results":"72","hashOfConfig":"53"},{"size":7608,"mtime":1620279612939,"results":"73","hashOfConfig":"53"},{"size":1519,"mtime":1620271855859,"results":"74","hashOfConfig":"53"},{"size":3390,"mtime":1620271856506,"results":"75","hashOfConfig":"53"},{"size":2877,"mtime":1620271855866,"results":"76","hashOfConfig":"53"},{"size":1694,"mtime":1620271855864,"results":"77","hashOfConfig":"53"},{"size":837,"mtime":1620189582710,"results":"78","hashOfConfig":"53"},{"size":606,"mtime":1620189582721,"results":"79","hashOfConfig":"53"},{"size":1303,"mtime":1620189582725,"results":"80","hashOfConfig":"53"},{"size":1965,"mtime":1620189582722,"results":"81","hashOfConfig":"53"},{"size":1591,"mtime":1620189582726,"results":"82","hashOfConfig":"53"},{"size":566,"mtime":1620271855843,"results":"83","hashOfConfig":"53"},{"size":983,"mtime":1620189582710,"results":"84","hashOfConfig":"53"},{"size":1969,"mtime":1620264975307,"results":"85","hashOfConfig":"53"},{"size":1188,"mtime":1620271918337,"results":"86","hashOfConfig":"53"},{"size":1653,"mtime":1620189582738,"results":"87","hashOfConfig":"53"},{"size":995,"mtime":1620189582739,"results":"88","hashOfConfig":"53"},{"size":337,"mtime":1620189582742,"results":"89","hashOfConfig":"53"},{"size":3669,"mtime":1620271855857,"results":"90","hashOfConfig":"53"},{"size":742,"mtime":1620189582752,"results":"91","hashOfConfig":"53"},{"size":1423,"mtime":1620189582727,"results":"92","hashOfConfig":"53"},{"size":1207,"mtime":1620189582732,"results":"93","hashOfConfig":"53"},{"size":865,"mtime":1620189582731,"results":"94","hashOfConfig":"53"},{"size":3623,"mtime":1620208147386,"results":"95","hashOfConfig":"53"},{"size":2279,"mtime":1620207508871,"results":"96","hashOfConfig":"53"},{"size":1238,"mtime":1620189582732,"results":"97","hashOfConfig":"53"},{"size":3679,"mtime":1620208196328,"results":"98","hashOfConfig":"53"},{"size":2371,"mtime":1620272316374,"results":"99","hashOfConfig":"53"},{"size":2517,"mtime":1620189582730,"results":"100","hashOfConfig":"53"},{"size":1996,"mtime":1620189582729,"results":"101","hashOfConfig":"53"},{"size":2127,"mtime":1620189582728,"results":"102","hashOfConfig":"53"},{"size":1462,"mtime":1620189582711,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"1rwwu35",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"106"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"106"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"106"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"106"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"106"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"106"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"106"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"106"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"106"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"106"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"106"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"106"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"106"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"106"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"106"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"106"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"106"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"106"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"106"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"106"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"106"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"106"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"106"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"106"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"106"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"106"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"106"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"106"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"106"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"106"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"106"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"106"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"106"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"106"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"106"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\index.js",[],["244","245"],"D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\reportWebVitals.js",[],"D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\App.js",[],"D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\api\\reducers\\index.js",[],"D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LoginPage.js",["246","247","248"],"import React, {useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport { loginUser } from '../api/actions/user_action';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { Grid, Paper, Avatar, TextField, Button, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    customTextField: {\r\n      \"& input::placeholder\": {\r\n        color : '#fff',\r\n        fontWeight : 'bolder'\r\n      }\r\n    }\r\n})\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [UserId, setUserId] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n\r\n    const onUserIdHandler = (e) => {\r\n        setUserId(e.target.value);\r\n    }\r\n    const onPasswordHandler = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        let body = {\r\n            userId : UserId,\r\n            password : Password,\r\n        }\r\n\r\n        dispatch(loginUser(body))\r\n        .then(response => {\r\n            if(response.payload.loginSuccess){\r\n                props.history.push('/main/FriendList');\r\n            }else{\r\n                alert('Error');\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const paperStyle = {\r\n        padding : 20,\r\n        height : '568px',\r\n        width : 280,\r\n        margin : '0 auto',\r\n        textAlign : 'center',\r\n        background : '#f6bd63',\r\n        position: 'absolute',\r\n        top:'50%',\r\n        left:'50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    }\r\n    const avatarStyle = {\r\n        width : '230px',\r\n        height : '90px',\r\n        margin: '10px 0 30px',\r\n        background : '#f6bd63',\r\n    }\r\n    const btnstyle = {\r\n        margin : '8px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#845460'\r\n    }\r\n    const imgstyle ={\r\n        width : '100%',\r\n        height : '100%',\r\n    }\r\n    const logostyle ={\r\n        width: '200px',\r\n        marginTop: '50px',\r\n    }\r\n    const inputstyle ={\r\n        width : '90%',\r\n        margin : '0 auto',\r\n        height : '30px',\r\n        marginBottom : '20px',\r\n        background : '#855460',\r\n        color : '#fff'\r\n    }\r\n    const linkstyle ={\r\n        color : '#fff',\r\n        fontWeight : 'bolder',\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid>\r\n            <Paper elevation={10} style={paperStyle} classes={{root:classes.customTextField}}>\r\n                <Grid align=\"center\">\r\n                    <img src=\"/text_transparent.png\" style={logostyle}></img>\r\n                    <Avatar style={avatarStyle} ><img src=\"/gyeran_height_cut.png\" style={imgstyle} /></Avatar>\r\n\r\n                </Grid>\r\n                <form onSubmit={onSubmitHandler}>\r\n                    <input style={inputstyle} type=\"text\" label=\"UserId\" placeholder=\"Enter UserId\" value={UserId} onChange={onUserIdHandler} required/>\r\n                    <input style={inputstyle} type=\"password\" label=\"Password\" placeholder=\"Enter Password\" value={Password} onChange={onPasswordHandler} required/>\r\n                    {/* <FormControlLabel \r\n                        control={\r\n                            <Checkbox\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Remember Me\"\r\n                    /> */}\r\n                    <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>Sign in</Button>\r\n                </form>\r\n                <Typography>\r\n                    <Link to=\"/register\" style={linkstyle}>\r\n                        Sign up\r\n                    </Link>\r\n                </Typography>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\api\\auth\\auth.js",["249","250"],"import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { auth } from '../actions/user_action';\r\n\r\nexport default function(SpecificComponent, option, adminRoute = null){\r\n\r\n    // option\r\n    // null => 아무나 출입이 가능한 페이지\r\n    // true => 로그인한 유저만 출입이 가능한 페이지\r\n    // false => 로그인한 유저는 출입 불가능한 페이지\r\n\r\n    // adminRoute는 true가 되면 어드민 유저만 가능하다.\r\n    \r\n    function AuthenticationCheck(props){\r\n        \r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(()=>{\r\n            \r\n            dispatch(auth()).then(response => {\r\n\r\n                // 로그인 하지 않은 상태\r\n                if(!response.payload.isAuth){\r\n                    if(option){\r\n                        props.history.push('/');\r\n                    }\r\n                }else{\r\n                    // 로그인 한 상태\r\n                    if(adminRoute && !response.payload.isAdmin){\r\n                        props.history.push('/main/FriendList')\r\n                    }else{\r\n                        if(option === false){\r\n                            props.history.push('/main/FriendList');\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }, [])\r\n        return (\r\n            <SpecificComponent />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\RegisterPage.js",["251"],"import React, { useState, useEffect } from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport { registerUser, checkId, checkNick, checkPhone } from '../api/actions/user_action';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Grid, Paper, Avatar, FormControlLabel, Checkbox, TextField, Button, Typography } from '@material-ui/core';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [UserId, setUserId] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n    const [ConfirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [NickName, setNickName] = useState(\"\");\r\n    const [Name, setName] = useState(\"\");\r\n    const [Phone, setPhone] = useState(\"\");\r\n    const [checkPassword, setcheckPassword] = useState(true);\r\n    const [NoticeId, setNoticeId] = useState(\"\");\r\n    const [NoticeNick, setNoticeNick] = useState(\"\");\r\n    const [NoticePhone, setNoticePhone] = useState(\"\");\r\n    // const [Checking, setChecking] = useState(0);\r\n    const [isCheckedId, setisCheckedId] = useState(false);\r\n    const [isCheckedNick, setisCheckedNick] = useState(false);\r\n    const [isCheckedPhone, setisCheckedPhone] = useState(false);\r\n    const [isCheckedPassword, setisCheckedPassword] = useState(false);\r\n\r\n\r\n    const onUserIdHandler = (e) => {\r\n        setUserId(e.target.value);\r\n    }\r\n    const onPasswordHandler = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n    const onPasswordHandler2 = (e) => {\r\n        setConfirmPassword(e.target.value);\r\n    }\r\n    const onNickNameHandler = (e) => {\r\n        setNickName(e.target.value);\r\n    }\r\n    const onNameHandler = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n    const onPhoneHandler = (e) => {\r\n        const regex = /^[0-9\\b -]{0,13}$/;\r\n        if (regex.test(e.target.value)){\r\n            setPhone(e.target.value);\r\n        }\r\n    }\r\n    const onCheckIdHandler = (e) => {\r\n\r\n        e.preventDefault();\r\n        let body = {\r\n            userId : UserId,\r\n        }\r\n\r\n        dispatch(checkId(body))\r\n        .then(response => {\r\n            setNoticeId(response.payload.message);\r\n            if(response.payload.checkId){\r\n                setisCheckedId(true)\r\n            } else {\r\n                setisCheckedId(false)\r\n            }\r\n        })\r\n    }\r\n    const onCheckNick = (e) => {\r\n        \r\n        e.preventDefault();\r\n        let body = {\r\n            userNickName : NickName,\r\n        }\r\n\r\n        dispatch(checkNick(body))\r\n        .then(response => {\r\n            setNoticeNick(response.payload.message);\r\n            if(response.payload.checkNick){\r\n                setisCheckedNick(true)\r\n            } else {\r\n                setisCheckedNick(false)\r\n            }\r\n        })\r\n    }\r\n    const onCheckPhone = (e) => {\r\n        \r\n        e.preventDefault();\r\n        let body = {\r\n            userPhone : Phone,\r\n        }\r\n\r\n        dispatch(checkPhone(body))\r\n        .then(response => {\r\n            setNoticePhone(response.payload.message);\r\n            if(response.payload.checkPhone){\r\n                setisCheckedPhone(true)\r\n            } else {\r\n                setisCheckedPhone(false)\r\n            }\r\n        })\r\n    }\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        let body = {\r\n            userId : UserId,\r\n            password : Password,\r\n            userNickName : NickName,\r\n            userName : Name,\r\n            userPhone : Phone,\r\n        }\r\n        dispatch(registerUser(body))\r\n        .then(response => {\r\n            if(response.payload.success){\r\n                props.history.push(\"/\");\r\n            }else{\r\n                alert(\"Failed to sign up\");\r\n            }\r\n        })\r\n    }\r\n\r\n    const paperStyle ={\r\n        padding : 20,\r\n        height : '650px',\r\n        width : 280,\r\n        margin : '20px auto',\r\n        // textAlign : 'center',\r\n        position: 'absolute',\r\n        top:'50%',\r\n        left:'50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n    const hrstyle ={\r\n        backgroundColor : 'gray',\r\n        height : '1px'\r\n    }\r\n    const divstyle1 ={\r\n        paddingLeft: '12.5px',\r\n        marginTop: '20px',\r\n    }\r\n    const divstyle2 ={\r\n        marginTop: '10px',\r\n        fontSize: '12px',\r\n    }\r\n    const textStyle1 ={\r\n        width : 175,\r\n        marginBottom : '10px',\r\n    }\r\n    const textStyle2 ={\r\n        width : 250,\r\n        marginBottom : '10px',\r\n    }\r\n    const btnstyle ={\r\n        margin : '18px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#845460'\r\n    }\r\n    const btnstyle2 ={\r\n        margin : '8px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#f6bd63',\r\n        width : '80px',\r\n        height : '40px',\r\n        borderRadius : '15px 15px',\r\n        border : 'none',\r\n        cursor : 'pointer',\r\n    }\r\n    const disablestyle ={\r\n        margin : '18px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : 'rgb(189, 189, 189)',\r\n    }\r\n    const pstyle ={\r\n        margin : '0 0',\r\n        fontWeight : 'bolder',\r\n        fontSize : '10px',\r\n    }\r\n    const linkstyle ={\r\n        color : 'inherit',\r\n    }\r\n    const spanstyle ={\r\n        fontSize : '25px',\r\n        fontWeight : 'bolder',\r\n        marginLeft : '70px',\r\n    }\r\n\r\n    useEffect(()=>{\r\n        // if(Password !== ConfirmPassword){\r\n        //     setcheckPassword(false);\r\n        // }else{\r\n        //     setcheckPassword(true);\r\n        // }\r\n        if(Password.length === 0 && ConfirmPassword.length === 0){\r\n            setcheckPassword(true);\r\n            setisCheckedPassword(false);\r\n        }else if(Password.length < 5 && ConfirmPassword.length < 5){\r\n            setcheckPassword(false);\r\n            setisCheckedPassword(false);\r\n        }else if(Password !== ConfirmPassword){\r\n            setcheckPassword(false);\r\n            setisCheckedPassword(false);\r\n        }else{\r\n            setcheckPassword(true);\r\n            setisCheckedPassword(true);\r\n        }\r\n    },[Password, ConfirmPassword])\r\n\r\n    useEffect(()=>{\r\n        if(Phone.length === 11) {\r\n            setPhone(Phone.replace(/-/g,'').replace(/(\\d{3})(\\d{4})(\\d{4})/, '$1-$2-$3'));\r\n        }\r\n    }, [Phone]);\r\n\r\n    return (\r\n        <Grid>\r\n            <Paper elevation={10} style={paperStyle} >\r\n                <Grid align=\"left\">\r\n                    <Typography>\r\n                        <Link to=\"/\" style={linkstyle}>\r\n                            <ArrowBackIosIcon />\r\n                        </Link>\r\n                        <span style={spanstyle}>회원가입</span>\r\n                    </Typography>\r\n                </Grid>\r\n                <hr style={hrstyle}/>\r\n                <form onSubmit={onSubmitHandler}>\r\n                    <div style={divstyle1}>\r\n                        <TextField style={textStyle1} id=\"standard-basic\" label=\"아이디\" type=\"text\" value={UserId} onChange={onUserIdHandler} />\r\n                        <button type=\"submit\" style={btnstyle2} onClick={onCheckIdHandler}>중복확인</button>\r\n                        {NoticeId.length !== 0 ? <p style={pstyle}>{NoticeId}</p> : null}\r\n                        {checkPassword === true ? <TextField style={textStyle2} id=\"standard-basic\" label=\"비밀번호\" type=\"password\" value={Password} onChange={onPasswordHandler} /> : <TextField error id=\"standard-error-helper-text\" label=\"비밀번호\" type=\"password\" value={Password} onChange={onPasswordHandler} helperText=\"Incorrect entry.\" />}\r\n                        {checkPassword === true ? <TextField style={textStyle2} id=\"standard-basic\" label=\"비밀번호확인\" type=\"password\" value={ConfirmPassword} onChange={onPasswordHandler2} /> : <TextField error id=\"standard-error-helper-text\" label=\"비밀번호확인\" type=\"password\" value={ConfirmPassword} onChange={onPasswordHandler2} helperText=\"최소 5자리 이상 조합\"/>}\r\n                        <TextField style={textStyle1} id=\"standard-basic\" label=\"닉네임\" type=\"text\" value={NickName} onChange={onNickNameHandler} />\r\n                        <button type=\"submit\" style={btnstyle2} onClick={onCheckNick}>중복확인</button>\r\n                        {NoticeNick.length !== 0 ? <p style={pstyle}>{NoticeNick}</p> : null}\r\n                        <TextField style={textStyle2} id=\"standard-basic\" label=\"이름\" type=\"text\" value={Name} onChange={onNameHandler} />\r\n                        <TextField style={textStyle1} id=\"standard-basic\" label=\"휴대폰번호\" type=\"text\" value={Phone} onChange={onPhoneHandler} />\r\n                        <button type=\"submit\" style={btnstyle2} onClick={onCheckPhone}>중복확인</button>\r\n                        {NoticePhone.length !== 0 ? <p style={pstyle}>{NoticePhone}</p> : null}\r\n\r\n                        <div style={divstyle2}>\r\n                            {/* <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                // label=\"모두 동의합니다\"\r\n                            />\r\n                            모두 동의합니다.<br/> */}\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                        required\r\n                                    />\r\n                                }\r\n                                label=\"이용약관 동의\"\r\n                            />\r\n                            {/* 이용약관 동의<br/> */}\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                        required\r\n                                    />\r\n                                }\r\n                                label=\"개인정보 취급방침 동의\"\r\n                            />\r\n                            {/* 개인정보 취급방침 동의<br/> */}\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                        required\r\n                                    />\r\n                                }\r\n                                label=\"마케팅 정보 수신 동의\"\r\n                            />\r\n                            {/* 마케팅 정보 수신 동의<br/> */}\r\n                        </div>\r\n                    </div>\r\n                    {/* {Checking >= 4 ? <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>Sign up</Button> : <Button disabled style={disablestyle} variant=\"contained\" fullWidth>Sign up</Button>} */}\r\n                    {isCheckedId && isCheckedNick && isCheckedPhone && isCheckedPassword ? <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>Sign up</Button> : <Button disabled style={disablestyle} variant=\"contained\" fullWidth>Sign up</Button>}\r\n                    \r\n                </form>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\MainPage\\Main.js",["252","253"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './Main.scss';\r\nimport LeftPage from '../LeftPage/LeftPage';\r\nimport { getUser } from '../../api/actions/main_action';\r\n\r\nconst Main = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [UserData, setUserData] = useState(\"\");\r\n    // const [ListFriend, setListFriend] = useState(\"\");\r\n    const [Update, setUpdate] = useState(false);\r\n\r\n    // const onClickHandler = () =>{\r\n    //     axios.get('/api/users/logout')\r\n    //     .then(response => {\r\n    //         if(response.data.success){\r\n    //             props.history.push(\"/\");\r\n    //         }else{\r\n    //             alert('로그아웃 하는데 실패 했습니다.');\r\n    //         }\r\n    //     })\r\n    // }\r\n    \r\n    useEffect(()=>{\r\n        dispatch(getUser())\r\n        .then(response => {\r\n            setUserData(response.payload);\r\n        })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        dispatch(getUser())\r\n        .then(response => {\r\n            setUserData(response.payload);\r\n        })\r\n    }, [Update])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"box\">\r\n                <LeftPage props={props} UserData={UserData} Update={Update} setUpdate={setUpdate}/>\r\n                {/* <div className=\"right_side\">\r\n                    dddd\r\n                </div> */}\r\n                {/* <button style={{marginLeft:'10px'}} onClick={onClickHandler}>\r\n                    로그아웃\r\n                </button> */}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(Main);","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\api\\reducers\\friend_reducer.js",["254"],"const SEARCH_USER = \"search_user\";\r\nconst ADD_USER = \"add_user\";\r\nconst SHOW_FRIEND = 'show_friend';\r\n\r\nexport default function(state={}, action){\r\n    switch (action.type) {\r\n        case SEARCH_USER:\r\n            return {...state, friend : action.payload}\r\n        case ADD_USER:\r\n            return {...state, plus : action.payload}\r\n        case SHOW_FRIEND:\r\n            return {...state, Myfriend : action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\api\\reducers\\user_reducer.js",["255"],"const LOGIN_USER = \"login_user\";\r\nconst REGISTER_USER = \"register_user\";\r\nconst AUTH_USER = \"auth_user\";\r\nconst CHECK_ID = 'checkid_user';\r\nconst CHECK_NICK = 'checknick_user';\r\nconst GET_USER = \"get_user\";\r\nconst CHECK_PHONE = 'checkphone_user';\r\nconst UPDATE_USER = 'update_user';\r\n\r\nexport default function(state={}, action){\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return { ...state, loginSuccess : action.payload };\r\n        case REGISTER_USER:\r\n            return {...state, register : action.payload };\r\n        case AUTH_USER:\r\n            return {...state, userData : action.payload };\r\n        case CHECK_ID:\r\n            return {...state, chekckId : action.payload};\r\n        case CHECK_NICK:\r\n            return {...state, checkNick : action.payload};    \r\n        case GET_USER:\r\n            return {...state, userData : action.payload};\r\n        case CHECK_PHONE:\r\n            return {...state, checkPhone : action.payload};\r\n        case UPDATE_USER:\r\n            return {...state, updateUser : action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\api\\reducers\\chat_reducer.js",["256"],"const CHAT_SERVER = 'chat_server';\r\nconst AFTER_POST_MESSAGE = 'after_post_message';\r\nconst CHECK_CHAT = 'check_chat';\r\n\r\nexport default function(state={},action){\r\n    switch(action.type){\r\n        case CHAT_SERVER:\r\n            return { ...state, chats: action.payload }\r\n        case AFTER_POST_MESSAGE:\r\n                return { ...state, chats: state.chats.concat(action.payload) }\r\n        case CHECK_CHAT:\r\n                return { ...state, check: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\api\\reducers\\socket_reducer.js",["257","258"],"const SOCKET_SEND = 'socket_send';\r\nconst SOCKET_RECEIVE = 'socket_receive';\r\nconst SOCKET_LIST = 'socket_list';\r\nconst SOCKET_CHATINFORM = 'socket_chatinform';\r\nconst SOCKET_FRIEND_PROFILE = 'socket_profile';\r\nconst SOCKET_COUNT = 'socket_count';\r\nconst SOCKET_ALL = 'socket_all';\r\n\r\nexport default function(state={}, action){\r\n    switch (action.type) {\r\n        case SOCKET_SEND:\r\n            return {...state, chats: action.payload }\r\n        // case SOCKET_RECEIVE:\r\n        //     let newChatList = state.chatList.slice();\r\n        //     newChatList.push(action.data);\r\n        //     return { ...state, chatList: newChatList };\r\n        case SOCKET_LIST:\r\n            return {...state, list: action.payload }\r\n        case SOCKET_CHATINFORM:\r\n            return {...state, inform: action.payload}\r\n        case SOCKET_FRIEND_PROFILE:\r\n            return {...state, indid: action.payload}\r\n        case SOCKET_COUNT:\r\n            return {...state, count : action.payload}\r\n        case SOCKET_ALL:\r\n            return {...state, ass : action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\api\\actions\\user_action.js",[],"D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\api\\actions\\main_action.js",[],"D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\LeftPage.js",["259"],"import React, { useState, useEffect } from 'react';\r\nimport { withRouter, NavLink } from 'react-router-dom';\r\nimport '../MainPage/Main.scss';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport QuestionAnswerRoundedIcon from '@material-ui/icons/QuestionAnswerRounded';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport FriendList from './FriendList/FriendList.js';\r\nimport UpdateUser from './UpdateUser/UpdateUser';\r\n// import UpdateUser from './UpdateUser/UpdateUser_tmp';\r\n// import UpdateUser from './UpdateUser/UpdateTest';\r\nimport Internet from './Internet/Internet';\r\nimport ChatingList from './SocketList/ChatingList';\r\nimport ChatingRoom from './SocketList/ChatingRoom';\r\nimport ViewFriend from './ViewFriend/ViewFriend';\r\nimport Options from './Options/Options';\r\nimport { useDispatch } from 'react-redux';\r\nimport {allChat} from '../../api/actions/socket_action';\r\nimport useChat from '../LeftPage/SocketList/useChat';\r\nimport Bucket from './Bucket/Bucket';\r\n\r\nconst LeftPage = ({match, UserData, Update, setUpdate}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n// 잠시 ListFriend props에 빼고 밑에 FriendList 페이지에 상속 지움\r\n    const data = match.params.category || 'FriendList';\r\n\r\n    const [checktUpdate, setchecktUpdate] = useState(false);\r\n    const [MesCount, setMesCount] = useState(0)\r\n    const { Messages } = useChat();\r\n    \r\n    useEffect(() => {\r\n        let body = {\r\n            userId : UserData._id,\r\n        }\r\n        dispatch(allChat(body))\r\n        .then(response=>{\r\n            setMesCount(response.payload.number);\r\n            // console.log(response.data);\r\n        })\r\n    }, [ checktUpdate, data, Messages ])\r\n\r\n    return (\r\n        <div className=\"left_side\">\r\n            <div className=\"left_category\">\r\n                <NavLink className=\"default_active\" activeClassName=\"active\" to=\"/main/FriendList\">\r\n                    <PersonIcon style={{ fontSize: 30 }} />\r\n                </NavLink>\r\n                {/* <NavLink className=\"default_active\" activeClassName=\"active\" to=\"/main/ChatList\">\r\n                    <QuestionAnswerRoundedIcon style={{ fontSize: 30 }} />\r\n                </NavLink> */}\r\n                <NavLink className=\"default_active\" activeClassName=\"active\" to=\"/main/ChatingList\" style={{position: 'relative'}}>\r\n                    <QuestionAnswerRoundedIcon style={{ fontSize: 30 }} />\r\n                    {MesCount !== 0 ?\r\n                        <div className=\"unread_cnt\">{MesCount}</div>\r\n                        :\r\n                        <></>\r\n                    }\r\n                </NavLink>\r\n                <NavLink className=\"default_active\" activeClassName=\"active\" to=\"/main/Internet\">\r\n                    <LanguageIcon style={{ fontSize: 30 }} />\r\n                </NavLink>\r\n                <NavLink className=\"default_active\" activeClassName=\"active\" to=\"/main/Options\">\r\n                    <MoreHorizIcon style={{ fontSize: 30 }} />\r\n                </NavLink>\r\n            </div>\r\n            {data === 'FriendList' && <FriendList UserData={UserData} checktUpdate={checktUpdate} setchecktUpdate={setchecktUpdate} />}\r\n            {/* {data === 'ChatList' ? <Chat UserData={UserData}/> : null}       */}\r\n            {data === 'ChatingList' && <ChatingList UserData={UserData} checktUpdate={checktUpdate} setchecktUpdate={setchecktUpdate}/> }\r\n            {data === 'ChatingRoom' && <ChatingRoom UserData={UserData} checktUpdate={checktUpdate} setchecktUpdate={setchecktUpdate}/> }\r\n            {data === 'UpdateUser' && <UpdateUser UserData={UserData} Update={Update} setUpdate={setUpdate} /> }\r\n            {data === 'Internet' && <Internet UserData={UserData}/> }\r\n            {data === 'ViewFriend' && <ViewFriend UserData={UserData} /> }\r\n            {data === 'Options' && <Options UserData={UserData}/> }\r\n            {data === 'Bucket' && <Bucket UserData={UserData}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(LeftPage);\r\n","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\FriendList\\FriendList.js",["260","261","262","263","264","265"],"import React, { useState, useEffect, useCallback } from 'react';\r\nimport LeftTitle from './Title/LeftTitle';\r\nimport MyProfile from './MyProfile/MyProfile';\r\nimport PlusFriend from './PlusFriend/PlusFriend';\r\nimport { withRouter } from 'react-router-dom';\r\nimport SearchFriend from './PlusFriend/SearchFriend';\r\nimport { searchFriend, friendAdd } from '../../../api/actions/friend_action';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport ShowFriend from './ShowFriend/ShowFriend';\r\nimport { getFriendList } from '../../../api/actions/friend_action';\r\nimport { alreadyFriend } from '../../../api/actions/friend_action';\r\n\r\nconst FriendList = ({UserData, checktUpdate, setchecktUpdate}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [Search, setSearch] = useState(false);\r\n    const [Friend, setFriend] = useState(false);\r\n    const [FriendClick, setFriendClick] = useState(false);\r\n    const [InputText, setInputText] = useState(\"\");\r\n    const [InputText2, setInputText2] = useState(\"\");\r\n    const [friendDB, setfriendDB] = useState(\"\");\r\n    const [ListFriend, setListFriend] = useState(\"\");\r\n    const [ClickEvent, setClickEvent] = useState(false);\r\n\r\n    const onToggle = () =>{\r\n        setSearch(!Search);\r\n        setFriend(false);\r\n        setFriendClick(false);\r\n    }\r\n    const onToggle2 = () =>{\r\n        setFriend(!Friend);\r\n        setSearch(false);\r\n        setFriendClick(false);\r\n    }\r\n    const onToggle3 = () =>{\r\n        setFriendClick(!Friend);\r\n        setFriend(!Friend);\r\n        setSearch(false);\r\n    }\r\n    const onInputTextHandler = (e) =>{\r\n        setInputText(e.target.value);\r\n    }\r\n    const onInputTextHandler2 = (e) =>{\r\n        setInputText2(e.target.value);\r\n    }\r\n\r\n    const onPlustHandler = (e) =>{\r\n        let body = {\r\n            data : e,\r\n            user : UserData.userId\r\n        }\r\n        \r\n        dispatch(friendAdd(body))\r\n        .then(response => {\r\n            setClickEvent(!ClickEvent);\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setClickEvent(!ClickEvent);\r\n        setchecktUpdate(!checktUpdate);\r\n    },[UserData])\r\n\r\n    useEffect(()=>{\r\n        let body = {\r\n            userId : UserData.userId\r\n        }\r\n\r\n        dispatch(getFriendList(body))\r\n        .then(response => {\r\n            setListFriend(response.payload);\r\n        })\r\n    },[ClickEvent])\r\n\r\n    useEffect(() => {\r\n        if(InputText2 !== \"\"){\r\n            let body = {\r\n                data : InputText2\r\n            }\r\n            \r\n            dispatch(searchFriend(body))\r\n            .then(response => {\r\n                setfriendDB(response.payload);\r\n            })\r\n\r\n        }else{\r\n            setfriendDB(\"\");\r\n        }\r\n    }, [InputText2])\r\n\r\n    \r\n    return (\r\n        <div style={{height:'520px',overflow:'scroll'}}>\r\n            <LeftTitle \r\n                Search={Search}\r\n                Friend={Friend}\r\n                FriendClick={FriendClick}\r\n                InputText={InputText}\r\n                InputText2={InputText2}\r\n                onToggle={onToggle}\r\n                onToggle2={onToggle2}\r\n                onInputTextHandler={onInputTextHandler}\r\n                onInputTextHandler2={onInputTextHandler2}\r\n            />\r\n            <MyProfile\r\n                UserData={UserData}\r\n            />\r\n            {/* <div className=\"line\" /> */}\r\n            {InputText2.length === 0 ?\r\n                <PlusFriend\r\n                    onToggle3={onToggle3}\r\n                />\r\n                :\r\n                <SearchFriend\r\n                    friendDB={friendDB}\r\n                    UserData={UserData}\r\n                    onPlustHandler={onPlustHandler}\r\n                    ListFriend={ListFriend}\r\n                />\r\n            }\r\n            {/* <div className=\"line\" /> */}\r\n            <ShowFriend\r\n                UserData={UserData}\r\n                ListFriend={ListFriend}\r\n                setClickEvent={setClickEvent}\r\n                ClickEvent={ClickEvent}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(FriendList);\r\n","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\api\\actions\\socket_action.js",["266"],"import axios from 'axios';\r\n\r\nconst SOCKET_SEND = 'socket_send';\r\nconst SOCKET_RECEIVE = 'socket_receive'\r\nconst SOCKET_LIST = 'socket_list';\r\nconst SOCKET_CHATINFORM = 'socket_chatinform';\r\nconst SOCKET_FRIEND_PROFILE = 'socket_profile';\r\nconst SOCKET_COUNT = 'socket_count';\r\nconst SOCKET_ALL = 'socket_all';\r\nexport function getChats(dataToSubmit){\r\n    const request = axios.post('/api/chats/getChat',dataToSubmit)\r\n    .then(response => response.data)\r\n\r\n    return {\r\n        type :  SOCKET_SEND,\r\n        payload : request\r\n    }\r\n}\r\n\r\nexport function ListFind(dataToSubmit) {\r\n    const request = axios.post('/api/chats/ListShow', dataToSubmit)\r\n    .then(response => response.data)\r\n\r\n    return {\r\n        type : SOCKET_LIST,\r\n        payload : request\r\n    }\r\n}\r\n\r\nexport function ChatInform(dataToSubmit) {\r\n\r\n    const request = axios.post('/api/chats/textMessage',dataToSubmit)\r\n    .then(response => response.data)\r\n\r\n    return {\r\n        type : SOCKET_CHATINFORM,\r\n        payload : request\r\n    }\r\n}\r\n\r\nexport function FriendProfile(dataToSubmit) {\r\n    const request = axios.post('/api/chats/profiles',dataToSubmit)\r\n    .then(response => response.data)\r\n\r\n    return {\r\n        type : SOCKET_FRIEND_PROFILE,\r\n        payload : request\r\n    }\r\n}\r\n\r\nexport function CountHow(dataToSubmit){\r\n    const request = axios.post('/api/chats/countMessage',dataToSubmit)\r\n    .then(response => response.data )\r\n\r\n    return {\r\n        type : SOCKET_COUNT,\r\n        payload : request\r\n    }\r\n}\r\n\r\nexport function allChat(dataToSubmit){\r\n    const request = axios.post('/api/chats/total',dataToSubmit)\r\n    .then(response=> response.data )\r\n\r\n    return {\r\n        type : SOCKET_ALL,\r\n        payload : request\r\n    }\r\n}\r\n\r\n// export function receiveChat(data){\r\n\r\n//     return {\r\n//         type: SOCKET_RECEIVE,\r\n//         data\r\n//     }\r\n// }\r\n\r\n","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Internet\\Internet.js",[],"D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\ViewFriend\\ViewFriend.js",["267","268","269"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getFriend } from '../../../api/actions/chat_action';\r\nimport TelegramIcon from '@material-ui/icons/Telegram';\r\n\r\nconst ViewFriend = ({match, UserData}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const data = match.params.search || null;\r\n\r\n    const [DataFriend, setDataFriend] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n\r\n        let body = {\r\n            data : data\r\n        }\r\n\r\n        dispatch(getFriend(body))\r\n        .then(response => {\r\n            setDataFriend(response.payload);\r\n        })\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"friend_profile\">\r\n            <div>\r\n                <img src={DataFriend.image} />\r\n                <div className=\"friend_name\">{DataFriend.userName}</div>\r\n                <div className=\"friend_say\">{DataFriend.message}</div>\r\n                <Link to={`/main/ChatingRoom/${UserData._id}_${DataFriend._id}`}>\r\n                    <TelegramIcon />\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ViewFriend);\r\n","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Bucket\\Bucket.js",["270"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../../MainPage/Main.scss';\r\nimport BucketItem from './BucketItem';\r\n\r\nconst Bucket = ({UserData}) => {\r\n    return (\r\n        <div>\r\n            <div className=\"option_type\">\r\n                <div className=\"type_profile\">\r\n                    <img src={UserData.image} />\r\n                    <div className=\"type_text\">{UserData.userName}({UserData.userId})님의<br />주문내역</div>\r\n                </div>\r\n            </div>\r\n            <BucketItem/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Bucket);\r\n","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\SocketList\\ChatingRoom.js",["271","272","273","274","275","276","277","278","279","280","281","282"],"D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\SocketList\\ChatingList.js",["283","284","285"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ChatTitle from './ChatTitle';\r\nimport AddBaner from './AddBaner';\r\nimport { ListFind } from '../../../api/actions/socket_action';\r\nimport ChatItem from './ChatItem';\r\n\r\nconst ChatingList = React.memo(({UserData, checktUpdate, setchecktUpdate}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [roomName, setRoomName ] = useState(\"\");\r\n    const [ListRoom, setListRoom] = useState([]);\r\n\r\n    const handleRoomNameChange = (event) => {\r\n        setRoomName(event.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let body = {\r\n            _id : UserData._id\r\n        }\r\n        dispatch(ListFind(body))\r\n        .then(response => {\r\n            setListRoom(response.payload);\r\n        });\r\n    }, [UserData, checktUpdate])\r\n    \r\n    // let renderChat = () => \r\n    //     ListRoom.map( (chat)=>(\r\n    //         <ChatItem key={chat} chat={chat} UserData={UserData} checktUpdate={checktUpdate} setchecktUpdate={setchecktUpdate}/>\r\n    //     ))\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <ChatTitle />\r\n            <AddBaner />\r\n            {\r\n                ListRoom.map( (chat)=>(\r\n                    <ChatItem key={chat} chat={chat} UserData={UserData} checktUpdate={checktUpdate} setchecktUpdate={setchecktUpdate}/>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default withRouter(ChatingList);","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Options\\Options.js",["286"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport TelegramIcon from '@material-ui/icons/Telegram';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport Weather from './option/Weather';\r\nimport {Link} from 'react-router-dom';\r\nimport '../../MainPage/Main.scss';\r\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\r\n\r\nconst Options = ({UserData}) => {\r\n\r\n    const onClickHandler = () =>{\r\n        axios.get('/api/users/logout')\r\n        .then(response => {\r\n            if(response.data.success){\r\n                window.location.assign('/');\r\n            }else{\r\n                alert('로그아웃 하는데 실패 했습니다.');\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"option_container\">\r\n            <div className=\"option_box\">\r\n                <div className=\"option_list1\">\r\n                    <Link to=\"/main/ChatingList\">\r\n                        <ul>\r\n                            <li><TelegramIcon /></li>\r\n                            <li>대화</li>\r\n                        </ul>\r\n                    </Link>\r\n                    <Link to=\"/main/FriendList\">\r\n                        <ul>\r\n                            <li><PeopleAltIcon /></li>\r\n                            <li>친구</li>\r\n                        </ul>\r\n                    </Link>\r\n                    <Link to=\"/main/Bucket\">\r\n                        <ul>\r\n                            <li><ShoppingBasketIcon /></li>\r\n                            <li>주문내역</li>\r\n                        </ul>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"option_list2\">\r\n                    <Link to=\"/main/Internet/Shop\">\r\n                        <ul>\r\n                            <li><ShoppingCartIcon /></li>\r\n                            <li>쇼핑</li>\r\n                        </ul>\r\n                    </Link>\r\n                    <Link to=\"/main/Internet/TV\">\r\n                        <ul>\r\n                            <li><LiveTvIcon /></li>\r\n                            <li>TV</li>\r\n                        </ul>\r\n                    </Link>\r\n                    <Link to=\"/main/Internet/posts\">\r\n                        <ul>\r\n                            <li><ChatIcon /></li>\r\n                            <li>게시판</li>\r\n                        </ul>\r\n                    </Link>\r\n                </div>\r\n                {/* <TelegramIcon /> 대화하기\r\n                <PeopleAltIcon /> 친구목록\r\n                <AnnouncementIcon /> 뉴스\r\n                <ShoppingCartIcon /> 쇼핑\r\n                <LiveTvIcon /> Egg TV\r\n                <ChatIcon /> Egg Board */}\r\n            </div>\r\n            \r\n            <Weather UserData={UserData}/>\r\n            <div className=\"egg_cont\">\r\n                <img className=\"egg_box\" src=\"/gyeran_height_cut.png\" /><br/>\r\n                항상 계란톡을 이용해주셔서 감사합니다.\r\n            </div>\r\n            <div className=\"log_cont\">\r\n                <button className=\"egg_log\" onClick={onClickHandler}>\r\n                        로그아웃\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Options\r\n","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\UpdateUser\\UpdateUser.js",["287","288","289"],"import React, {useState, useEffect} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { updateUser } from \"../../../api/actions/user_action\";\r\nimport { Button } from '@material-ui/core';\r\nimport '../../MainPage/Main.scss';\r\n\r\nconst UpdateUser = ({UserData, history, setUpdate, Update}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [image, setImage] = useState(UserData.image);\r\n    const [FilePath, setFilePath] = useState(\"\")\r\n    const [inputs, setInputs] = useState({\r\n        nick: UserData.userNickName,\r\n        message: UserData.message,\r\n    })\r\n    const {nick, message} = inputs\r\n\r\n    useEffect(() => {\r\n        setInputs({\r\n            nick: UserData.userNickName,\r\n            message: UserData.message,\r\n        })\r\n    }, [UserData])\r\n    useEffect(() => {\r\n        setImage(UserData.image);\r\n    }, [UserData, image]);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const formData = new FormData();\r\n        console.log('온체인지파일',e.target.nick.value, e.target.message.value, e.target.profile_img.files[0])\r\n        formData.append('userId', UserData.userId)\r\n        formData.append('nick', e.target.nick.value)\r\n        formData.append('message', e.target.message.value)\r\n        formData.append('profile_img', e.target.profile_img.files[0])\r\n\r\n        dispatch(updateUser(formData))\r\n        .then(response=>{\r\n            history.push('/main/FriendList')\r\n            setUpdate(!Update)\r\n        })\r\n    }\r\n    const onChange = (e) => {\r\n        const {className, value} = e.target\r\n        const nextInputs = {\r\n            ...inputs,\r\n            [className] : value,\r\n        }\r\n        setInputs(nextInputs)\r\n    }\r\n\r\n    const btnstyle ={\r\n        margin : '18px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#845460'\r\n    }\r\n\r\n    return (\r\n        <div className=\"change_update\">\r\n            <div className=\"change\">프로필 수정</div>\r\n            <div className=\"form_change\">\r\n                <form onSubmit={onSubmit} encType=\"multipart/form-data\">\r\n                    <label className=\"profile_img_wrapper\" htmlFor=\"profile_img\">\r\n                        <img src={image} />\r\n                    </label>\r\n                    <input type=\"file\" name='profile_img' accept='image/jpg, image/png, image/jpeg, image/gif' multiple={false} />\r\n                    <input className=\"nick\" type=\"text\" value={nick} onChange={onChange} name=\"nick\"/>\r\n                    <input className=\"message\" type=\"text\" value={message} onChange={onChange} name=\"message\"/>\r\n                    <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>수정 완료</Button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(UpdateUser);","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\SocketList\\useChat.js",["290","291"],"import React, {useEffect, useRef, useState} from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\n\r\nconst NEW_CHAT_MESSAGE_EVENT = 'newChatMessage';\r\nconst SOCKET_SERVER_URL = \"http://localhost:4000\";\r\n\r\nconst useChat = (roomId, checktUpdate, setchecktUpdate) => {\r\n\r\n    const [Messages, setMessages] = useState([]);\r\n    const socketRef = useRef();\r\n    \r\n    useEffect(() => {\r\n\r\n        // 웹소켓 연결을 한다\r\n        socketRef.current = socketIOClient(SOCKET_SERVER_URL,{\r\n            query : { roomId },\r\n        });\r\n\r\n        // 들어오는 메시지를 듣는다\r\n        socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, (message) => {\r\n            const incomingMessage = {\r\n                ...message,\r\n                ownedByCurrentUser : message.senderId === socketRef.current.id,\r\n            };\r\n            setMessages((messages)=>[...messages, incomingMessage]);\r\n            setchecktUpdate(!checktUpdate);\r\n        });\r\n\r\n        // 소켓 연결이 끝나면 부순다\r\n        return () => { \r\n            socketRef.current.disconnect();\r\n        }\r\n\r\n    }, [roomId])\r\n\r\n    // 같은 방에 있는 유저들에게 메세지를 전송한다\r\n    const sendMessage = (messageBody, Id, roomId, userName, image, anoter) => {\r\n        socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\r\n            message: messageBody,\r\n            senderId: socketRef.current.id,\r\n            sendUser : Id,\r\n            roomName : roomId,\r\n            userName : userName,\r\n            image : image,\r\n            user : Id,\r\n            toUser : anoter,\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return { Messages, sendMessage, checktUpdate, setchecktUpdate}\r\n}\r\n\r\nexport default useChat;","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\api\\actions\\friend_action.js",[],"D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\PlusFriend.js",[],"D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\FriendList\\ShowFriend\\ShowFriend.js",["292","293","294"],"import React, {useEffect} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ShowFriend = React.memo(({UserData, ListFriend, ClickEvent, setClickEvent}) => {\r\n\r\n    if(ListFriend.Myfriend !== undefined){\r\n        return (\r\n            <div>\r\n                {\r\n                    ListFriend.Myfriend.map((friend)=>(\r\n                        <Link key={friend._id} to={`/main/ViewFriend/${friend.friendId}`} style={{textDecoration:'none',color:'#000'}}>\r\n                            <div className=\"myProfile\" key={friend._id}>\r\n                                <img src={friend.friendImage} />\r\n                                <div className=\"text_site\">\r\n                                    <div className=\"top\">{friend.friendName}</div>\r\n                                    <div className=\"bottom\">{friend.friendMessage}</div>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }else{\r\n        return (\r\n            <div>\r\n                <div>친구가 없습니다</div>\r\n            </div>\r\n        )\r\n    }\r\n})\r\n\r\nexport default withRouter(ShowFriend);\r\n","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\SearchFriend.js",["295"],"import React from 'react';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport '../../../MainPage/Main.scss';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst SearchFriend = React.memo(({friendDB, UserData, onPlustHandler, ListFriend }) => {\r\n    console.log(ListFriend);\r\n    if(friendDB.friend){\r\n        if(friendDB.friend.length !== 0){ //검색결과 있을 때\r\n            return (\r\n                <div>\r\n                    {\r\n                        friendDB.friend.map((searched) => (\r\n                            // let searched = searched.filter(exceptsearch => exceptsearch.userId === UserData.userId)\r\n                            searched.userId !== UserData.userId ?   //검색결과에서 자신 제외\r\n                                <div className=\"myProfile\" key={searched.userId} onClick={()=>onPlustHandler(searched.userId)}>\r\n                                    <img src={searched.image} />\r\n                                    <div className=\"text_site\">\r\n                                        <div className=\"top\">{searched.userName}</div>\r\n                                        <div className=\"bottom\">{searched.message}</div>\r\n                                    </div>\r\n                                    <AddBoxIcon className=\"plus\"/>\r\n                                </div>\r\n                                :\r\n                                <div className=\"error_me\">검색결과가 없습니다</div>\r\n                        ))           \r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n        else{          //검색결과 없을 때\r\n            return(\r\n                <div className=\"plus_site\">검색 결과가 없습니다</div>\r\n            )\r\n        }\r\n    }else{          //검색결과 없을 때\r\n        return(\r\n            <div className=\"plus_site\">검색 결과가 없습니다</div>\r\n        )\r\n    }\r\n    \r\n    \r\n});\r\n\r\nexport default withRouter(SearchFriend);\r\n","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\FriendList\\Title\\LeftTitle.js",["296","297"],"import axios from 'axios';\r\nimport React, { useRef, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../../../MainPage/Main.scss';\r\nimport {\r\n    SearchOutlined,\r\n    UserAddOutlined\r\n} from '@ant-design/icons';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst LeftTitle = React.memo(({\r\n    Search,\r\n    Friend,\r\n    FriendClick,\r\n    InputText,\r\n    InputText2,\r\n    onToggle,\r\n    onToggle2,\r\n    onInputTextHandler,\r\n    onInputTextHandler2\r\n}) => {\r\n\r\n    const inputEl = useRef(null);\r\n    const inputEl2 = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if(Search) inputEl.current.focus();\r\n        if(Friend) inputEl2.current.focus();\r\n        if(FriendClick) inputEl2.current.focus();\r\n    }, [Search, Friend, FriendClick])\r\n\r\n    return (\r\n        <div className=\"left_title\">\r\n            <div>친구</div>\r\n            <div className=\"search_friend\">\r\n                {Search ? <div className=\"input_box\"><input type=\"text\" placeholder=\"친구검색\" value={InputText} ref={inputEl} onChange={onInputTextHandler} /><SearchIcon className=\"search_icon\" /></div> : null}\r\n                {Friend || FriendClick ? <div className=\"input_box\"><input type=\"text\" placeholder=\"친구추가\" value={InputText2} ref={inputEl2} onChange={onInputTextHandler2}/><SearchIcon className=\"search_icon\" /></div> : null}\r\n                {/* <SearchOutlined onClick={onToggle}/> */}\r\n                <UserAddOutlined onClick={onToggle2} className=\"add_friend\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default withRouter(LeftTitle);\r\n","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\FriendList\\MyProfile\\MyProfile.js",["298"],"import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nconst MyProfile = React.memo(({UserData}) => {\r\n\r\n    return (\r\n        <div className=\"myfile\">\r\n            <Link to=\"/main/UpdateUser\">\r\n                <img src={UserData.image} />\r\n                <div className=\"text_site\">\r\n                    <div className=\"top\">{UserData.userName}</div>\r\n                    <div className=\"bottom\">{UserData.message}</div>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default withRouter(MyProfile);\r\n","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\api\\actions\\chat_action.js",[],"D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Bucket\\BucketItem.js",["299","300","301","302","303"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n// import '../../MainPage/Main.scss';\r\nimport moment from 'moment';\r\n\r\nconst BucketItem = ({UserData}) => {\r\n    const [items, setItems] = useState('');\r\n    \r\n    console.log('items', items);\r\n    useEffect(()=>{\r\n        axios.post('/api/bucket/list', UserData)\r\n        .then(res => {\r\n            console.log('res', res, res.data);\r\n            setItems(res.data.items);\r\n            console.log('asdf', res.data.items)\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"item_container\">\r\n            {items.length !== 0 ?\r\n                items.map(item => (\r\n                    <div className=\"item_wrapper\">\r\n                        <h5>주문 내역</h5>\r\n                        <div className=\"item_approvedAt\">{moment(item.bucketData.approved_at).format('YYYY-MM-DD HH:mm:ss')}</div>\r\n                        <div className=\"item_row\">\r\n                            <div className=\"item_img\">\r\n                                {item.bucketData.item_code === '1' && <img src=\"/shopping/shopping_1.png\"/>}\r\n                                {item.bucketData.item_code === '2' && <img src=\"/shopping/shopping_2.jpg\"/>}\r\n                                {item.bucketData.item_code === '3' && <img src=\"/shopping/shopping_3.jpg\"/>}\r\n                                {item.bucketData.item_code === '4' && <img src=\"/shopping/shopping_4.jpg\"/>}\r\n                            </div>\r\n                            <div className=\"item_title\">{item.bucketData.item_name}</div>\r\n                        </div>\r\n                        <div className=\"item_price\">{item.bucketData.amount.total.toLocaleString()} 원</div>\r\n                    </div>\r\n                ))\r\n                :\r\n                <div> 주문내역이 없습니다. </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(BucketItem);\r\n","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Internet\\TV\\TV.js",["304","305","306","307"],"import React, { useEffect, useState } from 'react'\r\nimport client from 'cheerio-httpcli'\r\nimport cheerio from 'cheerio'\r\nimport axios from 'axios'\r\nimport '../../../MainPage/Main.scss';\r\n\r\nconst TV = () => {\r\n\r\n    const [Chu, setChu] = useState([]);\r\n    useEffect(() => {\r\n        axios.get('/api/videos')\r\n            .then(response => {\r\n                const { data } = response.data;\r\n                console.log('aaaaaaaaaa', response.data.result);\r\n                setChu(response.data.result);\r\n            })\r\n    }, [])\r\n    \r\n    return (\r\n        <div className=\"chu_box\">\r\n            { Chu &&\r\n            Chu.map((ch) => (\r\n                <a href={ch.video_src}>\r\n                    <div className=\"chu_src\" key={ch.video_src}>\r\n                        <div className=\"chu_div\">\r\n                            <img className=\"chu_img\" src={ch.img_data}/>\r\n                        </div>\r\n                        <div className=\"chu_span\">\r\n                            <span className=\"chu_say\">{ch.span_text}</span>\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n            ))\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TV;","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Options\\option\\Weather.js",["308","309","310","311","312"],"import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport usePromise from '../../../../usePromise';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Weather = ({UserData}) => {\r\n\r\n    const [state, setstate] = useState(\"\")\r\n\r\n    // api.openweathermap.org/data/2.5/weather?q=seoul&appid=3759cf2983458ec945fed258d8c987fb&units=imperial\r\n    const [loading, resolved, error] = usePromise(() => {\r\n        return axios.get(\r\n            `http://api.openweathermap.org/data/2.5/weather?q=seoul&appid=3759cf2983458ec945fed258d8c987fb`\r\n        );\r\n    }, [UserData]);\r\n\r\n    // 대기중 일때 실행\r\n    if (loading) {\r\n        return (\r\n            <LoadingOutlined className=\"loading\"/>\r\n        )\r\n    }\r\n    // 값이 없으면 null 값으로 반환\r\n    if (!resolved) {\r\n        return (\r\n            <div>날씨오류</div>\r\n        );\r\n    }\r\n\r\n    // resolved값이 유효할 때\r\n    const open = resolved;\r\n    const { weather } = resolved.data;\r\n    console.log(resolved);\r\n    return (\r\n        <div className=\"news_top\">\r\n            <div className=\"news_head\">\r\n                <img src={`http://openweathermap.org/img/wn/${weather[0].icon}.png`} />\r\n                <div className=\"news_weather\">\r\n                    <ul>\r\n                        <li>위치 : {resolved.data.name}</li>\r\n                        <li>날씨 : {weather[0].main}</li>\r\n                        <li>풍속 : {resolved.data.wind.speed}</li>\r\n                    </ul>\r\n                    \r\n                    \r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\SocketList\\AddBaner.js",["313","314"],"import React, { useState, useEffect } from 'react';\r\nimport '../../MainPage/Main.scss';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst AddBaner = () => {\r\n\r\n    const [Image, setImage] = useState(\"\");\r\n\r\n    const data = [\r\n        '/advertise/k-000.png',\r\n        '/advertise/k-001.png',\r\n        '/advertise/k-002.png',\r\n        '/advertise/k-003.png',\r\n        '/advertise/k-004.png',\r\n        '/advertise/k-005.png',\r\n        '/advertise/k-006.png',\r\n        '/advertise/k-007.png',\r\n        '/advertise/k-008.png',\r\n        '/advertise/k-009.png',\r\n        '/advertise/k-0010.png',\r\n        '/advertise/k-0011.png',\r\n    ]\r\n\r\n    useEffect(() => {\r\n        // 0~9 랜덤\r\n        const randomNum = Math.floor(Math.random()*10 + 1);\r\n        setImage(data[randomNum]);\r\n        console.log(randomNum);\r\n    }, [])\r\n    return (\r\n        <div className=\"big_ad\">\r\n            <img className=\"ad_ver\" src={Image} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(AddBaner);\r\n","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\SocketList\\ChatTitle.js",[],"D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\SocketList\\ChatItem.js",["315","316","317","318","319"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { ChatInform } from '../../../api/actions/socket_action';\r\nimport moment from 'moment';\r\nimport { FriendProfile } from '../../../api/actions/socket_action';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../../MainPage/Main.scss';\r\nimport useChat from './useChat';\r\nimport { CountHow } from '../../../api/actions/socket_action';\r\nimport 'moment/locale/ko'; \r\n\r\nconst ChatItem = ({ chat, UserData, checktUpdate, setchecktUpdate }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [Mes, setMes] = useState(\"\");\r\n    const [MatchUrl, setMatchUrl] = useState(\"\");\r\n    const [Fri, setFri] = useState(\"\");\r\n    const {Messages} = useChat(chat, checktUpdate, setchecktUpdate);\r\n    const [Num, setNum] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        let body ={\r\n            chat : chat,\r\n            userdata : UserData\r\n        }\r\n        dispatch(ChatInform(body))\r\n        .then(response => {\r\n            setMes(response.payload[0]);\r\n            setMatchUrl(response.payload[0].roomName.split('_'));\r\n            if(UserData._id===response.payload[0].roomName.split('_')[0]){\r\n                let body ={\r\n                    mem : response.payload[0].roomName.split('_')[1]\r\n                }\r\n                dispatch(FriendProfile(body))\r\n                .then(response => {\r\n                    setFri(response.payload[0])\r\n                })\r\n            }else{\r\n                let body ={\r\n                    mem : response.payload[0].roomName.split('_')[0]\r\n                }\r\n                dispatch(FriendProfile(body))\r\n                .then(response => {\r\n                    setFri(response.payload[0])\r\n                })\r\n            }\r\n        })\r\n    }, [ UserData, chat, Messages, checktUpdate ])\r\n\r\n    useEffect(() => {\r\n        let body = {\r\n            roomId : chat,\r\n            _id : UserData._id,\r\n        }\r\n        dispatch(CountHow(body))\r\n        .then(response => {\r\n            setNum(response.payload.number);\r\n        })\r\n        // axios.post('/api/chats/countMessage',body)\r\n        // .then(response => {\r\n        //     console.log(response)\r\n        // })\r\n    }, [ Messages, Fri ])\r\n\r\n    useEffect(() => {\r\n        setchecktUpdate(!checktUpdate)\r\n    }, [Num])\r\n\r\n    return (\r\n        <div className=\"talking\">\r\n            {\r\n                Mes && Fri &&\r\n                <Link to={`/main/ChatingRoom/${chat}`}>\r\n                    <div className=\"talk_site\">\r\n                        <img src={Fri.image} />\r\n                        <div className=\"talk_pro\">\r\n                            <span>\r\n                                {Fri.userName}\r\n                            </span><br/>\r\n                            <span className=\"talk_message\">\r\n                                {Mes.message}\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"talk_div\">\r\n                            <div className=\"talk_time\">\r\n                                {moment(Mes.date).format('A h:mm')}\r\n                            </div>\r\n                            <div className=\"talk_count\">\r\n                                {\r\n                                    Num !== 0 ?\r\n                                    Num\r\n                                    : <></>\r\n                                    }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n            }\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default withRouter(ChatItem);\r\n\r\n","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\usePromise.js",["320","321"],"// usePromise.js\r\nimport {useState, useEffect} from 'react';\r\n\r\nexport default function usePromise(promiseCreator, deps){\r\n\r\n    const [loading, setLoading] = useState(false); // 대기중 일때\r\n    const [resolved, setResolved] = useState(null); // 완료 일때\r\n    const [error, setError] = useState(null); // 실패 일때\r\n\r\n    useEffect(()=>{\r\n        const process = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const resolved = await promiseCreator();\r\n                setResolved(resolved);\r\n            } catch (error) {\r\n                setError(error);\r\n            }\r\n            setLoading(false);\r\n        }\r\n        process();\r\n    },deps);\r\n\r\n    return [loading, resolved, error];\r\n} ","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Internet\\Board\\Board.js",["322","323","324"],"import React, {useEffect, useState} from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport BoardList from './BoardList';\r\nimport BoardCreate from './BoardCreate';\r\nimport BoardDetail from './BoardDetail';\r\nimport BoardUpdate from './BoardUpdate';\r\n\r\nconst Board = ({match, UserData}) => {\r\n    // const [selection, setselection] = useState('BoardList');\r\n    // useEffect(() => {\r\n        //     console.log('selection', selection);\r\n        // }, [selection])\r\n    // const selection = match.params.select || 'BoardList';\r\n    const [selection, setSelection] = useState('BoardList');\r\n    const [process, setProcess] = useState('');\r\n    console.log('params', match.params);\r\n    useEffect(()=>{\r\n        setSelection(match.params.select);\r\n        console.log('selection', selection);\r\n    }, [match.params.select])\r\n    useEffect(()=>{\r\n        setProcess(match.params.process);\r\n        console.log('process', process);\r\n    }, [match.params.process])\r\n        return (\r\n        <div>\r\n            {selection === 'BoardList' || selection === undefined ? <BoardList UserData={UserData} selection={selection}/> \r\n            : selection === 'create' ? <BoardCreate UserData={UserData}/> \r\n            : process === 'update' ? <BoardUpdate UserData={UserData}/> \r\n            : <BoardDetail UserData={UserData} selection={selection} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Board);\r\n","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Internet\\News\\News.js",["325"],"import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\nimport usePromise from '../../../../usePromise';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport NewsItem from './NewsItem';\r\n\r\nconst News = ({ UserData }) => {\r\n\r\n    const [Count, setCount] = useState(0);\r\n\r\n\r\n    const [loading, resolved, error] = usePromise(() => {\r\n        return axios.get(\r\n            `https://newsapi.org/v2/top-headlines?country=kr&apiKey=112d8e8b89e94be1a897eaffad725b6a`\r\n        );\r\n    }, [UserData]);\r\n\r\n    // 대기중 일때 실행\r\n    if (loading) {\r\n        return (\r\n            <LoadingOutlined className=\"loading\"/>\r\n        )\r\n    }\r\n    // 값이 없으면 null 값으로 반환\r\n    if (!resolved) {\r\n        return (\r\n            <div>뉴스오류</div>\r\n        );\r\n    }\r\n\r\n    // resolved값이 유효할 때\r\n    const { articles } = resolved.data;\r\n\r\n    return (\r\n        <div className=\"news_top\">\r\n            {articles.map((article)=>(\r\n                <NewsItem key={article.url} article={article} Count={Count} setCount={setCount}/>\r\n                ))}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default withRouter(News);\r\n","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Internet\\IntTitle\\IntTitle.js",[],"D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\Shop.js",["326","327"],"import React, { useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport ShopItem from './ShopItem';\r\nimport PayResult from './PayResult';\r\n\r\nconst Shop = ({location, match, UserData}) => {\r\n    function getUrlParams() {\r\n        var params = {};\r\n        location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(str, key, value) { params[key] = value; });\r\n        return params;\r\n    }\r\n    const query = getUrlParams();\r\n    const dataBase= [\r\n        {\r\n            image: '/shopping/shopping_1.png',\r\n            productName: '오트밀크로 만든 쫀득 수제 생초콜릿 5종(밀크/다크/녹차/인절미/누텔라)',\r\n            productCode: 1,\r\n            productPrice: 15900,\r\n            productDesc: '/shopping/shopping_1_desc.jpg',\r\n        },\r\n        {\r\n            image: '/shopping/shopping_2.jpg',\r\n            productName: '\"고마운분께 감사선물\" 하루견과 고마워요/사랑해요/감사해요 30입세트',\r\n            productCode: 2,\r\n            productPrice: 13900,\r\n            productDesc: '/shopping/shopping_2_desc.jpg',\r\n        },\r\n        {\r\n            image: '/shopping/shopping_3.jpg',\r\n            productName: '[디저트선물] 프랑스 프리미엄 마카롱 (12입)',\r\n            productCode: 3,\r\n            productPrice: 12500,\r\n            productDesc: '/shopping/shopping_3_desc.jpg',\r\n        },\r\n        {\r\n            image: '/shopping/shopping_4.jpg',\r\n            productName: '\"내마음은 하트\" 페레로로쉐 T8 하트 초콜릿',\r\n            productCode: 4,\r\n            productPrice: 8400,\r\n            productDesc: '/shopping/shopping_4_desc.jpg',\r\n        },\r\n    ]\r\n\r\n    const boxStyle = {\r\n      display: \"inline-block\",\r\n      width: \"43%\",\r\n      padding: \"10% 0 0\",\r\n      textDecoration: 'none',\r\n      color: 'inherit',\r\n      fontSize: '13px',\r\n    };\r\n\r\n    const titleStyle = {\r\n      display: \"-webkit-box\",\r\n      fontSize: \"12px\",\r\n      width: \"100%\",\r\n      height: \"35px\",\r\n      overflow: \"hidden\",\r\n      whiteSpace: 'normal',\r\n      textOverflow: \"ellipsis\",\r\n      margin: '3% 0 3%'\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"products_section\" style={{display: 'flex', justifyContent: 'space-around', flexWrap: 'wrap', width: '90%', margin: '0 auto'}}>\r\n                {match.params.select === undefined ?\r\n                query.item === undefined ? \r\n                //리스트\r\n                dataBase.map((productBox, index) => (\r\n                    // <Link to={`/main/Internet/Shop/${index+1}`} className=\"products_box\" style={boxStyle}>\r\n                    <Link to={`/main/Internet/Shop?item=${index}`} className=\"products_box\" style={boxStyle} key={index}>\r\n                        <img className=\"products_img\" src={productBox.image} style={{width: '100%'}}/>\r\n                        <div className=\"products_title\" style={titleStyle}>{productBox.productName}</div>\r\n                        <div className=\"products_price\" style={{fontWeight: '700'}}>{productBox.productPrice.toLocaleString()}원</div>\r\n                    </Link>\r\n                ))\r\n                :\r\n                //상품조회\r\n                <ShopItem key={query.item} productBox={dataBase[query.item]} querynum={query.item} UserData={UserData}/>\r\n                :\r\n                query.item === undefined ?\r\n                //결제승인\r\n                <PayResult UserData={UserData}/>\r\n                :\r\n                <div>페이지가 없습니다.</div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Shop);\r\n","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\PayResult.js",["328","329"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst PayResult= ({location, match}) => {\r\n    // const [customerId, setCustomerId] = useState('');\r\n    const customerId = window.localStorage.getItem(\"customerId\");\r\n    const [state, setState] = useState({\r\n        params: {\r\n        cid: \"TC0ONETIME\",\r\n        // localstorage에서 tid값을 읽어온다.\r\n        tid: window.localStorage.getItem(\"tid\"),\r\n        partner_order_id: \"partner_order_id\",\r\n        partner_user_id: \"partner_user_id\",\r\n        // pg_token: \"\",\r\n        pg_token: location.search.split(\"=\")[1]\r\n        },\r\n    });\r\n\r\n    const payresult = match.params.select;\r\n    // url에 붙어서 온 pg_token을 결제 API에 줄 params에 할당\r\n    // params.pg_token = search.split(\"=\")[1];\r\n    \r\n    useEffect(()=>{\r\n        // setState({pg_token: location.search.split(\"=\")[1]});\r\n        const { params } = state;\r\n        console.log('params', params);\r\n        console.log('result state', state);\r\n        console.log('aa', state.params.pg_token);\r\n        if(state.params.pg_token !== undefined){\r\n            axios({\r\n            url: \"/v1/payment/approve\",\r\n            method: \"POST\",\r\n            headers: {\r\n                Authorization: \"KakaoAK ca4cd7847b43dd1a89e836e3ce896daf\",\r\n                \"Content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n            },\r\n            params,\r\n            }).then((response) => {\r\n            // 결제 승인에 대한 응답 출력\r\n            const bucketData = response.data;\r\n            console.log(customerId, bucketData);\r\n            axios.post('/api/bucket', {customerId, bucketData});\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n      <div style={{textAlign: 'center'}}>\r\n        {payresult === 'success' && <h4>결제에 성공하였습니다.</h4>}\r\n        {payresult === 'fail' && <h4>결제에 실패하였습니다.</h4>}\r\n        {payresult === 'cancel' && <h4>결제를 취소하였습니다.</h4>}        \r\n        <Link to=\"/main/Internet/Shop\"><Button>쇼핑으로 돌아가기</Button></Link>\r\n      </div>\r\n    );\r\n}\r\nexport default withRouter(PayResult);","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Internet\\News\\NewsItem.js",["330","331","332"],"import React, {useEffect} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../../../MainPage/Main.scss';\r\n\r\nconst NewsItem = ({ article, Count, setCount }) => {\r\n\r\n    const { title, description, url, urlToImage } = article;\r\n\r\n    // if (Count % 3 === 0) {\r\n        return (\r\n            <div>\r\n                \r\n                    <div className=\"box_article\">\r\n                        <a href={url} target=\"_blank\" rel=\"noopner noreferrer\">\r\n                        {urlToImage ? \r\n                            <img src={urlToImage} alt=\"해당 기사 사진이 오류입니다\" />\r\n                            :\r\n                            <img src='/gyeran.png'/>\r\n                        }\r\n                            <span>{title}</span>\r\n                        </a>\r\n                    </div>\r\n               \r\n            </div>\r\n        )\r\n    // }else {\r\n    //     return (\r\n    //         <div>\r\n    //             <div>\r\n    //                 <a href={url} target=\"_blank\" rel=\"noopner noreferrer\">\r\n    //                     <span>{title}</span>\r\n    //                 </a>\r\n    //             </div>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n}\r\n\r\nexport default withRouter(NewsItem);\r\n","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\ShopItem.js",["333","334","335","336","337","338"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n// import { payReady } from '../../../../api/actions/pay_action';\r\n\r\nconst ShopItem = ({UserData, productBox, querynum}) => {\r\n    const [state, setState] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n      setState({\r\n        // 응답에서 가져올 값들\r\n        next_redirect_pc_url: \"\",\r\n        tid: \"\",\r\n        // 요청에 넘겨줄 매개변수들\r\n        params: {\r\n          cid: \"TC0ONETIME\",\r\n          partner_order_id: \"partner_order_id\",\r\n          partner_user_id: \"partner_user_id\",\r\n          item_name: productBox.productName,\r\n          item_code: productBox.productCode,\r\n          quantity: 1,\r\n          total_amount: productBox.productPrice,\r\n          // total_amount: 30000,\r\n          tax_free_amount: 0,\r\n          approval_url: \"http://localhost:3000/main/Internet/Shop/success\",\r\n          fail_url: \"http://localhost:3000/main/Internet/Shop/fail\",\r\n          cancel_url: \"http://localhost:3000/main/Internet/Shop/cancel\",\r\n        },\r\n      })\r\n    }, [productBox])\r\n\r\n    useEffect(()=>{\r\n      const { params } = state;\r\n      axios({\r\n        url: \"/v1/payment/ready\",\r\n        // 결제 준비 API는 POST 메소드라고 한다.\r\n        method: \"POST\",\r\n        headers: {\r\n          // 카카오 developers에 등록한 admin키를 헤더에 줘야 한다.\r\n          Authorization: \"KakaoAK ca4cd7847b43dd1a89e836e3ce896daf\",\r\n          \"Content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          // \"Access-Control-Allow-Origin\": \"http://localhost:3000\",\r\n        },\r\n        // 설정한 매개변수들\r\n        params,\r\n      }).then((response) => {\r\n        // 응답에서 필요한 data만 뽑는다.\r\n        const {\r\n          data: { next_redirect_pc_url, tid }\r\n        } = response;\r\n        console.log(next_redirect_pc_url);\r\n        console.log(tid);\r\n        // localstorage에 tid 저장\r\n        window.localStorage.setItem(\"tid\", tid);\r\n        window.localStorage.setItem(\"customerId\", UserData.userId);\r\n        // 응답 data로 state 갱신\r\n        setState({ next_redirect_pc_url, tid });\r\n      });\r\n    },[state]);\r\n  \r\n      const { next_redirect_pc_url} = state;\r\n      console.log('kakao', next_redirect_pc_url);\r\n\r\n    const wrapperStyle = {\r\n      display: 'flex',\r\n      position: 'relative',\r\n      alignItems: 'center',\r\n      margin: '5% 0 8%',\r\n    }\r\n\r\n    const payStyle = {\r\n      margin: '5% 0',\r\n      padding: '4%',\r\n      backgroundColor: '#fbf0b0',\r\n      borderRadius: '10px',\r\n      height: '30px',\r\n    }\r\n\r\n    return (\r\n        productBox !== undefined ?\r\n        <div style={{overflow:'scroll',height:'500px'}}>\r\n            <img className=\"products_img\" src={productBox.image} style={{width: '100%'}}/>\r\n            <div className=\"products_title\" style={{fontSize: '13px',  margin: '5% 0 3%', lineHeight: '1.8'}}>{productBox.productName}</div>\r\n            <div className=\"pay_wrapper\" style={wrapperStyle}>\r\n              <div className=\"products_price\" style={{display: 'inline-block', width: '65%', fontWeight: '700'}}>{productBox.productPrice.toLocaleString()}원</div>\r\n              <div className=\"img_wrapper\" style={{display: 'inline-block'}}><a href={ next_redirect_pc_url }>\r\n                  <img style={payStyle} src=\"/gayran_pay.png\" />\r\n              </a></div>\r\n            </div>\r\n            <img className=\"products_desc\" style={{width: '100%'}} src={productBox.productDesc}/>\r\n        </div>\r\n        :\r\n        <></>\r\n    )\r\n}\r\n\r\nexport default withRouter(ShopItem)\r\n","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardDetail.js",["339","340"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { deletePost, viewPost } from \"../../../../api/actions/post_action\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Link } from 'react-router-dom';\r\nimport './Board.scss'\r\nimport moment from 'moment';\r\nimport 'moment/locale/ko'; \r\n\r\nconst BoardDetail = ({UserData, match, history, selection}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [post, setPost] = useState('');\r\n\r\n    useEffect(() => {\r\n        dispatch(viewPost({UserData, selection}))\r\n        .then(res => {\r\n            console.log('detail', res.payload.post)\r\n            setPost(res.payload.post);\r\n        })\r\n        .then(res => {\r\n            console.log('aaaaaaaposts', post);\r\n        })\r\n    }, [selection]);\r\n\r\n    const onClick = (e) => {\r\n        dispatch(deletePost({UserData, selection}))\r\n        .then(res => {\r\n            // history.push('/main/Internet/posts');\r\n            window.location.assign(`/main/Internet/posts`);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        { post ?\r\n        <div className=\"wrapper\" style={{display: 'block', margin: '10%'}}>\r\n            <div className=\"writer_profile\" style={{display: 'flex', backgroundColor: 'rgb(214 211 211 / 52%)', padding: '5%', borderRadius: '10px'}}>\r\n                <img className=\"profile_imgStyle\" src={post.writerData.image}/>\r\n                <div className=\"profile_txtStyle\">{post.writerData.userNickName}</div>\r\n            </div>\r\n            <h3 className=\"form_group\" >{post.title}</h3>\r\n            <div className=\"form_group\" style={{margin: '15% 0'}}>{post.body}</div>\r\n            <div>{moment(post.createdAt).startOf('sec').fromNow()}</div>\r\n            {post.writerData.userId === UserData.userId ? \r\n            <div style={{display: 'block', textAlign: 'center', marginTop: '15%'}}>\r\n                <Link to={`/main/Internet/posts/${post._id}/update`}>\r\n                    <Button style={{backgroundColor: '#f6bd63', color: '#fff', marginRight: '5%'}}>수정</Button>\r\n                </Link>\r\n                <Button style={{backgroundColor: 'rgba(182, 182, 182, 0.521)'}} onClick={onClick}>삭제</Button>\r\n            </div>\r\n            :\r\n            null\r\n            }\r\n        </div>\r\n        : <></>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BoardDetail\r\n","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardUpdate.js",["341","342"],"import React, {useEffect, useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { updatePost, viewPost } from '../../../../api/actions/post_action';\r\nimport { Button } from \"@material-ui/core\";\r\nimport './Board.scss';\r\n\r\nconst BoardUpdate = ({UserData, match, history}) => {\r\n    const dispatch = useDispatch();\r\n    const selection = match.params.select;\r\n    const process = match.params.process;\r\n\r\n    const [post, setPost] = useState('');\r\n\r\n    const [inputs, setInputs] = useState({\r\n        title: '',\r\n        body: '',\r\n    });\r\n    \r\n    const {title, body} = inputs;\r\n\r\n    useEffect(()=>{\r\n        console.log('update selection', selection);\r\n        dispatch(viewPost({UserData, selection, process}))\r\n        .then(res => {\r\n            console.log('detail', res.payload.post)\r\n            setPost(res.payload.post);\r\n            \r\n        })\r\n    }, [selection]);\r\n\r\n    useEffect(()=>{\r\n        setInputs({ title: post.title, body: post.body })\r\n    }, [post]);\r\n\r\n    const onChange = (e) => {\r\n        const {className, value} = e.target\r\n        const nextInputs = {\r\n            ...inputs,\r\n            [className] : value,\r\n        }\r\n        setInputs(nextInputs)\r\n    }\r\n    const onSubmitUpdate = (e) => {\r\n        e.preventDefault();\r\n        const Writer = UserData.userNickName;\r\n        dispatch(updatePost({title, body, selection}))\r\n        .then(res => {\r\n            history.push('/main/Internet/posts');\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <form onSubmit={onSubmitUpdate} >\r\n                <div className=\"form_group\">\r\n                    <label htmlFor=\"title\">제목</label>\r\n                    <input type=\"text\" id=\"title\" name=\"title\" value={title} className=\"title\"\r\n                    onChange={onChange}/>\r\n                </div>\r\n                <div className=\"form_group\">\r\n                    <label htmlFor=\"body\">내용</label>\r\n                    <textarea id=\"body\" name=\"body\" rows=\"5\" value={body} className=\"body\"\r\n                    onChange={onChange}></textarea>\r\n                </div>\r\n                <div className=\"btn_group\">\r\n                    <Button type=\"submit\" className=\"btn btn_style\">제출</Button>\r\n                    <a className=\"btn btn_primary\" href=\"main/Internet/posts\"><Button>취소</Button></a>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(BoardUpdate)\r\n","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardList.js",["343","344"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { getPosts } from '../../../../api/actions/post_action'\r\n// import { createPost } from './BoardCU'\r\nimport { Button } from \"@material-ui/core\";\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport './Board.scss';\r\n\r\nconst BoardList = ({match, UserData}) => {\r\n    const dispatch = useDispatch();\r\n    const [posts, setPosts] = useState('');\r\n\r\n    console.log('posts', posts);\r\n    useEffect(()=>{\r\n        dispatch(getPosts())\r\n        .then(res => {\r\n            setPosts(res.payload.posts);\r\n        })\r\n    }, [match.params]);\r\n\r\n    return (\r\n        <div className=\"wrapper\" style={{position: 'relative'}}>\r\n            <h3 className=\"board_title\">Egg 게시판</h3>\r\n            {/* <div style={{display: 'flex', justifyContent: 'flex-end'}}> */}\r\n            <div style={{position: 'absolute', top: -5, right: 0,}}>\r\n                <Link to=\"/main/Internet/posts/create\"><Button className=\"btn_style\" style={{backgroundColor: '#f6bd63', color: '#fff', marginRight: '5%'}}>글쓰기</Button></Link>\r\n            </div>\r\n            {posts.length !== 0 ? \r\n                posts.map(post => (\r\n                    <Link key={post._id} className=\"post_box\" to={`/main/Internet/posts/${post._id}`}>\r\n                        <div className=\"title_row\" >\r\n                            <div className=\"title_text\">{post.title}</div>\r\n                            <div className=\"img_wrapper\"><img className=\"list_profile_img\" src={post.writerData.image}/></div>\r\n                        </div>\r\n                        {/* <div className=\"body\">{post.body}</div> */}\r\n                    </Link>\r\n                ))\r\n                :\r\n                // <div>게시글이 없습니다.</div>\r\n                <LoadingOutlined className=\"loading\"/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(BoardList)\r\n","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardCreate.js",["345"],"import React, {useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { createPost } from '../../../../api/actions/post_action';\r\nimport { Button } from \"@material-ui/core\";\r\nimport './Board.scss';\r\n\r\nconst BoardCreate = ({UserData, match, history}) => {\r\n    const dispatch = useDispatch();\r\n    const selection = match.params.select;\r\n\r\n    const [inputs, setInputs] = useState({\r\n        title: '',\r\n        body: '',\r\n    });\r\n    \r\n    const {title, body} = inputs\r\n\r\n    const onChange = (e) => {\r\n        const {className, value} = e.target\r\n        const nextInputs = {\r\n            ...inputs,\r\n            [className] : value,\r\n        }\r\n        setInputs(nextInputs)\r\n    }\r\n    const onSubmitCreate = (e) => {\r\n        e.preventDefault();\r\n        const writerData = UserData;\r\n        // console.log('submit', title, body, UserData.userNickName);\r\n        dispatch(createPost({title, body, writerData}))\r\n        .then(res => {\r\n            history.push('/main/Internet/posts');\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            {/* <form action=\"/posts\" method=\"post\"> */}\r\n            <form onSubmit={onSubmitCreate}>\r\n                <div className=\"form_group\">\r\n                    <label htmlFor=\"title\">제목</label>\r\n                    <input type=\"text\" id=\"title\" name=\"title\" value={title} className=\"title\"\r\n                    onChange={onChange}/>\r\n                </div>\r\n                <div className=\"form_group\">\r\n                    <label htmlFor=\"body\">내용</label>\r\n                    <textarea id=\"body\" name=\"body\" rows=\"5\" value={body} className=\"body\"\r\n                    onChange={onChange}></textarea>\r\n                </div>\r\n                <div className=\"btn_group\">\r\n                    <Button type=\"submit\" className=\"btn btn_style\">제출</Button>\r\n                    <a className=\"btn btn_primary\" href=\"main/Internet/posts\"><Button>취소</Button></a>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(BoardCreate)\r\n","D:\\Kang Yejin\\gyerantalk_3\\frontend\\src\\api\\actions\\post_action.js",[],{"ruleId":"346","replacedBy":"347"},{"ruleId":"348","replacedBy":"349"},{"ruleId":"350","severity":1,"message":"351","line":6,"column":31,"nodeType":"352","messageId":"353","endLine":6,"endColumn":40},{"ruleId":"354","severity":1,"message":"355","line":100,"column":21,"nodeType":"356","endLine":100,"endColumn":72},{"ruleId":"354","severity":1,"message":"355","line":101,"column":50,"nodeType":"356","endLine":101,"endColumn":103},{"ruleId":"357","severity":1,"message":"358","line":5,"column":1,"nodeType":"359","endLine":44,"endColumn":2},{"ruleId":"360","severity":1,"message":"361","line":38,"column":12,"nodeType":"362","endLine":38,"endColumn":14,"suggestions":"363"},{"ruleId":"350","severity":1,"message":"364","line":5,"column":23,"nodeType":"352","messageId":"353","endLine":5,"endColumn":29},{"ruleId":"360","severity":1,"message":"365","line":32,"column":7,"nodeType":"362","endLine":32,"endColumn":9,"suggestions":"366"},{"ruleId":"360","severity":1,"message":"365","line":39,"column":8,"nodeType":"362","endLine":39,"endColumn":16,"suggestions":"367"},{"ruleId":"357","severity":1,"message":"358","line":5,"column":1,"nodeType":"359","endLine":16,"endColumn":2},{"ruleId":"357","severity":1,"message":"358","line":10,"column":1,"nodeType":"359","endLine":31,"endColumn":2},{"ruleId":"357","severity":1,"message":"358","line":5,"column":1,"nodeType":"359","endLine":16,"endColumn":2},{"ruleId":"350","severity":1,"message":"368","line":2,"column":7,"nodeType":"352","messageId":"353","endLine":2,"endColumn":21},{"ruleId":"357","severity":1,"message":"358","line":9,"column":1,"nodeType":"359","endLine":30,"endColumn":2},{"ruleId":"360","severity":1,"message":"369","line":42,"column":8,"nodeType":"362","endLine":42,"endColumn":40,"suggestions":"370"},{"ruleId":"350","severity":1,"message":"371","line":1,"column":38,"nodeType":"352","messageId":"353","endLine":1,"endColumn":49},{"ruleId":"350","severity":1,"message":"372","line":8,"column":22,"nodeType":"352","messageId":"353","endLine":8,"endColumn":33},{"ruleId":"350","severity":1,"message":"373","line":11,"column":10,"nodeType":"352","messageId":"353","endLine":11,"endColumn":23},{"ruleId":"360","severity":1,"message":"374","line":63,"column":7,"nodeType":"362","endLine":63,"endColumn":17,"suggestions":"375"},{"ruleId":"360","severity":1,"message":"376","line":74,"column":7,"nodeType":"362","endLine":74,"endColumn":19,"suggestions":"377"},{"ruleId":"360","severity":1,"message":"365","line":90,"column":8,"nodeType":"362","endLine":90,"endColumn":20,"suggestions":"378"},{"ruleId":"350","severity":1,"message":"368","line":4,"column":7,"nodeType":"352","messageId":"353","endLine":4,"endColumn":21},{"ruleId":"350","severity":1,"message":"379","line":1,"column":8,"nodeType":"352","messageId":"353","endLine":1,"endColumn":13},{"ruleId":"360","severity":1,"message":"380","line":27,"column":8,"nodeType":"362","endLine":27,"endColumn":10,"suggestions":"381"},{"ruleId":"354","severity":1,"message":"355","line":32,"column":17,"nodeType":"356","endLine":32,"endColumn":47},{"ruleId":"354","severity":1,"message":"355","line":11,"column":21,"nodeType":"356","endLine":11,"endColumn":49},{"ruleId":"350","severity":1,"message":"382","line":19,"column":36,"nodeType":"352","messageId":"353","endLine":19,"endColumn":41},{"ruleId":"350","severity":1,"message":"383","line":21,"column":12,"nodeType":"352","messageId":"353","endLine":21,"endColumn":17},{"ruleId":"360","severity":1,"message":"384","line":34,"column":8,"nodeType":"362","endLine":34,"endColumn":10,"suggestions":"385"},{"ruleId":"360","severity":1,"message":"386","line":44,"column":8,"nodeType":"362","endLine":44,"endColumn":18,"suggestions":"387"},{"ruleId":"360","severity":1,"message":"388","line":66,"column":7,"nodeType":"362","endLine":66,"endColumn":14,"suggestions":"389"},{"ruleId":"360","severity":1,"message":"365","line":72,"column":7,"nodeType":"362","endLine":72,"endColumn":13,"suggestions":"390"},{"ruleId":"360","severity":1,"message":"391","line":89,"column":8,"nodeType":"362","endLine":89,"endColumn":20,"suggestions":"392"},{"ruleId":"393","severity":1,"message":"394","line":92,"column":28,"nodeType":"395","messageId":"396","endLine":92,"endColumn":30},{"ruleId":"354","severity":1,"message":"355","line":126,"column":37,"nodeType":"356","endLine":126,"endColumn":91},{"ruleId":"354","severity":1,"message":"355","line":130,"column":37,"nodeType":"356","endLine":130,"endColumn":92},{"ruleId":"354","severity":1,"message":"355","line":148,"column":37,"nodeType":"356","endLine":148,"endColumn":86},{"ruleId":"354","severity":1,"message":"355","line":152,"column":37,"nodeType":"356","endLine":152,"endColumn":86},{"ruleId":"350","severity":1,"message":"397","line":13,"column":12,"nodeType":"352","messageId":"353","endLine":13,"endColumn":20},{"ruleId":"350","severity":1,"message":"398","line":16,"column":11,"nodeType":"352","messageId":"353","endLine":16,"endColumn":31},{"ruleId":"360","severity":1,"message":"365","line":28,"column":8,"nodeType":"362","endLine":28,"endColumn":32,"suggestions":"399"},{"ruleId":"354","severity":1,"message":"355","line":79,"column":17,"nodeType":"356","endLine":79,"endColumn":73},{"ruleId":"350","severity":1,"message":"400","line":12,"column":12,"nodeType":"352","messageId":"353","endLine":12,"endColumn":20},{"ruleId":"350","severity":1,"message":"401","line":12,"column":22,"nodeType":"352","messageId":"353","endLine":12,"endColumn":33},{"ruleId":"354","severity":1,"message":"355","line":67,"column":25,"nodeType":"356","endLine":67,"endColumn":44},{"ruleId":"350","severity":1,"message":"402","line":1,"column":8,"nodeType":"352","messageId":"353","endLine":1,"endColumn":13},{"ruleId":"360","severity":1,"message":"391","line":34,"column":8,"nodeType":"362","endLine":34,"endColumn":16,"suggestions":"403"},{"ruleId":"350","severity":1,"message":"404","line":1,"column":16,"nodeType":"352","messageId":"353","endLine":1,"endColumn":25},{"ruleId":"350","severity":1,"message":"372","line":3,"column":10,"nodeType":"352","messageId":"353","endLine":3,"endColumn":21},{"ruleId":"354","severity":1,"message":"355","line":15,"column":33,"nodeType":"356","endLine":15,"endColumn":65},{"ruleId":"354","severity":1,"message":"355","line":17,"column":37,"nodeType":"356","endLine":17,"endColumn":65},{"ruleId":"350","severity":1,"message":"379","line":1,"column":8,"nodeType":"352","messageId":"353","endLine":1,"endColumn":13},{"ruleId":"350","severity":1,"message":"405","line":6,"column":5,"nodeType":"352","messageId":"353","endLine":6,"endColumn":19},{"ruleId":"354","severity":1,"message":"355","line":9,"column":17,"nodeType":"356","endLine":9,"endColumn":45},{"ruleId":"360","severity":1,"message":"406","line":18,"column":8,"nodeType":"362","endLine":18,"endColumn":10,"suggestions":"407"},{"ruleId":"354","severity":1,"message":"355","line":29,"column":71,"nodeType":"356","endLine":29,"endColumn":108},{"ruleId":"354","severity":1,"message":"355","line":30,"column":71,"nodeType":"356","endLine":30,"endColumn":108},{"ruleId":"354","severity":1,"message":"355","line":31,"column":71,"nodeType":"356","endLine":31,"endColumn":108},{"ruleId":"354","severity":1,"message":"355","line":32,"column":71,"nodeType":"356","endLine":32,"endColumn":108},{"ruleId":"350","severity":1,"message":"408","line":2,"column":8,"nodeType":"352","messageId":"353","endLine":2,"endColumn":14},{"ruleId":"350","severity":1,"message":"409","line":3,"column":8,"nodeType":"352","messageId":"353","endLine":3,"endColumn":15},{"ruleId":"350","severity":1,"message":"410","line":13,"column":25,"nodeType":"352","messageId":"353","endLine":13,"endColumn":29},{"ruleId":"354","severity":1,"message":"355","line":26,"column":29,"nodeType":"356","endLine":26,"endColumn":73},{"ruleId":"350","severity":1,"message":"411","line":8,"column":12,"nodeType":"352","messageId":"353","endLine":8,"endColumn":17},{"ruleId":"350","severity":1,"message":"412","line":8,"column":19,"nodeType":"352","messageId":"353","endLine":8,"endColumn":27},{"ruleId":"350","severity":1,"message":"413","line":11,"column":31,"nodeType":"352","messageId":"353","endLine":11,"endColumn":36},{"ruleId":"350","severity":1,"message":"414","line":31,"column":11,"nodeType":"352","messageId":"353","endLine":31,"endColumn":15},{"ruleId":"354","severity":1,"message":"355","line":37,"column":17,"nodeType":"356","endLine":37,"endColumn":88},{"ruleId":"360","severity":1,"message":"415","line":29,"column":8,"nodeType":"362","endLine":29,"endColumn":10,"suggestions":"416"},{"ruleId":"354","severity":1,"message":"355","line":32,"column":13,"nodeType":"356","endLine":32,"endColumn":51},{"ruleId":"350","severity":1,"message":"417","line":18,"column":12,"nodeType":"352","messageId":"353","endLine":18,"endColumn":20},{"ruleId":"360","severity":1,"message":"365","line":50,"column":8,"nodeType":"362","endLine":50,"endColumn":50,"suggestions":"418"},{"ruleId":"360","severity":1,"message":"419","line":65,"column":8,"nodeType":"362","endLine":65,"endColumn":25,"suggestions":"420"},{"ruleId":"360","severity":1,"message":"391","line":69,"column":8,"nodeType":"362","endLine":69,"endColumn":13,"suggestions":"421"},{"ruleId":"354","severity":1,"message":"355","line":77,"column":25,"nodeType":"356","endLine":77,"endColumn":48},{"ruleId":"360","severity":1,"message":"422","line":22,"column":7,"nodeType":"352","endLine":22,"endColumn":11},{"ruleId":"360","severity":1,"message":"423","line":22,"column":7,"nodeType":"352","endLine":22,"endColumn":11,"suggestions":"424"},{"ruleId":"350","severity":1,"message":"425","line":2,"column":10,"nodeType":"352","messageId":"353","endLine":2,"endColumn":14},{"ruleId":"360","severity":1,"message":"426","line":20,"column":8,"nodeType":"362","endLine":20,"endColumn":29,"suggestions":"427"},{"ruleId":"360","severity":1,"message":"428","line":24,"column":8,"nodeType":"362","endLine":24,"endColumn":30,"suggestions":"429"},{"ruleId":"350","severity":1,"message":"413","line":13,"column":31,"nodeType":"352","messageId":"353","endLine":13,"endColumn":36},{"ruleId":"350","severity":1,"message":"430","line":1,"column":17,"nodeType":"352","messageId":"353","endLine":1,"endColumn":25},{"ruleId":"354","severity":1,"message":"355","line":73,"column":25,"nodeType":"356","endLine":73,"endColumn":103},{"ruleId":"350","severity":1,"message":"431","line":10,"column":19,"nodeType":"352","messageId":"353","endLine":10,"endColumn":27},{"ruleId":"360","severity":1,"message":"432","line":48,"column":8,"nodeType":"362","endLine":48,"endColumn":10,"suggestions":"433"},{"ruleId":"350","severity":1,"message":"404","line":1,"column":16,"nodeType":"352","messageId":"353","endLine":1,"endColumn":25},{"ruleId":"350","severity":1,"message":"434","line":7,"column":20,"nodeType":"352","messageId":"353","endLine":7,"endColumn":31},{"ruleId":"354","severity":1,"message":"355","line":18,"column":29,"nodeType":"356","endLine":18,"endColumn":53},{"ruleId":"350","severity":1,"message":"425","line":3,"column":10,"nodeType":"352","messageId":"353","endLine":3,"endColumn":14},{"ruleId":"350","severity":1,"message":"435","line":4,"column":10,"nodeType":"352","messageId":"353","endLine":4,"endColumn":21},{"ruleId":"360","severity":1,"message":"436","line":60,"column":7,"nodeType":"362","endLine":60,"endColumn":14,"suggestions":"437"},{"ruleId":"354","severity":1,"message":"355","line":83,"column":13,"nodeType":"356","endLine":83,"endColumn":91},{"ruleId":"354","severity":1,"message":"355","line":88,"column":19,"nodeType":"356","endLine":88,"endColumn":65},{"ruleId":"354","severity":1,"message":"355","line":91,"column":13,"nodeType":"356","endLine":91,"endColumn":98},{"ruleId":"360","severity":1,"message":"438","line":24,"column":8,"nodeType":"362","endLine":24,"endColumn":19,"suggestions":"439"},{"ruleId":"354","severity":1,"message":"355","line":39,"column":17,"nodeType":"356","endLine":39,"endColumn":80},{"ruleId":"360","severity":1,"message":"440","line":30,"column":8,"nodeType":"362","endLine":30,"endColumn":19,"suggestions":"441"},{"ruleId":"350","severity":1,"message":"442","line":46,"column":15,"nodeType":"352","messageId":"353","endLine":46,"endColumn":21},{"ruleId":"360","severity":1,"message":"365","line":20,"column":8,"nodeType":"362","endLine":20,"endColumn":22,"suggestions":"443"},{"ruleId":"354","severity":1,"message":"355","line":34,"column":58,"nodeType":"356","endLine":34,"endColumn":121},{"ruleId":"350","severity":1,"message":"444","line":10,"column":11,"nodeType":"352","messageId":"353","endLine":10,"endColumn":20},"no-native-reassign",["445"],"no-negated-in-lhs",["446"],"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["447"],"'Avatar' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["448"],["449"],"'SOCKET_RECEIVE' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'UserData._id' and 'dispatch'. Either include them or remove the dependency array.",["450"],"'useCallback' is defined but never used.","'useSelector' is defined but never used.","'alreadyFriend' is defined but never used.","React Hook useEffect has missing dependencies: 'ClickEvent', 'checktUpdate', and 'setchecktUpdate'. Either include them or remove the dependency array. If 'setchecktUpdate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["451"],"React Hook useEffect has missing dependencies: 'UserData.userId' and 'dispatch'. Either include them or remove the dependency array.",["452"],["453"],"'axios' is defined but never used.","React Hook useEffect has missing dependencies: 'data' and 'dispatch'. Either include them or remove the dependency array.",["454"],"'setId' is assigned a value but never used.","'Write' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'UserData._id', 'checktUpdate', 'roomId', and 'setchecktUpdate'. Either include them or remove the dependency array. If 'setchecktUpdate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["455"],"React Hook useEffect has missing dependencies: 'checktUpdate', 'roomId', and 'setchecktUpdate'. Either include them or remove the dependency array. If 'setchecktUpdate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["456"],"React Hook useEffect has missing dependencies: 'checkMembers' and 'dispatch'. Either include them or remove the dependency array.",["457"],["458"],"React Hook useEffect has missing dependencies: 'checktUpdate' and 'setchecktUpdate'. Either include them or remove the dependency array. If 'setchecktUpdate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["459"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'roomName' is assigned a value but never used.","'handleRoomNameChange' is assigned a value but never used.",["460"],"'FilePath' is assigned a value but never used.","'setFilePath' is assigned a value but never used.","'React' is defined but never used.",["461"],"'useEffect' is defined but never used.","'SearchOutlined' is defined but never used.","React Hook useEffect has a missing dependency: 'UserData'. Either include it or remove the dependency array.",["462"],"'client' is defined but never used.","'cheerio' is defined but never used.","'data' is assigned a value but never used.","'state' is assigned a value but never used.","'setstate' is assigned a value but never used.","'error' is assigned a value but never used.","'open' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["463"],"'MatchUrl' is assigned a value but never used.",["464"],"React Hook useEffect has missing dependencies: 'UserData._id', 'chat', and 'dispatch'. Either include them or remove the dependency array.",["465"],["466"],"React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'promiseCreator'. Either include it or remove the dependency array. If 'promiseCreator' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["467"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'selection'. Either include it or remove the dependency array.",["468"],"React Hook useEffect has a missing dependency: 'process'. Either include it or remove the dependency array.",["469"],"'useState' is defined but never used.","'setState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'customerId' and 'state'. Either include them or remove the dependency array.",["470"],"'description' is assigned a value but never used.","'useDispatch' is defined but never used.","React Hook useEffect has a missing dependency: 'UserData.userId'. Either include it or remove the dependency array.",["471"],"React Hook useEffect has missing dependencies: 'UserData', 'dispatch', and 'post'. Either include them or remove the dependency array.",["472"],"React Hook useEffect has missing dependencies: 'UserData', 'dispatch', and 'process'. Either include them or remove the dependency array.",["473"],"'Writer' is assigned a value but never used.",["474"],"'selection' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"475","fix":"476"},{"desc":"477","fix":"478"},{"desc":"479","fix":"480"},{"desc":"481","fix":"482"},{"desc":"483","fix":"484"},{"desc":"485","fix":"486"},{"desc":"487","fix":"488"},{"desc":"489","fix":"490"},{"desc":"491","fix":"492"},{"desc":"493","fix":"494"},{"desc":"495","fix":"496"},{"desc":"497","fix":"498"},{"desc":"499","fix":"500"},{"desc":"501","fix":"502"},{"desc":"503","fix":"504"},{"desc":"505","fix":"506"},{"desc":"507","fix":"508"},{"desc":"509","fix":"510"},{"desc":"511","fix":"512"},{"desc":"513","fix":"514"},{"desc":"515","fix":"516"},{"desc":"517","fix":"518"},{"desc":"519","fix":"520"},{"desc":"521","fix":"522"},{"desc":"523","fix":"524"},{"desc":"525","fix":"526"},{"desc":"527","fix":"528"},{"desc":"529","fix":"530"},"Update the dependencies array to be: [dispatch, props.history]",{"range":"531","text":"532"},"Update the dependencies array to be: [dispatch]",{"range":"533","text":"534"},"Update the dependencies array to be: [Update, dispatch]",{"range":"535","text":"536"},"Update the dependencies array to be: [checktUpdate, data, Messages, UserData._id, dispatch]",{"range":"537","text":"538"},"Update the dependencies array to be: [ClickEvent, UserData, checktUpdate, setchecktUpdate]",{"range":"539","text":"540"},"Update the dependencies array to be: [ClickEvent, UserData.userId, dispatch]",{"range":"541","text":"542"},"Update the dependencies array to be: [InputText2, dispatch]",{"range":"543","text":"544"},"Update the dependencies array to be: [data, dispatch]",{"range":"545","text":"546"},"Update the dependencies array to be: [UserData._id, checktUpdate, roomId, setchecktUpdate]",{"range":"547","text":"548"},"Update the dependencies array to be: [UserData, checktUpdate, roomId, setchecktUpdate]",{"range":"549","text":"550"},"Update the dependencies array to be: [checkMembers, dispatch, match]",{"range":"551","text":"552"},"Update the dependencies array to be: [Body, dispatch]",{"range":"553","text":"554"},"Update the dependencies array to be: [checktUpdate, newMessage, setchecktUpdate]",{"range":"555","text":"556"},"Update the dependencies array to be: [UserData, checktUpdate, dispatch]",{"range":"557","text":"558"},"Update the dependencies array to be: [checktUpdate, roomId, setchecktUpdate]",{"range":"559","text":"560"},"Update the dependencies array to be: [UserData]",{"range":"561","text":"562"},"Update the dependencies array to be: [data]",{"range":"563","text":"564"},"Update the dependencies array to be: [UserData, chat, Messages, checktUpdate, dispatch]",{"range":"565","text":"566"},"Update the dependencies array to be: [Messages, Fri, chat, UserData._id, dispatch]",{"range":"567","text":"568"},"Update the dependencies array to be: [Num, checktUpdate, setchecktUpdate]",{"range":"569","text":"570"},"Update the dependencies array to be: [promiseCreator]",{"range":"571","text":"572"},"Update the dependencies array to be: [match.params.select, selection]",{"range":"573","text":"574"},"Update the dependencies array to be: [match.params.process, process]",{"range":"575","text":"576"},"Update the dependencies array to be: [customerId, state]",{"range":"577","text":"578"},"Update the dependencies array to be: [UserData.userId, state]",{"range":"579","text":"580"},"Update the dependencies array to be: [UserData, dispatch, post, selection]",{"range":"581","text":"582"},"Update the dependencies array to be: [UserData, dispatch, process, selection]",{"range":"583","text":"584"},"Update the dependencies array to be: [dispatch, match.params]",{"range":"585","text":"586"},[1182,1184],"[dispatch, props.history]",[965,967],"[dispatch]",[1116,1124],"[Update, dispatch]",[1689,1721],"[checktUpdate, data, Messages, UserData._id, dispatch]",[2102,2112],"[ClickEvent, UserData, checktUpdate, setchecktUpdate]",[2343,2355],"[ClickEvent, UserData.userId, dispatch]",[2710,2722],"[InputText2, dispatch]",[709,711],"[data, dispatch]",[1262,1264],"[UserData._id, checktUpdate, roomId, setchecktUpdate]",[1496,1506],"[UserData, checktUpdate, roomId, setchecktUpdate]",[2154,2161],"[checkMembers, dispatch, match]",[2323,2329],"[Body, dispatch]",[2750,2762],"[checktUpdate, newMessage, setchecktUpdate]",[862,886],"[UserData, checktUpdate, dispatch]",[1034,1042],"[checktUpdate, roomId, setchecktUpdate]",[573,575],"[UserData]",[820,822],"[data]",[1839,1881],"[UserData, chat, Messages, checktUpdate, dispatch]",[2271,2288],"[Messages, Fri, chat, UserData._id, dispatch]",[2363,2368],"[Num, checktUpdate, setchecktUpdate]",[664,668],"[promiseCreator]",[816,837],"[match.params.select, selection]",[953,975],"[match.params.process, process]",[1754,1756],"[customerId, state]",[2119,2126],"[UserData.userId, state]",[788,799],"[UserData, dispatch, post, selection]",[936,947],"[UserData, dispatch, process, selection]",[679,693],"[dispatch, match.params]"]
>>>>>>> b1f339e5c8ea11e3e822297c1dc10932041eafc7
