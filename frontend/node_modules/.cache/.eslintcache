[{"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\index.js":"1","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\App.js":"3","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\index.js":"4","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LoginPage.js":"5","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\auth\\auth.js":"6","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\RegisterPage.js":"7","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\MainPage\\Main.js":"8","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\user_reducer.js":"9","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\friend_reducer.js":"10","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\socket_reducer.js":"11","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\chat_reducer.js":"12","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\main_action.js":"13","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\user_action.js":"14","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\friend_action.js":"15","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\LeftPage.js":"16","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\FriendList.js":"17","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\ChatList\\Chat.js":"18","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Internet.js":"19","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\ViewFriend\\ViewFriend.js":"20","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatingRoom.js":"21","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatingList.js":"22","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\UpdateUser\\UpdateUser.js":"23","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\ShowFriend\\ShowFriend.js":"24","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\SearchFriend.js":"25","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\MyProfile\\MyProfile.js":"26","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\PlusFriend.js":"27","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\Title\\LeftTitle.js":"28","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\socket_action.js":"29","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\AddBaner.js":"30","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatTitle.js":"31","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\useChat.js":"32","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\chat_action.js":"33","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\News\\News.js":"34","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\ChatList\\Sections\\ChatCard.js":"35","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\IntTitle\\IntTitle.js":"36","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\Shop.js":"37","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\News\\NewsItem.js":"38","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\ShopItem.js":"39","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\usePromise.js":"40","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Options\\Options.js":"41","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatItem.js":"42","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Options\\option\\Weather.js":"43","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\Board.js":"44","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardList.js":"45","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardDetail.js":"46","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\post_action.js":"47","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardCreate.js":"48","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardUpdate.js":"49","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\PayResult.js":"50","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\TV\\TV.js":"51"},{"size":1062,"mtime":1619226324989,"results":"52","hashOfConfig":"53"},{"size":375,"mtime":1619140719705,"results":"54","hashOfConfig":"53"},{"size":858,"mtime":1620109402521,"results":"55","hashOfConfig":"53"},{"size":313,"mtime":1619762747619,"results":"56","hashOfConfig":"53"},{"size":3924,"mtime":1619570231922,"results":"57","hashOfConfig":"53"},{"size":1439,"mtime":1619510145370,"results":"58","hashOfConfig":"53"},{"size":11771,"mtime":1619414164914,"results":"59","hashOfConfig":"53"},{"size":1740,"mtime":1620006631572,"results":"60","hashOfConfig":"53"},{"size":1108,"mtime":1619667037793,"results":"61","hashOfConfig":"53"},{"size":475,"mtime":1620131046942,"results":"62","hashOfConfig":"53"},{"size":1112,"mtime":1620109402523,"results":"63","hashOfConfig":"53"},{"size":527,"mtime":1620006631565,"results":"64","hashOfConfig":"53"},{"size":266,"mtime":1619357976694,"results":"65","hashOfConfig":"53"},{"size":1900,"mtime":1619667037791,"results":"66","hashOfConfig":"53"},{"size":837,"mtime":1620131056140,"results":"67","hashOfConfig":"53"},{"size":3947,"mtime":1620123705027,"results":"68","hashOfConfig":"53"},{"size":3996,"mtime":1620131032081,"results":"69","hashOfConfig":"53"},{"size":5345,"mtime":1619743203142,"results":"70","hashOfConfig":"53"},{"size":712,"mtime":1620123705022,"results":"71","hashOfConfig":"53"},{"size":1219,"mtime":1620006631571,"results":"72","hashOfConfig":"53"},{"size":7223,"mtime":1620125021821,"results":"73","hashOfConfig":"53"},{"size":1915,"mtime":1620123705030,"results":"74","hashOfConfig":"53"},{"size":2906,"mtime":1620089951775,"results":"75","hashOfConfig":"53"},{"size":1303,"mtime":1619794870536,"results":"76","hashOfConfig":"53"},{"size":1965,"mtime":1620132089093,"results":"77","hashOfConfig":"53"},{"size":638,"mtime":1619794870536,"results":"78","hashOfConfig":"53"},{"size":606,"mtime":1620123705019,"results":"79","hashOfConfig":"53"},{"size":1591,"mtime":1620125359297,"results":"80","hashOfConfig":"53"},{"size":1858,"mtime":1620109402522,"results":"81","hashOfConfig":"53"},{"size":995,"mtime":1620123705028,"results":"82","hashOfConfig":"53"},{"size":337,"mtime":1619794870538,"results":"83","hashOfConfig":"53"},{"size":1708,"mtime":1620123705031,"results":"84","hashOfConfig":"53"},{"size":983,"mtime":1620006631564,"results":"85","hashOfConfig":"53"},{"size":1207,"mtime":1619953801175,"results":"86","hashOfConfig":"53"},{"size":1587,"mtime":1619677919303,"results":"87","hashOfConfig":"53"},{"size":865,"mtime":1620123705022,"results":"88","hashOfConfig":"53"},{"size":3457,"mtime":1620123705025,"results":"89","hashOfConfig":"53"},{"size":1238,"mtime":1619825689844,"results":"90","hashOfConfig":"53"},{"size":3597,"mtime":1620123705026,"results":"91","hashOfConfig":"53"},{"size":742,"mtime":1619494448298,"results":"92","hashOfConfig":"53"},{"size":3326,"mtime":1620125958799,"results":"93","hashOfConfig":"53"},{"size":3653,"mtime":1620127336349,"results":"94","hashOfConfig":"53"},{"size":1653,"mtime":1620089951771,"results":"95","hashOfConfig":"53"},{"size":1423,"mtime":1620089951763,"results":"96","hashOfConfig":"53"},{"size":1996,"mtime":1620123705021,"results":"97","hashOfConfig":"53"},{"size":2199,"mtime":1620123705020,"results":"98","hashOfConfig":"53"},{"size":1462,"mtime":1620089951759,"results":"99","hashOfConfig":"53"},{"size":2127,"mtime":1620089951967,"results":"100","hashOfConfig":"53"},{"size":2517,"mtime":1620089951766,"results":"101","hashOfConfig":"53"},{"size":2080,"mtime":1620123705023,"results":"102","hashOfConfig":"53"},{"size":140,"mtime":1620123705026,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"c8e9fu",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"106"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"106"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"106"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"106"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"106"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"106"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"106"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"148","usedDeprecatedRules":"106"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"106"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"106"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"106"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"106"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"106"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"106"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"106"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"106"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"106"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"106"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"106"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"106"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\index.js",[],["228","229"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\App.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\index.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LoginPage.js",["230","231","232"],"import React, {useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport { loginUser } from '../api/actions/user_action';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { Grid, Paper, Avatar, TextField, Button, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    customTextField: {\r\n      \"& input::placeholder\": {\r\n        color : '#fff',\r\n        fontWeight : 'bolder'\r\n      }\r\n    }\r\n})\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [UserId, setUserId] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n\r\n    const onUserIdHandler = (e) => {\r\n        setUserId(e.target.value);\r\n    }\r\n    const onPasswordHandler = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        let body = {\r\n            userId : UserId,\r\n            password : Password,\r\n        }\r\n\r\n        dispatch(loginUser(body))\r\n        .then(response => {\r\n            if(response.payload.loginSuccess){\r\n                props.history.push('/main/FriendList');\r\n            }else{\r\n                alert('Error');\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const paperStyle = {\r\n        padding : 20,\r\n        height : '568px',\r\n        width : 280,\r\n        margin : '0 auto',\r\n        textAlign : 'center',\r\n        background : '#f6bd63',\r\n        position: 'absolute',\r\n        top:'50%',\r\n        left:'50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    }\r\n    const avatarStyle = {\r\n        width : '230px',\r\n        height : '90px',\r\n        margin: '10px 0 30px',\r\n        background : '#f6bd63',\r\n    }\r\n    const btnstyle = {\r\n        margin : '8px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#845460'\r\n    }\r\n    const imgstyle ={\r\n        width : '100%',\r\n        height : '100%',\r\n    }\r\n    const logostyle ={\r\n        width: '200px',\r\n        marginTop: '50px',\r\n    }\r\n    const inputstyle ={\r\n        width : '90%',\r\n        margin : '0 auto',\r\n        height : '30px',\r\n        marginBottom : '20px',\r\n        background : '#855460',\r\n        color : '#fff'\r\n    }\r\n    const linkstyle ={\r\n        color : '#fff',\r\n        fontWeight : 'bolder',\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid>\r\n            <Paper elevation={10} style={paperStyle} classes={{root:classes.customTextField}}>\r\n                <Grid align=\"center\">\r\n                    <img src=\"/text_transparent.png\" style={logostyle}></img>\r\n                    <Avatar style={avatarStyle} ><img src=\"/gyeran_height_cut.png\" style={imgstyle} /></Avatar>\r\n\r\n                </Grid>\r\n                <form onSubmit={onSubmitHandler}>\r\n                    <input style={inputstyle} type=\"text\" label=\"UserId\" placeholder=\"Enter UserId\" value={UserId} onChange={onUserIdHandler} required/>\r\n                    <input style={inputstyle} type=\"password\" label=\"Password\" placeholder=\"Enter Password\" value={Password} onChange={onPasswordHandler} required/>\r\n                    {/* <FormControlLabel \r\n                        control={\r\n                            <Checkbox\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Remember Me\"\r\n                    /> */}\r\n                    <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>Sign in</Button>\r\n                </form>\r\n                <Typography>\r\n                    <Link to=\"/register\" style={linkstyle}>\r\n                        Sign up\r\n                    </Link>\r\n                </Typography>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\auth\\auth.js",["233","234"],"import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { auth } from '../actions/user_action';\r\n\r\nexport default function(SpecificComponent, option, adminRoute = null){\r\n\r\n    // option\r\n    // null => 아무나 출입이 가능한 페이지\r\n    // true => 로그인한 유저만 출입이 가능한 페이지\r\n    // false => 로그인한 유저는 출입 불가능한 페이지\r\n\r\n    // adminRoute는 true가 되면 어드민 유저만 가능하다.\r\n    \r\n    function AuthenticationCheck(props){\r\n        \r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(()=>{\r\n            \r\n            dispatch(auth()).then(response => {\r\n\r\n                // 로그인 하지 않은 상태\r\n                if(!response.payload.isAuth){\r\n                    if(option){\r\n                        props.history.push('/');\r\n                    }\r\n                }else{\r\n                    // 로그인 한 상태\r\n                    if(adminRoute && !response.payload.isAdmin){\r\n                        props.history.push('/main/FriendList')\r\n                    }else{\r\n                        if(option === false){\r\n                            props.history.push('/main/FriendList');\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }, [])\r\n        return (\r\n            <SpecificComponent />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\RegisterPage.js",["235"],"import React, { useState, useEffect } from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport { registerUser, checkId, checkNick, checkPhone } from '../api/actions/user_action';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Grid, Paper, Avatar, FormControlLabel, Checkbox, TextField, Button, Typography } from '@material-ui/core';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [UserId, setUserId] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n    const [ConfirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [NickName, setNickName] = useState(\"\");\r\n    const [Name, setName] = useState(\"\");\r\n    const [Phone, setPhone] = useState(\"\");\r\n    const [checkPassword, setcheckPassword] = useState(true);\r\n    const [NoticeId, setNoticeId] = useState(\"\");\r\n    const [NoticeNick, setNoticeNick] = useState(\"\");\r\n    const [NoticePhone, setNoticePhone] = useState(\"\");\r\n    // const [Checking, setChecking] = useState(0);\r\n    const [isCheckedId, setisCheckedId] = useState(false);\r\n    const [isCheckedNick, setisCheckedNick] = useState(false);\r\n    const [isCheckedPhone, setisCheckedPhone] = useState(false);\r\n    const [isCheckedPassword, setisCheckedPassword] = useState(false);\r\n\r\n\r\n    const onUserIdHandler = (e) => {\r\n        setUserId(e.target.value);\r\n    }\r\n    const onPasswordHandler = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n    const onPasswordHandler2 = (e) => {\r\n        setConfirmPassword(e.target.value);\r\n    }\r\n    const onNickNameHandler = (e) => {\r\n        setNickName(e.target.value);\r\n    }\r\n    const onNameHandler = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n    const onPhoneHandler = (e) => {\r\n        const regex = /^[0-9\\b -]{0,13}$/;\r\n        if (regex.test(e.target.value)){\r\n            setPhone(e.target.value);\r\n        }\r\n    }\r\n    const onCheckIdHandler = (e) => {\r\n\r\n        e.preventDefault();\r\n        let body = {\r\n            userId : UserId,\r\n        }\r\n\r\n        dispatch(checkId(body))\r\n        .then(response => {\r\n            setNoticeId(response.payload.message);\r\n            if(response.payload.checkId){\r\n                setisCheckedId(true)\r\n            } else {\r\n                setisCheckedId(false)\r\n            }\r\n        })\r\n    }\r\n    const onCheckNick = (e) => {\r\n        \r\n        e.preventDefault();\r\n        let body = {\r\n            userNickName : NickName,\r\n        }\r\n\r\n        dispatch(checkNick(body))\r\n        .then(response => {\r\n            setNoticeNick(response.payload.message);\r\n            if(response.payload.checkNick){\r\n                setisCheckedNick(true)\r\n            } else {\r\n                setisCheckedNick(false)\r\n            }\r\n        })\r\n    }\r\n    const onCheckPhone = (e) => {\r\n        \r\n        e.preventDefault();\r\n        let body = {\r\n            userPhone : Phone,\r\n        }\r\n\r\n        dispatch(checkPhone(body))\r\n        .then(response => {\r\n            setNoticePhone(response.payload.message);\r\n            if(response.payload.checkPhone){\r\n                setisCheckedPhone(true)\r\n            } else {\r\n                setisCheckedPhone(false)\r\n            }\r\n        })\r\n    }\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        let body = {\r\n            userId : UserId,\r\n            password : Password,\r\n            userNickName : NickName,\r\n            userName : Name,\r\n            userPhone : Phone,\r\n        }\r\n        dispatch(registerUser(body))\r\n        .then(response => {\r\n            if(response.payload.success){\r\n                props.history.push(\"/\");\r\n            }else{\r\n                alert(\"Failed to sign up\");\r\n            }\r\n        })\r\n    }\r\n\r\n    const paperStyle ={\r\n        padding : 20,\r\n        height : '650px',\r\n        width : 280,\r\n        margin : '20px auto',\r\n        // textAlign : 'center',\r\n        position: 'absolute',\r\n        top:'50%',\r\n        left:'50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n    const hrstyle ={\r\n        backgroundColor : 'gray',\r\n        height : '1px'\r\n    }\r\n    const divstyle1 ={\r\n        paddingLeft: '12.5px',\r\n        marginTop: '20px',\r\n    }\r\n    const divstyle2 ={\r\n        marginTop: '10px',\r\n        fontSize: '12px',\r\n    }\r\n    const textStyle1 ={\r\n        width : 175,\r\n        marginBottom : '10px',\r\n    }\r\n    const textStyle2 ={\r\n        width : 250,\r\n        marginBottom : '10px',\r\n    }\r\n    const btnstyle ={\r\n        margin : '18px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#845460'\r\n    }\r\n    const btnstyle2 ={\r\n        margin : '8px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#f6bd63',\r\n        width : '80px',\r\n        height : '40px',\r\n        borderRadius : '15px 15px',\r\n        border : 'none',\r\n        cursor : 'pointer',\r\n    }\r\n    const disablestyle ={\r\n        margin : '18px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : 'rgb(189, 189, 189)',\r\n    }\r\n    const pstyle ={\r\n        margin : '0 0',\r\n        fontWeight : 'bolder',\r\n        fontSize : '10px',\r\n    }\r\n    const linkstyle ={\r\n        color : 'inherit',\r\n    }\r\n    const spanstyle ={\r\n        fontSize : '25px',\r\n        fontWeight : 'bolder',\r\n        marginLeft : '70px',\r\n    }\r\n\r\n    useEffect(()=>{\r\n        // if(Password !== ConfirmPassword){\r\n        //     setcheckPassword(false);\r\n        // }else{\r\n        //     setcheckPassword(true);\r\n        // }\r\n        if(Password.length === 0 && ConfirmPassword.length === 0){\r\n            setcheckPassword(true);\r\n            setisCheckedPassword(false);\r\n        }else if(Password.length < 5 && ConfirmPassword.length < 5){\r\n            setcheckPassword(false);\r\n            setisCheckedPassword(false);\r\n        }else if(Password !== ConfirmPassword){\r\n            setcheckPassword(false);\r\n            setisCheckedPassword(false);\r\n        }else{\r\n            setcheckPassword(true);\r\n            setisCheckedPassword(true);\r\n        }\r\n    },[Password, ConfirmPassword])\r\n\r\n    useEffect(()=>{\r\n        if(Phone.length === 11) {\r\n            setPhone(Phone.replace(/-/g,'').replace(/(\\d{3})(\\d{4})(\\d{4})/, '$1-$2-$3'));\r\n        }\r\n    }, [Phone]);\r\n\r\n    return (\r\n        <Grid>\r\n            <Paper elevation={10} style={paperStyle} >\r\n                <Grid align=\"left\">\r\n                    <Typography>\r\n                        <Link to=\"/\" style={linkstyle}>\r\n                            <ArrowBackIosIcon />\r\n                        </Link>\r\n                        <span style={spanstyle}>회원가입</span>\r\n                    </Typography>\r\n                </Grid>\r\n                <hr style={hrstyle}/>\r\n                <form onSubmit={onSubmitHandler}>\r\n                    <div style={divstyle1}>\r\n                        <TextField style={textStyle1} id=\"standard-basic\" label=\"아이디\" type=\"text\" value={UserId} onChange={onUserIdHandler} />\r\n                        <button type=\"submit\" style={btnstyle2} onClick={onCheckIdHandler}>중복확인</button>\r\n                        {NoticeId.length !== 0 ? <p style={pstyle}>{NoticeId}</p> : null}\r\n                        {checkPassword === true ? <TextField style={textStyle2} id=\"standard-basic\" label=\"비밀번호\" type=\"password\" value={Password} onChange={onPasswordHandler} /> : <TextField error id=\"standard-error-helper-text\" label=\"비밀번호\" type=\"password\" value={Password} onChange={onPasswordHandler} helperText=\"Incorrect entry.\" />}\r\n                        {checkPassword === true ? <TextField style={textStyle2} id=\"standard-basic\" label=\"비밀번호확인\" type=\"password\" value={ConfirmPassword} onChange={onPasswordHandler2} /> : <TextField error id=\"standard-error-helper-text\" label=\"비밀번호확인\" type=\"password\" value={ConfirmPassword} onChange={onPasswordHandler2} helperText=\"최소 5자리 이상 조합\"/>}\r\n                        <TextField style={textStyle1} id=\"standard-basic\" label=\"닉네임\" type=\"text\" value={NickName} onChange={onNickNameHandler} />\r\n                        <button type=\"submit\" style={btnstyle2} onClick={onCheckNick}>중복확인</button>\r\n                        {NoticeNick.length !== 0 ? <p style={pstyle}>{NoticeNick}</p> : null}\r\n                        <TextField style={textStyle2} id=\"standard-basic\" label=\"이름\" type=\"text\" value={Name} onChange={onNameHandler} />\r\n                        <TextField style={textStyle1} id=\"standard-basic\" label=\"휴대폰번호\" type=\"text\" value={Phone} onChange={onPhoneHandler} />\r\n                        <button type=\"submit\" style={btnstyle2} onClick={onCheckPhone}>중복확인</button>\r\n                        {NoticePhone.length !== 0 ? <p style={pstyle}>{NoticePhone}</p> : null}\r\n\r\n                        <div style={divstyle2}>\r\n                            {/* <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                // label=\"모두 동의합니다\"\r\n                            />\r\n                            모두 동의합니다.<br/> */}\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                        required\r\n                                    />\r\n                                }\r\n                                label=\"이용약관 동의\"\r\n                            />\r\n                            {/* 이용약관 동의<br/> */}\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                        required\r\n                                    />\r\n                                }\r\n                                label=\"개인정보 취급방침 동의\"\r\n                            />\r\n                            {/* 개인정보 취급방침 동의<br/> */}\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                        required\r\n                                    />\r\n                                }\r\n                                label=\"마케팅 정보 수신 동의\"\r\n                            />\r\n                            {/* 마케팅 정보 수신 동의<br/> */}\r\n                        </div>\r\n                    </div>\r\n                    {/* {Checking >= 4 ? <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>Sign up</Button> : <Button disabled style={disablestyle} variant=\"contained\" fullWidth>Sign up</Button>} */}\r\n                    {isCheckedId && isCheckedNick && isCheckedPhone && isCheckedPassword ? <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>Sign up</Button> : <Button disabled style={disablestyle} variant=\"contained\" fullWidth>Sign up</Button>}\r\n                    \r\n                </form>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\MainPage\\Main.js",["236","237","238","239"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './Main.scss';\r\nimport LeftPage from '../LeftPage/LeftPage';\r\nimport { getUser } from '../../api/actions/main_action';\r\nimport { getFriendList } from '../../api/actions/friend_action';\r\n\r\nconst Main = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [UserData, setUserData] = useState(\"\");\r\n    // const [ListFriend, setListFriend] = useState(\"\");\r\n    const [Update, setUpdate] = useState(false);\r\n\r\n    const onClickHandler = () =>{\r\n        axios.get('/api/users/logout')\r\n        .then(response => {\r\n            if(response.data.success){\r\n                props.history.push(\"/\");\r\n            }else{\r\n                alert('로그아웃 하는데 실패 했습니다.');\r\n            }\r\n        })\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        dispatch(getUser())\r\n        .then(response => {\r\n            setUserData(response.payload);\r\n        })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        dispatch(getUser())\r\n        .then(response => {\r\n            setUserData(response.payload);\r\n        })\r\n    }, [Update])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"box\">\r\n                <LeftPage props={props} UserData={UserData} Update={Update} setUpdate={setUpdate}/>\r\n                {/* <div className=\"right_side\">\r\n                    dddd\r\n                </div> */}\r\n                {/* <button style={{marginLeft:'10px'}} onClick={onClickHandler}>\r\n                    로그아웃\r\n                </button> */}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(Main);","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\user_reducer.js",["240"],"const LOGIN_USER = \"login_user\";\r\nconst REGISTER_USER = \"register_user\";\r\nconst AUTH_USER = \"auth_user\";\r\nconst CHECK_ID = 'checkid_user';\r\nconst CHECK_NICK = 'checknick_user';\r\nconst GET_USER = \"get_user\";\r\nconst CHECK_PHONE = 'checkphone_user';\r\nconst UPDATE_USER = 'update_user';\r\n\r\nexport default function(state={}, action){\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return { ...state, loginSuccess : action.payload };\r\n        case REGISTER_USER:\r\n            return {...state, register : action.payload };\r\n        case AUTH_USER:\r\n            return {...state, userData : action.payload };\r\n        case CHECK_ID:\r\n            return {...state, chekckId : action.payload};\r\n        case CHECK_NICK:\r\n            return {...state, checkNick : action.payload};    \r\n        case GET_USER:\r\n            return {...state, userData : action.payload};\r\n        case CHECK_PHONE:\r\n            return {...state, checkPhone : action.payload};\r\n        case UPDATE_USER:\r\n            return {...state, updateUser : action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\friend_reducer.js",["241"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\socket_reducer.js",["242","243"],"const SOCKET_SEND = 'socket_send';\r\nconst SOCKET_RECEIVE = 'socket_receive';\r\nconst SOCKET_LIST = 'socket_list';\r\nconst SOCKET_CHATINFORM = 'socket_chatinform';\r\nconst SOCKET_FRIEND_PROFILE = 'socket_profile';\r\nconst SOCKET_COUNT = 'socket_count';\r\nconst SOCKET_ALL = 'socket_all';\r\n\r\nexport default function(state={}, action){\r\n    switch (action.type) {\r\n        case SOCKET_SEND:\r\n            return {...state, chats: action.payload }\r\n        // case SOCKET_RECEIVE:\r\n        //     let newChatList = state.chatList.slice();\r\n        //     newChatList.push(action.data);\r\n        //     return { ...state, chatList: newChatList };\r\n        case SOCKET_LIST:\r\n            return {...state, list: action.payload }\r\n        case SOCKET_CHATINFORM:\r\n            return {...state, inform: action.payload}\r\n        case SOCKET_FRIEND_PROFILE:\r\n            return {...state, indid: action.payload}\r\n        case SOCKET_COUNT:\r\n            return {...state, count : action.payload}\r\n        case SOCKET_ALL:\r\n            return {...state, ass : action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\chat_reducer.js",["244"],"const CHAT_SERVER = 'chat_server';\r\nconst AFTER_POST_MESSAGE = 'after_post_message';\r\nconst CHECK_CHAT = 'check_chat';\r\n\r\nexport default function(state={},action){\r\n    switch(action.type){\r\n        case CHAT_SERVER:\r\n            return { ...state, chats: action.payload }\r\n        case AFTER_POST_MESSAGE:\r\n                return { ...state, chats: state.chats.concat(action.payload) }\r\n        case CHECK_CHAT:\r\n                return { ...state, check: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\main_action.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\user_action.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\friend_action.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\LeftPage.js",["245","246","247","248","249"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\FriendList.js",["250","251","252","253","254","255"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\ChatList\\Chat.js",["256","257"],"import React, { useState, Component } from 'react';\r\nimport { Button, Input } from '@material-ui/core';\r\nimport SubdirectoryArrowLeftIcon from '@material-ui/icons/SubdirectoryArrowLeft';\r\nimport io from \"socket.io-client\";\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { getChats, afterPostMessage } from \"../../../api/actions/chat_action\";\r\nimport ChatCard from './Sections/ChatCard';\r\nimport Dropzone from 'react-dropzone';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\n\r\nexport class Chat extends Component {\r\n\r\n    state = {\r\n        chatMessage: \"\",\r\n    }\r\n\r\n    componentDidMount() {\r\n        let server = \"http://localhost:4000\";\r\n\r\n        this.props.dispatch(getChats());\r\n\r\n        this.socket = io(server);\r\n\r\n        this.socket.on(\"Output Chat Message\", messageFromBackEnd => {\r\n            this.props.dispatch(afterPostMessage(messageFromBackEnd));\r\n        })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.messagesEnd.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n\r\n    handleSearchChange = (e) => {\r\n        this.setState({\r\n            chatMessage: e.target.value,\r\n        })\r\n    }\r\n\r\n    renderCards = () =>\r\n        this.props.chats.chats\r\n        && this.props.chats.chats.map((chat) => (\r\n            <ChatCard key={chat._id}  {...chat} />\r\n        ));\r\n\r\n    submitChatMessage = (e) => {\r\n        e.preventDefault();\r\n        if(this.state.chatMessage !== \"\"){\r\n            let chatMessage = this.state.chatMessage;\r\n            let _id = this.props.user.userData._id;\r\n            let userName = this.props.user.userData.userName;\r\n            let userImage = this.props.user.userData.image;\r\n            let nowTime = moment();\r\n            let type = \"Text\";\r\n    \r\n            this.socket.emit(\"Input Chat Message\", {\r\n                chatMessage,\r\n                _id,\r\n                userName,\r\n                userImage,\r\n                nowTime,\r\n                type,\r\n            });\r\n        }\r\n        \r\n        this.setState({ chatMessage: \"\" });\r\n    }\r\n\r\n    onDrop = (files) => {\r\n\r\n        if (this.props.user.userData && !this.props.user.userData.isAuth) {\r\n            return alert('Please Log in first');\r\n        }\r\n\r\n        let formData = new FormData;\r\n\r\n        const config = {\r\n            header: { 'content-type': 'multipart/form-data' }\r\n        }\r\n\r\n        formData.append(\"file\", files[0])\r\n\r\n        axios.post('/api/chats/uploadfiles', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    let chatMessage = response.data.url;\r\n                    let _id = this.props.user.userData._id;\r\n                    let userName = this.props.user.userData.userName;\r\n                    let userImage = this.props.user.userData.image;\r\n                    let nowTime = moment();\r\n                    let type = \"VideoOrImage\";\r\n\r\n                    this.socket.emit(\"Input Chat Message\", {\r\n                        chatMessage,\r\n                        _id,\r\n                        userName,\r\n                        userImage,\r\n                        nowTime,\r\n                        type\r\n                    });\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{height:'300px', overflow:'hidden'}}>\r\n                    <div style={{overflow:'scroll'}}>\r\n                        {\r\n                            this.props.chats && (\r\n                                this.renderCards()\r\n                            )\r\n                        }\r\n                        <div\r\n                            ref={el => {\r\n                                this.messagesEnd = el;\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <form onSubmit={this.submitChatMessage}>\r\n                    <Input\r\n                        id=\"message\"\r\n                        color=\"secondary\"\r\n                        placeholder=\"메세지를 작성하세요\"\r\n                        inputProps={{ 'aria-label': 'description' }}\r\n                        value={this.state.chatMessage}\r\n                        onChange={this.handleSearchChange}\r\n                    />\r\n                    <Dropzone onDrop={this.onDrop}>\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <section>\r\n                                <div {...getRootProps()}>\r\n                                    <input {...getInputProps()} />\r\n                                    <Button>\r\n                                        <DownloadOutlined type=\"upload\" />\r\n                                    </Button>\r\n                                </div>\r\n                            </section>\r\n                        )}\r\n                    </Dropzone>\r\n                    <Button variant=\"outlined\" color=\"secondary\" type=\"submit\" onClick={this.submitChatMessage}>\r\n                        <SubdirectoryArrowLeftIcon />\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user : state.user,\r\n        chats : state.chat,\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Chat);\r\n\r\n\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Internet.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\ViewFriend\\ViewFriend.js",["258","259","260"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getFriend } from '../../../api/actions/chat_action';\r\nimport TelegramIcon from '@material-ui/icons/Telegram';\r\n\r\nconst ViewFriend = ({match, UserData}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const data = match.params.search || null;\r\n\r\n    const [DataFriend, setDataFriend] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n\r\n        let body = {\r\n            data : data\r\n        }\r\n\r\n        dispatch(getFriend(body))\r\n        .then(response => {\r\n            setDataFriend(response.payload);\r\n        })\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"friend_profile\">\r\n            <div>\r\n                <img src={DataFriend.image} />\r\n                <div className=\"friend_name\">{DataFriend.userName}</div>\r\n                <div className=\"friend_say\">{DataFriend.message}</div>\r\n                <Link to={`/main/ChatingRoom/${UserData._id}_${DataFriend._id}`}>\r\n                    <TelegramIcon />\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ViewFriend);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatingRoom.js",["261","262","263","264","265","266","267","268","269","270","271","272","273","274","275"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatingList.js",["276","277","278","279"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\UpdateUser\\UpdateUser.js",["280","281","282","283","284"],"import React, {useState, useEffect} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { updateUser, uploadImage, uploadImageTmp } from \"../../../api/actions/user_action\";\r\nimport { Button } from '@material-ui/core';\r\nimport '../../MainPage/Main.scss';\r\n\r\nconst UpdateUser = ({UserData, history, setUpdate, Update}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [image, setImage] = useState(UserData.image);\r\n    const [FilePath, setFilePath] = useState(\"\")\r\n    const [inputs, setInputs] = useState({\r\n        nick: UserData.userNickName,\r\n        message: UserData.message,\r\n    })\r\n    const {nick, message} = inputs\r\n\r\n    useEffect(() => {\r\n        setInputs({\r\n            nick: UserData.userNickName,\r\n            message: UserData.message,\r\n        })\r\n    }, [UserData])\r\n    useEffect(() => {\r\n        setImage(UserData.image);\r\n    }, [UserData, image]);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const formData = new FormData();\r\n        console.log('온체인지파일',e.target.nick.value, e.target.message.value, e.target.profile_img.files[0])\r\n        formData.append('userId', UserData.userId)\r\n        formData.append('nick', e.target.nick.value)\r\n        formData.append('message', e.target.message.value)\r\n        formData.append('profile_img', e.target.profile_img.files[0])\r\n\r\n        dispatch(updateUser(formData))\r\n        .then(response=>{\r\n            history.push('/main/FriendList')\r\n            setUpdate(!Update)\r\n        })\r\n    }\r\n    const onChange = (e) => {\r\n        const {className, value} = e.target\r\n        const nextInputs = {\r\n            ...inputs,\r\n            [className] : value,\r\n        }\r\n        setInputs(nextInputs)\r\n    }\r\n\r\n    const btnstyle ={\r\n        margin : '18px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#845460'\r\n    }\r\n\r\n    return (\r\n        <div className=\"change_update\">\r\n            <div className=\"change\">프로필 수정</div>\r\n            <div className=\"form_change\">\r\n                <form onSubmit={onSubmit} encType=\"multipart/form-data\">\r\n                    <label className=\"profile_img_wrapper\" htmlFor=\"profile_img\">\r\n                        <img src={image} />\r\n                    </label>\r\n                    <input type=\"file\" name='profile_img' accept='image/jpg, image/png, image/jpeg, image/gif' multiple={false} />\r\n                    <input className=\"nick\" type=\"text\" value={nick} onChange={onChange} name=\"nick\"/>\r\n                    <input className=\"message\" type=\"text\" value={message} onChange={onChange} name=\"message\"/>\r\n                    <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>수정 완료</Button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(UpdateUser);","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\ShowFriend\\ShowFriend.js",["285","286","287"],"import React, {useEffect} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ShowFriend = React.memo(({UserData, ListFriend, ClickEvent, setClickEvent}) => {\r\n\r\n    if(ListFriend.Myfriend !== undefined){\r\n        return (\r\n            <div>\r\n                {\r\n                    ListFriend.Myfriend.map((friend)=>(\r\n                        <Link key={friend._id} to={`/main/ViewFriend/${friend.friendId}`} style={{textDecoration:'none',color:'#000'}}>\r\n                            <div className=\"myProfile\" key={friend._id}>\r\n                                <img src={friend.friendImage} />\r\n                                <div className=\"text_site\">\r\n                                    <div className=\"top\">{friend.friendName}</div>\r\n                                    <div className=\"bottom\">{friend.friendMessage}</div>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }else{\r\n        return (\r\n            <div>\r\n                <div>친구가 없습니다</div>\r\n            </div>\r\n        )\r\n    }\r\n})\r\n\r\nexport default withRouter(ShowFriend);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\SearchFriend.js",["288"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\MyProfile\\MyProfile.js",["289","290","291"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst MyProfile = React.memo(({UserData}) => {\r\n\r\n    return (\r\n        <div className=\"myfile\">\r\n            <Link to=\"/main/UpdateUser\">\r\n                <img src={UserData.image} />\r\n                <div className=\"text_site\">\r\n                    <div className=\"top\">{UserData.userName}</div>\r\n                    <div className=\"bottom\">{UserData.message}</div>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default withRouter(MyProfile);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\PlusFriend.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\Title\\LeftTitle.js",["292","293"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\socket_action.js",["294"],"import axios from 'axios';\r\n\r\nconst SOCKET_SEND = 'socket_send';\r\nconst SOCKET_RECEIVE = 'socket_receive'\r\nconst SOCKET_LIST = 'socket_list';\r\nconst SOCKET_CHATINFORM = 'socket_chatinform';\r\nconst SOCKET_FRIEND_PROFILE = 'socket_profile';\r\nconst SOCKET_COUNT = 'socket_count';\r\nconst SOCKET_ALL = 'socket_all';\r\nexport function getChats(dataToSubmit){\r\n    const request = axios.post('/api/chats/getChat',dataToSubmit)\r\n    .then(response => response.data)\r\n\r\n    return {\r\n        type :  SOCKET_SEND,\r\n        payload : request\r\n    }\r\n}\r\n\r\nexport function ListFind(dataToSubmit) {\r\n    const request = axios.post('/api/chats/ListShow', dataToSubmit)\r\n    .then(response => response.data)\r\n\r\n    return {\r\n        type : SOCKET_LIST,\r\n        payload : request\r\n    }\r\n}\r\n\r\nexport function ChatInform(dataToSubmit) {\r\n\r\n    const request = axios.post('/api/chats/textMessage',dataToSubmit)\r\n    .then(response => response.data)\r\n\r\n    return {\r\n        type : SOCKET_CHATINFORM,\r\n        payload : request\r\n    }\r\n}\r\n\r\nexport function FriendProfile(dataToSubmit) {\r\n    const request = axios.post('/api/chats/profiles',dataToSubmit)\r\n    .then(response => response.data)\r\n\r\n    return {\r\n        type : SOCKET_FRIEND_PROFILE,\r\n        payload : request\r\n    }\r\n}\r\n\r\nexport function CountHow(dataToSubmit){\r\n    const request = axios.post('/api/chats/countMessage',dataToSubmit)\r\n    .then(response => response.data )\r\n\r\n    return {\r\n        type : SOCKET_COUNT,\r\n        payload : request\r\n    }\r\n}\r\n\r\nexport function allChat(dataToSubmit){\r\n    const request = axios.post('/api/chats/total',dataToSubmit)\r\n    .then(response=> response.data )\r\n\r\n    return {\r\n        type : SOCKET_ALL,\r\n        payload : request\r\n    }\r\n}\r\n\r\n// export function receiveChat(data){\r\n\r\n//     return {\r\n//         type: SOCKET_RECEIVE,\r\n//         data\r\n//     }\r\n// }\r\n\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\AddBaner.js",["295","296"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatTitle.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\useChat.js",["297","298","299"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\chat_action.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\News\\News.js",["300"],"import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\nimport usePromise from '../../../../usePromise';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport NewsItem from './NewsItem';\r\n\r\nconst News = ({ UserData }) => {\r\n\r\n    const [Count, setCount] = useState(0);\r\n\r\n\r\n    const [loading, resolved, error] = usePromise(() => {\r\n        return axios.get(\r\n            `https://newsapi.org/v2/top-headlines?country=kr&apiKey=112d8e8b89e94be1a897eaffad725b6a`\r\n        );\r\n    }, [UserData]);\r\n\r\n    // 대기중 일때 실행\r\n    if (loading) {\r\n        return (\r\n            <LoadingOutlined className=\"loading\"/>\r\n        )\r\n    }\r\n    // 값이 없으면 null 값으로 반환\r\n    if (!resolved) {\r\n        return (\r\n            <div>뉴스오류</div>\r\n        );\r\n    }\r\n\r\n    // resolved값이 유효할 때\r\n    const { articles } = resolved.data;\r\n\r\n    return (\r\n        <div className=\"news_top\">\r\n            {articles.map((article)=>(\r\n                <NewsItem key={article.url} article={article} Count={Count} setCount={setCount}/>\r\n                ))}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default withRouter(News);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\ChatList\\Sections\\ChatCard.js",["301","302","303","304","305"],"import React from 'react';\r\nimport moment from 'moment';\r\nimport { Comment, Tooltip, Avatar } from 'antd';\r\n\r\nfunction ChatCard(props) {\r\n\r\n    const profileImgStyle ={\r\n        width: '50px',\r\n        height: '50px',\r\n        // overFit: 'cover',\r\n        borderRadius: '50%',\r\n    }\r\n    const imgStyle ={\r\n        width: '100px',\r\n    }\r\n    return (\r\n        <div>\r\n            <div style={{display: 'flex', flexDirection:'column'}}>\r\n                <div>{props.sender.userName}</div>\r\n                <img src={props.sender.image} style={profileImgStyle}/>\r\n                {/* <p>{props.message}</p> */}\r\n                {\r\n                props.message.substring(0,6)===\"/chats\" ?\r\n                props.message.substring(props.message.length - 3, props.message.length) === 'mp4' ?\r\n                <video \r\n                // src={`http://localhost:4000/${props.message}`} \r\n                src={props.message}\r\n                alt=\"video\"\r\n                type=\"video/mp4\" controls\r\n                />\r\n                :\r\n                <img \r\n                style={imgStyle}\r\n                // src={`http://localhost:4000/${props.message}`} \r\n                src={props.message}\r\n                alt=\"image\"\r\n                />\r\n                :\r\n                <p>{props.message}</p>\r\n                }\r\n                <div title={moment().format('YYYY-MM-DD HH:mm:ss')}>\r\n                        <span>{moment(props.sender.nowTime).format('YYYY-MM-DD HH:mm:ss')}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatCard\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\IntTitle\\IntTitle.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\Shop.js",["306","307"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\News\\NewsItem.js",["308","309","310"],"import React, {useEffect} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../../../MainPage/Main.scss';\r\n\r\nconst NewsItem = ({ article, Count, setCount }) => {\r\n\r\n    const { title, description, url, urlToImage } = article;\r\n\r\n    // if (Count % 3 === 0) {\r\n        return (\r\n            <div>\r\n                \r\n                    <div className=\"box_article\">\r\n                        <a href={url} target=\"_blank\" rel=\"noopner noreferrer\">\r\n                        {urlToImage ? \r\n                            <img src={urlToImage} alt=\"해당 기사 사진이 오류입니다\" />\r\n                            :\r\n                            <img src='/gyeran.png'/>\r\n                        }\r\n                            <span>{title}</span>\r\n                        </a>\r\n                    </div>\r\n               \r\n            </div>\r\n        )\r\n    // }else {\r\n    //     return (\r\n    //         <div>\r\n    //             <div>\r\n    //                 <a href={url} target=\"_blank\" rel=\"noopner noreferrer\">\r\n    //                     <span>{title}</span>\r\n    //                 </a>\r\n    //             </div>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n}\r\n\r\nexport default withRouter(NewsItem);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\ShopItem.js",["311","312","313","314","315"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\usePromise.js",["316","317"],"// usePromise.js\r\nimport {useState, useEffect} from 'react';\r\n\r\nexport default function usePromise(promiseCreator, deps){\r\n\r\n    const [loading, setLoading] = useState(false); // 대기중 일때\r\n    const [resolved, setResolved] = useState(null); // 완료 일때\r\n    const [error, setError] = useState(null); // 실패 일때\r\n\r\n    useEffect(()=>{\r\n        const process = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const resolved = await promiseCreator();\r\n                setResolved(resolved);\r\n            } catch (error) {\r\n                setError(error);\r\n            }\r\n            setLoading(false);\r\n        }\r\n        process();\r\n    },deps);\r\n\r\n    return [loading, resolved, error];\r\n} ","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Options\\Options.js",["318"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatItem.js",["319","320","321","322","323","324","325"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Options\\option\\Weather.js",["326","327","328","329","330"],"import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport usePromise from '../../../../usePromise';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Weather = ({UserData}) => {\r\n\r\n    const [state, setstate] = useState(\"\")\r\n\r\n    // api.openweathermap.org/data/2.5/weather?q=seoul&appid=3759cf2983458ec945fed258d8c987fb&units=imperial\r\n    const [loading, resolved, error] = usePromise(() => {\r\n        return axios.get(\r\n            `http://api.openweathermap.org/data/2.5/weather?q=seoul&appid=3759cf2983458ec945fed258d8c987fb`\r\n        );\r\n    }, [UserData]);\r\n\r\n    // 대기중 일때 실행\r\n    if (loading) {\r\n        return (\r\n            <LoadingOutlined className=\"loading\"/>\r\n        )\r\n    }\r\n    // 값이 없으면 null 값으로 반환\r\n    if (!resolved) {\r\n        return (\r\n            <div>날씨오류</div>\r\n        );\r\n    }\r\n\r\n    // resolved값이 유효할 때\r\n    const open = resolved;\r\n    const { weather } = resolved.data;\r\n    console.log(resolved);\r\n    return (\r\n        <div className=\"news_top\">\r\n            <div className=\"news_head\">\r\n                <img src={`http://openweathermap.org/img/wn/${weather[0].icon}.png`} />\r\n                <div className=\"news_weather\">\r\n                    <ul>\r\n                        <li>위치 : {resolved.data.name}</li>\r\n                        <li>날씨 : {weather[0].main}</li>\r\n                        <li>풍속 : {resolved.data.wind.speed}</li>\r\n                    </ul>\r\n                    \r\n                    \r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\Board.js",["331","332","333"],"import React, {useEffect, useState} from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport BoardList from './BoardList';\r\nimport BoardCreate from './BoardCreate';\r\nimport BoardDetail from './BoardDetail';\r\nimport BoardUpdate from './BoardUpdate';\r\n\r\nconst Board = ({match, UserData}) => {\r\n    // const [selection, setselection] = useState('BoardList');\r\n    // useEffect(() => {\r\n        //     console.log('selection', selection);\r\n        // }, [selection])\r\n    // const selection = match.params.select || 'BoardList';\r\n    const [selection, setSelection] = useState('BoardList');\r\n    const [process, setProcess] = useState('');\r\n    console.log('params', match.params);\r\n    useEffect(()=>{\r\n        setSelection(match.params.select);\r\n        console.log('selection', selection);\r\n    }, [match.params.select])\r\n    useEffect(()=>{\r\n        setProcess(match.params.process);\r\n        console.log('process', process);\r\n    }, [match.params.process])\r\n        return (\r\n        <div>\r\n            {selection === 'BoardList' || selection === undefined ? <BoardList UserData={UserData} selection={selection}/> \r\n            : selection === 'create' ? <BoardCreate UserData={UserData}/> \r\n            : process === 'update' ? <BoardUpdate UserData={UserData}/> \r\n            : <BoardDetail UserData={UserData} selection={selection} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Board);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardList.js",["334","335"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardDetail.js",["336","337"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\post_action.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardCreate.js",["338"],"import React, {useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { createPost } from '../../../../api/actions/post_action';\r\nimport { Button } from \"@material-ui/core\";\r\nimport './Board.scss';\r\n\r\nconst BoardCreate = ({UserData, match, history}) => {\r\n    const dispatch = useDispatch();\r\n    const selection = match.params.select;\r\n\r\n    const [inputs, setInputs] = useState({\r\n        title: '',\r\n        body: '',\r\n    });\r\n    \r\n    const {title, body} = inputs\r\n\r\n    const onChange = (e) => {\r\n        const {className, value} = e.target\r\n        const nextInputs = {\r\n            ...inputs,\r\n            [className] : value,\r\n        }\r\n        setInputs(nextInputs)\r\n    }\r\n    const onSubmitCreate = (e) => {\r\n        e.preventDefault();\r\n        const writerData = UserData;\r\n        // console.log('submit', title, body, UserData.userNickName);\r\n        dispatch(createPost({title, body, writerData}))\r\n        .then(res => {\r\n            history.push('/main/Internet/posts');\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            {/* <form action=\"/posts\" method=\"post\"> */}\r\n            <form onSubmit={onSubmitCreate}>\r\n                <div className=\"form_group\">\r\n                    <label htmlFor=\"title\">제목</label>\r\n                    <input type=\"text\" id=\"title\" name=\"title\" value={title} className=\"title\"\r\n                    onChange={onChange}/>\r\n                </div>\r\n                <div className=\"form_group\">\r\n                    <label htmlFor=\"body\">내용</label>\r\n                    <textarea id=\"body\" name=\"body\" rows=\"5\" value={body} className=\"body\"\r\n                    onChange={onChange}></textarea>\r\n                </div>\r\n                <div className=\"btn_group\">\r\n                    <Button type=\"submit\" className=\"btn btn_style\">제출</Button>\r\n                    <a className=\"btn btn_primary\" href=\"main/Internet/posts\"><Button>취소</Button></a>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(BoardCreate)\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardUpdate.js",["339","340"],"import React, {useEffect, useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { updatePost, viewPost } from '../../../../api/actions/post_action';\r\nimport { Button } from \"@material-ui/core\";\r\nimport './Board.scss';\r\n\r\nconst BoardUpdate = ({UserData, match, history}) => {\r\n    const dispatch = useDispatch();\r\n    const selection = match.params.select;\r\n    const process = match.params.process;\r\n\r\n    const [post, setPost] = useState('');\r\n\r\n    const [inputs, setInputs] = useState({\r\n        title: '',\r\n        body: '',\r\n    });\r\n    \r\n    const {title, body} = inputs;\r\n\r\n    useEffect(()=>{\r\n        console.log('update selection', selection);\r\n        dispatch(viewPost({UserData, selection, process}))\r\n        .then(res => {\r\n            console.log('detail', res.payload.post)\r\n            setPost(res.payload.post);\r\n            \r\n        })\r\n    }, [selection]);\r\n\r\n    useEffect(()=>{\r\n        setInputs({ title: post.title, body: post.body })\r\n    }, [post]);\r\n\r\n    const onChange = (e) => {\r\n        const {className, value} = e.target\r\n        const nextInputs = {\r\n            ...inputs,\r\n            [className] : value,\r\n        }\r\n        setInputs(nextInputs)\r\n    }\r\n    const onSubmitUpdate = (e) => {\r\n        e.preventDefault();\r\n        const Writer = UserData.userNickName;\r\n        dispatch(updatePost({title, body, selection}))\r\n        .then(res => {\r\n            history.push('/main/Internet/posts');\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <form onSubmit={onSubmitUpdate} >\r\n                <div className=\"form_group\">\r\n                    <label htmlFor=\"title\">제목</label>\r\n                    <input type=\"text\" id=\"title\" name=\"title\" value={title} className=\"title\"\r\n                    onChange={onChange}/>\r\n                </div>\r\n                <div className=\"form_group\">\r\n                    <label htmlFor=\"body\">내용</label>\r\n                    <textarea id=\"body\" name=\"body\" rows=\"5\" value={body} className=\"body\"\r\n                    onChange={onChange}></textarea>\r\n                </div>\r\n                <div className=\"btn_group\">\r\n                    <Button type=\"submit\" className=\"btn btn_style\">제출</Button>\r\n                    <a className=\"btn btn_primary\" href=\"main/Internet/posts\"><Button>취소</Button></a>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(BoardUpdate)\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\PayResult.js",["341","342","343","344"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\TV\\TV.js",[],{"ruleId":"345","replacedBy":"346"},{"ruleId":"347","replacedBy":"348"},{"ruleId":"349","severity":1,"message":"350","line":6,"column":31,"nodeType":"351","messageId":"352","endLine":6,"endColumn":40},{"ruleId":"353","severity":1,"message":"354","line":100,"column":21,"nodeType":"355","endLine":100,"endColumn":72},{"ruleId":"353","severity":1,"message":"354","line":101,"column":50,"nodeType":"355","endLine":101,"endColumn":103},{"ruleId":"356","severity":1,"message":"357","line":5,"column":1,"nodeType":"358","endLine":44,"endColumn":2},{"ruleId":"359","severity":1,"message":"360","line":38,"column":12,"nodeType":"361","endLine":38,"endColumn":14,"suggestions":"362"},{"ruleId":"349","severity":1,"message":"363","line":5,"column":23,"nodeType":"351","messageId":"352","endLine":5,"endColumn":29},{"ruleId":"349","severity":1,"message":"364","line":8,"column":10,"nodeType":"351","messageId":"352","endLine":8,"endColumn":23},{"ruleId":"349","severity":1,"message":"365","line":18,"column":11,"nodeType":"351","messageId":"352","endLine":18,"endColumn":25},{"ruleId":"359","severity":1,"message":"366","line":34,"column":7,"nodeType":"361","endLine":34,"endColumn":9,"suggestions":"367"},{"ruleId":"359","severity":1,"message":"366","line":41,"column":8,"nodeType":"361","endLine":41,"endColumn":16,"suggestions":"368"},{"ruleId":"356","severity":1,"message":"357","line":10,"column":1,"nodeType":"358","endLine":31,"endColumn":2},{"ruleId":"356","severity":1,"message":"357","line":5,"column":1,"nodeType":"358","endLine":16,"endColumn":2},{"ruleId":"349","severity":1,"message":"369","line":2,"column":7,"nodeType":"351","messageId":"352","endLine":2,"endColumn":21},{"ruleId":"356","severity":1,"message":"357","line":9,"column":1,"nodeType":"358","endLine":30,"endColumn":2},{"ruleId":"356","severity":1,"message":"357","line":5,"column":1,"nodeType":"358","endLine":16,"endColumn":2},{"ruleId":"349","severity":1,"message":"370","line":2,"column":31,"nodeType":"351","messageId":"352","endLine":2,"endColumn":36},{"ruleId":"349","severity":1,"message":"371","line":9,"column":8,"nodeType":"351","messageId":"352","endLine":9,"endColumn":12},{"ruleId":"349","severity":1,"message":"372","line":18,"column":10,"nodeType":"351","messageId":"352","endLine":18,"endColumn":21},{"ruleId":"349","severity":1,"message":"373","line":19,"column":8,"nodeType":"351","messageId":"352","endLine":19,"endColumn":13},{"ruleId":"359","severity":1,"message":"374","line":44,"column":8,"nodeType":"361","endLine":44,"endColumn":24,"suggestions":"375"},{"ruleId":"349","severity":1,"message":"376","line":1,"column":38,"nodeType":"351","messageId":"352","endLine":1,"endColumn":49},{"ruleId":"349","severity":1,"message":"372","line":8,"column":22,"nodeType":"351","messageId":"352","endLine":8,"endColumn":33},{"ruleId":"349","severity":1,"message":"377","line":11,"column":10,"nodeType":"351","messageId":"352","endLine":11,"endColumn":23},{"ruleId":"359","severity":1,"message":"378","line":62,"column":7,"nodeType":"361","endLine":62,"endColumn":17,"suggestions":"379"},{"ruleId":"359","severity":1,"message":"380","line":73,"column":7,"nodeType":"361","endLine":73,"endColumn":19,"suggestions":"381"},{"ruleId":"359","severity":1,"message":"366","line":89,"column":8,"nodeType":"361","endLine":89,"endColumn":20,"suggestions":"382"},{"ruleId":"349","severity":1,"message":"383","line":1,"column":17,"nodeType":"351","messageId":"352","endLine":1,"endColumn":25},{"ruleId":"384","severity":1,"message":"385","line":76,"column":24,"nodeType":"386","messageId":"387","endLine":76,"endColumn":36,"fix":"388"},{"ruleId":"349","severity":1,"message":"373","line":1,"column":8,"nodeType":"351","messageId":"352","endLine":1,"endColumn":13},{"ruleId":"359","severity":1,"message":"389","line":27,"column":8,"nodeType":"361","endLine":27,"endColumn":10,"suggestions":"390"},{"ruleId":"353","severity":1,"message":"354","line":32,"column":17,"nodeType":"355","endLine":32,"endColumn":47},{"ruleId":"349","severity":1,"message":"391","line":4,"column":8,"nodeType":"351","messageId":"352","endLine":4,"endColumn":19},{"ruleId":"349","severity":1,"message":"372","line":5,"column":23,"nodeType":"351","messageId":"352","endLine":5,"endColumn":34},{"ruleId":"349","severity":1,"message":"392","line":18,"column":36,"nodeType":"351","messageId":"352","endLine":18,"endColumn":41},{"ruleId":"349","severity":1,"message":"393","line":20,"column":12,"nodeType":"351","messageId":"352","endLine":20,"endColumn":17},{"ruleId":"349","severity":1,"message":"394","line":22,"column":9,"nodeType":"351","messageId":"352","endLine":22,"endColumn":20},{"ruleId":"359","severity":1,"message":"395","line":34,"column":8,"nodeType":"361","endLine":34,"endColumn":10,"suggestions":"396"},{"ruleId":"359","severity":1,"message":"397","line":44,"column":8,"nodeType":"361","endLine":44,"endColumn":18,"suggestions":"398"},{"ruleId":"359","severity":1,"message":"399","line":66,"column":7,"nodeType":"361","endLine":66,"endColumn":14,"suggestions":"400"},{"ruleId":"359","severity":1,"message":"366","line":72,"column":7,"nodeType":"361","endLine":72,"endColumn":13,"suggestions":"401"},{"ruleId":"359","severity":1,"message":"402","line":89,"column":8,"nodeType":"361","endLine":89,"endColumn":20,"suggestions":"403"},{"ruleId":"404","severity":1,"message":"405","line":92,"column":28,"nodeType":"406","messageId":"407","endLine":92,"endColumn":30},{"ruleId":"353","severity":1,"message":"354","line":125,"column":37,"nodeType":"355","endLine":125,"endColumn":91},{"ruleId":"353","severity":1,"message":"354","line":129,"column":37,"nodeType":"355","endLine":129,"endColumn":92},{"ruleId":"353","severity":1,"message":"354","line":145,"column":37,"nodeType":"355","endLine":145,"endColumn":86},{"ruleId":"353","severity":1,"message":"354","line":149,"column":37,"nodeType":"355","endLine":149,"endColumn":86},{"ruleId":"349","severity":1,"message":"408","line":3,"column":10,"nodeType":"351","messageId":"352","endLine":3,"endColumn":14},{"ruleId":"349","severity":1,"message":"409","line":14,"column":12,"nodeType":"351","messageId":"352","endLine":14,"endColumn":20},{"ruleId":"349","severity":1,"message":"410","line":17,"column":11,"nodeType":"351","messageId":"352","endLine":17,"endColumn":31},{"ruleId":"359","severity":1,"message":"366","line":29,"column":8,"nodeType":"361","endLine":29,"endColumn":32,"suggestions":"411"},{"ruleId":"349","severity":1,"message":"412","line":4,"column":22,"nodeType":"351","messageId":"352","endLine":4,"endColumn":33},{"ruleId":"349","severity":1,"message":"413","line":4,"column":35,"nodeType":"351","messageId":"352","endLine":4,"endColumn":49},{"ruleId":"349","severity":1,"message":"414","line":12,"column":12,"nodeType":"351","messageId":"352","endLine":12,"endColumn":20},{"ruleId":"349","severity":1,"message":"415","line":12,"column":22,"nodeType":"351","messageId":"352","endLine":12,"endColumn":33},{"ruleId":"353","severity":1,"message":"354","line":67,"column":25,"nodeType":"355","endLine":67,"endColumn":44},{"ruleId":"349","severity":1,"message":"416","line":1,"column":16,"nodeType":"351","messageId":"352","endLine":1,"endColumn":25},{"ruleId":"349","severity":1,"message":"372","line":3,"column":10,"nodeType":"351","messageId":"352","endLine":3,"endColumn":21},{"ruleId":"353","severity":1,"message":"354","line":15,"column":33,"nodeType":"355","endLine":15,"endColumn":65},{"ruleId":"353","severity":1,"message":"354","line":17,"column":37,"nodeType":"355","endLine":17,"endColumn":65},{"ruleId":"349","severity":1,"message":"373","line":2,"column":8,"nodeType":"351","messageId":"352","endLine":2,"endColumn":13},{"ruleId":"349","severity":1,"message":"372","line":4,"column":10,"nodeType":"351","messageId":"352","endLine":4,"endColumn":21},{"ruleId":"353","severity":1,"message":"354","line":11,"column":17,"nodeType":"355","endLine":11,"endColumn":45},{"ruleId":"349","severity":1,"message":"373","line":1,"column":8,"nodeType":"351","messageId":"352","endLine":1,"endColumn":13},{"ruleId":"349","severity":1,"message":"417","line":6,"column":5,"nodeType":"351","messageId":"352","endLine":6,"endColumn":19},{"ruleId":"349","severity":1,"message":"369","line":4,"column":7,"nodeType":"351","messageId":"352","endLine":4,"endColumn":21},{"ruleId":"359","severity":1,"message":"418","line":29,"column":8,"nodeType":"361","endLine":29,"endColumn":10,"suggestions":"419"},{"ruleId":"353","severity":1,"message":"354","line":32,"column":13,"nodeType":"355","endLine":32,"endColumn":51},{"ruleId":"349","severity":1,"message":"420","line":1,"column":8,"nodeType":"351","messageId":"352","endLine":1,"endColumn":13},{"ruleId":"349","severity":1,"message":"372","line":2,"column":10,"nodeType":"351","messageId":"352","endLine":2,"endColumn":21},{"ruleId":"359","severity":1,"message":"402","line":35,"column":8,"nodeType":"361","endLine":35,"endColumn":16,"suggestions":"421"},{"ruleId":"349","severity":1,"message":"422","line":13,"column":31,"nodeType":"351","messageId":"352","endLine":13,"endColumn":36},{"ruleId":"349","severity":1,"message":"423","line":3,"column":10,"nodeType":"351","messageId":"352","endLine":3,"endColumn":17},{"ruleId":"349","severity":1,"message":"424","line":3,"column":19,"nodeType":"351","messageId":"352","endLine":3,"endColumn":26},{"ruleId":"349","severity":1,"message":"363","line":3,"column":28,"nodeType":"351","messageId":"352","endLine":3,"endColumn":34},{"ruleId":"353","severity":1,"message":"354","line":20,"column":17,"nodeType":"355","endLine":20,"endColumn":72},{"ruleId":"425","severity":1,"message":"426","line":32,"column":17,"nodeType":"355","endLine":37,"endColumn":19},{"ruleId":"349","severity":1,"message":"383","line":1,"column":17,"nodeType":"351","messageId":"352","endLine":1,"endColumn":25},{"ruleId":"353","severity":1,"message":"354","line":69,"column":25,"nodeType":"355","endLine":69,"endColumn":103},{"ruleId":"349","severity":1,"message":"416","line":1,"column":16,"nodeType":"351","messageId":"352","endLine":1,"endColumn":25},{"ruleId":"349","severity":1,"message":"427","line":7,"column":20,"nodeType":"351","messageId":"352","endLine":7,"endColumn":31},{"ruleId":"353","severity":1,"message":"354","line":18,"column":29,"nodeType":"355","endLine":18,"endColumn":53},{"ruleId":"349","severity":1,"message":"408","line":3,"column":10,"nodeType":"351","messageId":"352","endLine":3,"endColumn":14},{"ruleId":"349","severity":1,"message":"428","line":4,"column":10,"nodeType":"351","messageId":"352","endLine":4,"endColumn":21},{"ruleId":"353","severity":1,"message":"354","line":82,"column":13,"nodeType":"355","endLine":82,"endColumn":91},{"ruleId":"353","severity":1,"message":"354","line":87,"column":19,"nodeType":"355","endLine":87,"endColumn":65},{"ruleId":"353","severity":1,"message":"354","line":90,"column":13,"nodeType":"355","endLine":90,"endColumn":98},{"ruleId":"359","severity":1,"message":"429","line":22,"column":7,"nodeType":"351","endLine":22,"endColumn":11},{"ruleId":"359","severity":1,"message":"430","line":22,"column":7,"nodeType":"351","endLine":22,"endColumn":11,"suggestions":"431"},{"ruleId":"353","severity":1,"message":"354","line":79,"column":17,"nodeType":"355","endLine":79,"endColumn":62},{"ruleId":"349","severity":1,"message":"372","line":2,"column":23,"nodeType":"351","messageId":"352","endLine":2,"endColumn":34},{"ruleId":"349","severity":1,"message":"373","line":10,"column":8,"nodeType":"351","messageId":"352","endLine":10,"endColumn":13},{"ruleId":"349","severity":1,"message":"432","line":19,"column":12,"nodeType":"351","messageId":"352","endLine":19,"endColumn":20},{"ruleId":"359","severity":1,"message":"366","line":50,"column":8,"nodeType":"361","endLine":50,"endColumn":36,"suggestions":"433"},{"ruleId":"359","severity":1,"message":"434","line":65,"column":8,"nodeType":"361","endLine":65,"endColumn":25,"suggestions":"435"},{"ruleId":"359","severity":1,"message":"402","line":69,"column":8,"nodeType":"361","endLine":69,"endColumn":13,"suggestions":"436"},{"ruleId":"353","severity":1,"message":"354","line":76,"column":25,"nodeType":"355","endLine":76,"endColumn":48},{"ruleId":"349","severity":1,"message":"437","line":8,"column":12,"nodeType":"351","messageId":"352","endLine":8,"endColumn":17},{"ruleId":"349","severity":1,"message":"438","line":8,"column":19,"nodeType":"351","messageId":"352","endLine":8,"endColumn":27},{"ruleId":"349","severity":1,"message":"422","line":11,"column":31,"nodeType":"351","messageId":"352","endLine":11,"endColumn":36},{"ruleId":"349","severity":1,"message":"439","line":31,"column":11,"nodeType":"351","messageId":"352","endLine":31,"endColumn":15},{"ruleId":"353","severity":1,"message":"354","line":37,"column":17,"nodeType":"355","endLine":37,"endColumn":88},{"ruleId":"349","severity":1,"message":"408","line":2,"column":10,"nodeType":"351","messageId":"352","endLine":2,"endColumn":14},{"ruleId":"359","severity":1,"message":"440","line":20,"column":8,"nodeType":"361","endLine":20,"endColumn":29,"suggestions":"441"},{"ruleId":"359","severity":1,"message":"442","line":24,"column":8,"nodeType":"361","endLine":24,"endColumn":30,"suggestions":"443"},{"ruleId":"359","severity":1,"message":"366","line":20,"column":8,"nodeType":"361","endLine":20,"endColumn":22,"suggestions":"444"},{"ruleId":"353","severity":1,"message":"354","line":34,"column":58,"nodeType":"355","endLine":34,"endColumn":121},{"ruleId":"359","severity":1,"message":"445","line":24,"column":8,"nodeType":"361","endLine":24,"endColumn":19,"suggestions":"446"},{"ruleId":"353","severity":1,"message":"354","line":38,"column":17,"nodeType":"355","endLine":38,"endColumn":80},{"ruleId":"349","severity":1,"message":"447","line":10,"column":11,"nodeType":"351","messageId":"352","endLine":10,"endColumn":20},{"ruleId":"359","severity":1,"message":"448","line":30,"column":8,"nodeType":"361","endLine":30,"endColumn":19,"suggestions":"449"},{"ruleId":"349","severity":1,"message":"450","line":46,"column":15,"nodeType":"351","messageId":"352","endLine":46,"endColumn":21},{"ruleId":"349","severity":1,"message":"451","line":8,"column":12,"nodeType":"351","messageId":"352","endLine":8,"endColumn":18},{"ruleId":"349","severity":1,"message":"452","line":8,"column":20,"nodeType":"351","messageId":"352","endLine":8,"endColumn":29},{"ruleId":"349","severity":1,"message":"453","line":9,"column":19,"nodeType":"351","messageId":"352","endLine":9,"endColumn":27},{"ruleId":"359","severity":1,"message":"454","line":45,"column":8,"nodeType":"361","endLine":45,"endColumn":10,"suggestions":"455"},"no-native-reassign",["456"],"no-negated-in-lhs",["457"],"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["458"],"'Avatar' is defined but never used.","'getFriendList' is defined but never used.","'onClickHandler' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["459"],["460"],"'SOCKET_RECEIVE' is assigned a value but never used.","'Route' is defined but never used.","'Chat' is defined but never used.","'useSelector' is defined but never used.","'axios' is defined but never used.","React Hook useEffect has missing dependencies: 'UserData._id' and 'dispatch'. Either include them or remove the dependency array.",["461"],"'useCallback' is defined but never used.","'alreadyFriend' is defined but never used.","React Hook useEffect has a missing dependency: 'ClickEvent'. Either include it or remove the dependency array. You can also do a functional update 'setClickEvent(C => ...)' if you only need 'ClickEvent' in the 'setClickEvent' call.",["462"],"React Hook useEffect has missing dependencies: 'UserData.userId' and 'dispatch'. Either include them or remove the dependency array.",["463"],["464"],"'useState' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"465","text":"466"},"React Hook useEffect has missing dependencies: 'data' and 'dispatch'. Either include them or remove the dependency array.",["467"],"'TextsmsIcon' is defined but never used.","'setId' is assigned a value but never used.","'Write' is assigned a value but never used.","'mesaagesEnd' is defined but never used.","React Hook useEffect has missing dependencies: 'UserData._id', 'checktUpdate', 'roomId', and 'setchecktUpdate'. Either include them or remove the dependency array. If 'setchecktUpdate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["468"],"React Hook useEffect has missing dependencies: 'checktUpdate', 'roomId', and 'setchecktUpdate'. Either include them or remove the dependency array. If 'setchecktUpdate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["469"],"React Hook useEffect has missing dependencies: 'checkMembers' and 'dispatch'. Either include them or remove the dependency array.",["470"],["471"],"React Hook useEffect has missing dependencies: 'checktUpdate' and 'setchecktUpdate'. Either include them or remove the dependency array. If 'setchecktUpdate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["472"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","'roomName' is assigned a value but never used.","'handleRoomNameChange' is assigned a value but never used.",["473"],"'uploadImage' is defined but never used.","'uploadImageTmp' is defined but never used.","'FilePath' is assigned a value but never used.","'setFilePath' is assigned a value but never used.","'useEffect' is defined but never used.","'SearchOutlined' is defined but never used.","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["474"],"'React' is defined but never used.",["475"],"'error' is assigned a value but never used.","'Comment' is defined but never used.","'Tooltip' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'description' is assigned a value but never used.","'useDispatch' is defined but never used.","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'promiseCreator'. Either include it or remove the dependency array. If 'promiseCreator' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["476"],"'MatchUrl' is assigned a value but never used.",["477"],"React Hook useEffect has missing dependencies: 'UserData._id', 'chat', and 'dispatch'. Either include them or remove the dependency array.",["478"],["479"],"'state' is assigned a value but never used.","'setstate' is assigned a value but never used.","'open' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'selection'. Either include it or remove the dependency array.",["480"],"React Hook useEffect has a missing dependency: 'process'. Either include it or remove the dependency array.",["481"],["482"],"React Hook useEffect has missing dependencies: 'UserData', 'dispatch', and 'post'. Either include them or remove the dependency array.",["483"],"'selection' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'UserData', 'dispatch', and 'process'. Either include them or remove the dependency array.",["484"],"'Writer' is assigned a value but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'setState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.",["485"],"no-global-assign","no-unsafe-negation",{"desc":"486","fix":"487"},{"desc":"488","fix":"489"},{"desc":"490","fix":"491"},{"desc":"492","fix":"493"},{"desc":"494","fix":"495"},{"desc":"496","fix":"497"},{"desc":"498","fix":"499"},[2277,2277],"()",{"desc":"500","fix":"501"},{"desc":"502","fix":"503"},{"desc":"504","fix":"505"},{"desc":"506","fix":"507"},{"desc":"508","fix":"509"},{"desc":"510","fix":"511"},{"desc":"512","fix":"513"},{"desc":"514","fix":"515"},{"desc":"516","fix":"517"},{"desc":"518","fix":"519"},{"desc":"520","fix":"521"},{"desc":"522","fix":"523"},{"desc":"524","fix":"525"},{"desc":"526","fix":"527"},{"desc":"528","fix":"529"},{"desc":"530","fix":"531"},{"desc":"532","fix":"533"},{"desc":"534","fix":"535"},{"desc":"536","fix":"537"},"Update the dependencies array to be: [dispatch, props.history]",{"range":"538","text":"539"},"Update the dependencies array to be: [dispatch]",{"range":"540","text":"541"},"Update the dependencies array to be: [Update, dispatch]",{"range":"542","text":"543"},"Update the dependencies array to be: [UserData._id, checktUpdate, dispatch]",{"range":"544","text":"545"},"Update the dependencies array to be: [ClickEvent, UserData]",{"range":"546","text":"547"},"Update the dependencies array to be: [ClickEvent, UserData.userId, dispatch]",{"range":"548","text":"549"},"Update the dependencies array to be: [InputText2, dispatch]",{"range":"550","text":"551"},"Update the dependencies array to be: [data, dispatch]",{"range":"552","text":"553"},"Update the dependencies array to be: [UserData._id, checktUpdate, roomId, setchecktUpdate]",{"range":"554","text":"555"},"Update the dependencies array to be: [UserData, checktUpdate, roomId, setchecktUpdate]",{"range":"556","text":"557"},"Update the dependencies array to be: [checkMembers, dispatch, match]",{"range":"558","text":"559"},"Update the dependencies array to be: [Body, dispatch]",{"range":"560","text":"561"},"Update the dependencies array to be: [checktUpdate, newMessage, setchecktUpdate]",{"range":"562","text":"563"},"Update the dependencies array to be: [UserData, checktUpdate, dispatch]",{"range":"564","text":"565"},"Update the dependencies array to be: [data]",{"range":"566","text":"567"},"Update the dependencies array to be: [checktUpdate, roomId, setchecktUpdate]",{"range":"568","text":"569"},"Update the dependencies array to be: [promiseCreator]",{"range":"570","text":"571"},"Update the dependencies array to be: [UserData, chat, Messages, dispatch]",{"range":"572","text":"573"},"Update the dependencies array to be: [Messages, Fri, chat, UserData._id, dispatch]",{"range":"574","text":"575"},"Update the dependencies array to be: [Num, checktUpdate, setchecktUpdate]",{"range":"576","text":"577"},"Update the dependencies array to be: [match.params.select, selection]",{"range":"578","text":"579"},"Update the dependencies array to be: [match.params.process, process]",{"range":"580","text":"581"},"Update the dependencies array to be: [dispatch, match.params]",{"range":"582","text":"583"},"Update the dependencies array to be: [UserData, dispatch, post, selection]",{"range":"584","text":"585"},"Update the dependencies array to be: [UserData, dispatch, process, selection]",{"range":"586","text":"587"},"Update the dependencies array to be: [state]",{"range":"588","text":"589"},[1182,1184],"[dispatch, props.history]",[1029,1031],"[dispatch]",[1180,1188],"[Update, dispatch]",[1732,1748],"[UserData._id, checktUpdate, dispatch]",[2030,2040],"[ClickEvent, UserData]",[2271,2283],"[ClickEvent, UserData.userId, dispatch]",[2638,2650],"[InputText2, dispatch]",[709,711],"[data, dispatch]",[1293,1295],"[UserData._id, checktUpdate, roomId, setchecktUpdate]",[1527,1537],"[UserData, checktUpdate, roomId, setchecktUpdate]",[2185,2192],"[checkMembers, dispatch, match]",[2354,2360],"[Body, dispatch]",[2781,2793],"[checktUpdate, newMessage, setchecktUpdate]",[893,917],"[UserData, checktUpdate, dispatch]",[820,822],"[data]",[1078,1086],"[checktUpdate, roomId, setchecktUpdate]",[664,668],"[promiseCreator]",[1845,1873],"[UserData, chat, Messages, dispatch]",[2263,2280],"[Messages, Fri, chat, UserData._id, dispatch]",[2355,2360],"[Num, checktUpdate, setchecktUpdate]",[816,837],"[match.params.select, selection]",[953,975],"[match.params.process, process]",[679,693],"[dispatch, match.params]",[788,799],"[UserData, dispatch, post, selection]",[936,947],"[UserData, dispatch, process, selection]",[1553,1555],"[state]"]