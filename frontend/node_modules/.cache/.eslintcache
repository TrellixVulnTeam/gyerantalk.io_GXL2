[{"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\index.js":"1","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\App.js":"3","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\index.js":"4","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LoginPage.js":"5","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\auth\\auth.js":"6","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\RegisterPage.js":"7","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\MainPage\\Main.js":"8","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\user_reducer.js":"9","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\friend_reducer.js":"10","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\socket_reducer.js":"11","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\chat_reducer.js":"12","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\main_action.js":"13","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\user_action.js":"14","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\friend_action.js":"15","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\LeftPage.js":"16","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\FriendList.js":"17","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\ChatList\\Chat.js":"18","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Internet.js":"19","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\ViewFriend\\ViewFriend.js":"20","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatingRoom.js":"21","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatingList.js":"22","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\UpdateUser\\UpdateUser.js":"23","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\ShowFriend\\ShowFriend.js":"24","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\SearchFriend.js":"25","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\MyProfile\\MyProfile.js":"26","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\PlusFriend.js":"27","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\Title\\LeftTitle.js":"28","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\socket_action.js":"29","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\AddBaner.js":"30","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatTitle.js":"31","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\useChat.js":"32","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\chat_action.js":"33","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\News\\News.js":"34","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\ChatList\\Sections\\ChatCard.js":"35","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\IntTitle\\IntTitle.js":"36","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\Shop.js":"37","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\News\\NewsItem.js":"38","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\ShopItem.js":"39","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\usePromise.js":"40","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Options\\Options.js":"41","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatItem.js":"42","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Options\\option\\Weather.js":"43","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\Board.js":"44","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardList.js":"45","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardCU.js":"46","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardDetail.js":"47","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\post_action.js":"48"},{"size":1062,"mtime":1619226324989,"results":"49","hashOfConfig":"50"},{"size":375,"mtime":1619140719705,"results":"51","hashOfConfig":"50"},{"size":676,"mtime":1620007151055,"results":"52","hashOfConfig":"50"},{"size":313,"mtime":1619762747619,"results":"53","hashOfConfig":"50"},{"size":3924,"mtime":1619570231922,"results":"54","hashOfConfig":"50"},{"size":1439,"mtime":1619510145370,"results":"55","hashOfConfig":"50"},{"size":11771,"mtime":1619414164914,"results":"56","hashOfConfig":"50"},{"size":1740,"mtime":1620006631572,"results":"57","hashOfConfig":"50"},{"size":1108,"mtime":1619667037793,"results":"58","hashOfConfig":"50"},{"size":475,"mtime":1619486142356,"results":"59","hashOfConfig":"50"},{"size":999,"mtime":1620026769968,"results":"60","hashOfConfig":"50"},{"size":527,"mtime":1620006631565,"results":"61","hashOfConfig":"50"},{"size":266,"mtime":1619357976694,"results":"62","hashOfConfig":"50"},{"size":1900,"mtime":1619667037791,"results":"63","hashOfConfig":"50"},{"size":837,"mtime":1619486142355,"results":"64","hashOfConfig":"50"},{"size":3102,"mtime":1620041100842,"results":"65","hashOfConfig":"50"},{"size":3911,"mtime":1619794870536,"results":"66","hashOfConfig":"50"},{"size":5345,"mtime":1619743203142,"results":"67","hashOfConfig":"50"},{"size":626,"mtime":1620007151062,"results":"68","hashOfConfig":"50"},{"size":1219,"mtime":1620006631571,"results":"69","hashOfConfig":"50"},{"size":6933,"mtime":1620041113905,"results":"70","hashOfConfig":"50"},{"size":1688,"mtime":1620029621789,"results":"71","hashOfConfig":"50"},{"size":2995,"mtime":1619794870539,"results":"72","hashOfConfig":"50"},{"size":1303,"mtime":1619794870536,"results":"73","hashOfConfig":"50"},{"size":1838,"mtime":1619749874925,"results":"74","hashOfConfig":"50"},{"size":638,"mtime":1619794870536,"results":"75","hashOfConfig":"50"},{"size":465,"mtime":1619794870536,"results":"76","hashOfConfig":"50"},{"size":1583,"mtime":1619494448297,"results":"77","hashOfConfig":"50"},{"size":1600,"mtime":1620027131071,"results":"78","hashOfConfig":"50"},{"size":995,"mtime":1619794870537,"results":"79","hashOfConfig":"50"},{"size":337,"mtime":1619794870538,"results":"80","hashOfConfig":"50"},{"size":1593,"mtime":1620025485318,"results":"81","hashOfConfig":"50"},{"size":983,"mtime":1620006631564,"results":"82","hashOfConfig":"50"},{"size":1207,"mtime":1619953801175,"results":"83","hashOfConfig":"50"},{"size":1587,"mtime":1619677919303,"results":"84","hashOfConfig":"50"},{"size":739,"mtime":1620007151061,"results":"85","hashOfConfig":"50"},{"size":3069,"mtime":1619794862158,"results":"86","hashOfConfig":"50"},{"size":1238,"mtime":1619825689844,"results":"87","hashOfConfig":"50"},{"size":4555,"mtime":1620007151062,"results":"88","hashOfConfig":"50"},{"size":742,"mtime":1619494448298,"results":"89","hashOfConfig":"50"},{"size":3100,"mtime":1620041954716,"results":"90","hashOfConfig":"50"},{"size":3318,"mtime":1620039777105,"results":"91","hashOfConfig":"50"},{"size":1326,"mtime":1620043278564,"results":"92","hashOfConfig":"50"},{"size":772,"mtime":1620007151059,"results":"93","hashOfConfig":"50"},{"size":1456,"mtime":1620007151060,"results":"94","hashOfConfig":"50"},{"size":2086,"mtime":1620007151059,"results":"95","hashOfConfig":"50"},{"size":168,"mtime":1620007151060,"results":"96","hashOfConfig":"50"},{"size":560,"mtime":1620007151057,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"c8e9fu",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"100"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"100"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"100"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"100"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"100"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"100"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"100"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"100"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"144","usedDeprecatedRules":"100"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"100"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"100"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"100"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"100"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"100"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"100"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"100"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"100"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"100"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"100"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"100"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"100"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"100"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"100"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"100"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"100"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"100"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"100"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"100"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"100"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\index.js",[],["225","226"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\App.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\index.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LoginPage.js",["227","228","229"],"import React, {useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport { loginUser } from '../api/actions/user_action';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { Grid, Paper, Avatar, TextField, Button, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    customTextField: {\r\n      \"& input::placeholder\": {\r\n        color : '#fff',\r\n        fontWeight : 'bolder'\r\n      }\r\n    }\r\n})\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [UserId, setUserId] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n\r\n    const onUserIdHandler = (e) => {\r\n        setUserId(e.target.value);\r\n    }\r\n    const onPasswordHandler = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        let body = {\r\n            userId : UserId,\r\n            password : Password,\r\n        }\r\n\r\n        dispatch(loginUser(body))\r\n        .then(response => {\r\n            if(response.payload.loginSuccess){\r\n                props.history.push('/main/FriendList');\r\n            }else{\r\n                alert('Error');\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const paperStyle = {\r\n        padding : 20,\r\n        height : '568px',\r\n        width : 280,\r\n        margin : '0 auto',\r\n        textAlign : 'center',\r\n        background : '#f6bd63',\r\n        position: 'absolute',\r\n        top:'50%',\r\n        left:'50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    }\r\n    const avatarStyle = {\r\n        width : '230px',\r\n        height : '90px',\r\n        margin: '10px 0 30px',\r\n        background : '#f6bd63',\r\n    }\r\n    const btnstyle = {\r\n        margin : '8px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#845460'\r\n    }\r\n    const imgstyle ={\r\n        width : '100%',\r\n        height : '100%',\r\n    }\r\n    const logostyle ={\r\n        width: '200px',\r\n        marginTop: '50px',\r\n    }\r\n    const inputstyle ={\r\n        width : '90%',\r\n        margin : '0 auto',\r\n        height : '30px',\r\n        marginBottom : '20px',\r\n        background : '#855460',\r\n        color : '#fff'\r\n    }\r\n    const linkstyle ={\r\n        color : '#fff',\r\n        fontWeight : 'bolder',\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid>\r\n            <Paper elevation={10} style={paperStyle} classes={{root:classes.customTextField}}>\r\n                <Grid align=\"center\">\r\n                    <img src=\"/text_transparent.png\" style={logostyle}></img>\r\n                    <Avatar style={avatarStyle} ><img src=\"/gyeran_height_cut.png\" style={imgstyle} /></Avatar>\r\n\r\n                </Grid>\r\n                <form onSubmit={onSubmitHandler}>\r\n                    <input style={inputstyle} type=\"text\" label=\"UserId\" placeholder=\"Enter UserId\" value={UserId} onChange={onUserIdHandler} required/>\r\n                    <input style={inputstyle} type=\"password\" label=\"Password\" placeholder=\"Enter Password\" value={Password} onChange={onPasswordHandler} required/>\r\n                    {/* <FormControlLabel \r\n                        control={\r\n                            <Checkbox\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Remember Me\"\r\n                    /> */}\r\n                    <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>Sign in</Button>\r\n                </form>\r\n                <Typography>\r\n                    <Link to=\"/register\" style={linkstyle}>\r\n                        Sign up\r\n                    </Link>\r\n                </Typography>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\auth\\auth.js",["230","231"],"import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { auth } from '../actions/user_action';\r\n\r\nexport default function(SpecificComponent, option, adminRoute = null){\r\n\r\n    // option\r\n    // null => 아무나 출입이 가능한 페이지\r\n    // true => 로그인한 유저만 출입이 가능한 페이지\r\n    // false => 로그인한 유저는 출입 불가능한 페이지\r\n\r\n    // adminRoute는 true가 되면 어드민 유저만 가능하다.\r\n    \r\n    function AuthenticationCheck(props){\r\n        \r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(()=>{\r\n            \r\n            dispatch(auth()).then(response => {\r\n\r\n                // 로그인 하지 않은 상태\r\n                if(!response.payload.isAuth){\r\n                    if(option){\r\n                        props.history.push('/');\r\n                    }\r\n                }else{\r\n                    // 로그인 한 상태\r\n                    if(adminRoute && !response.payload.isAdmin){\r\n                        props.history.push('/main/FriendList')\r\n                    }else{\r\n                        if(option === false){\r\n                            props.history.push('/main/FriendList');\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }, [])\r\n        return (\r\n            <SpecificComponent />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\RegisterPage.js",["232"],"import React, { useState, useEffect } from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport { registerUser, checkId, checkNick, checkPhone } from '../api/actions/user_action';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Grid, Paper, Avatar, FormControlLabel, Checkbox, TextField, Button, Typography } from '@material-ui/core';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [UserId, setUserId] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n    const [ConfirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [NickName, setNickName] = useState(\"\");\r\n    const [Name, setName] = useState(\"\");\r\n    const [Phone, setPhone] = useState(\"\");\r\n    const [checkPassword, setcheckPassword] = useState(true);\r\n    const [NoticeId, setNoticeId] = useState(\"\");\r\n    const [NoticeNick, setNoticeNick] = useState(\"\");\r\n    const [NoticePhone, setNoticePhone] = useState(\"\");\r\n    // const [Checking, setChecking] = useState(0);\r\n    const [isCheckedId, setisCheckedId] = useState(false);\r\n    const [isCheckedNick, setisCheckedNick] = useState(false);\r\n    const [isCheckedPhone, setisCheckedPhone] = useState(false);\r\n    const [isCheckedPassword, setisCheckedPassword] = useState(false);\r\n\r\n\r\n    const onUserIdHandler = (e) => {\r\n        setUserId(e.target.value);\r\n    }\r\n    const onPasswordHandler = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n    const onPasswordHandler2 = (e) => {\r\n        setConfirmPassword(e.target.value);\r\n    }\r\n    const onNickNameHandler = (e) => {\r\n        setNickName(e.target.value);\r\n    }\r\n    const onNameHandler = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n    const onPhoneHandler = (e) => {\r\n        const regex = /^[0-9\\b -]{0,13}$/;\r\n        if (regex.test(e.target.value)){\r\n            setPhone(e.target.value);\r\n        }\r\n    }\r\n    const onCheckIdHandler = (e) => {\r\n\r\n        e.preventDefault();\r\n        let body = {\r\n            userId : UserId,\r\n        }\r\n\r\n        dispatch(checkId(body))\r\n        .then(response => {\r\n            setNoticeId(response.payload.message);\r\n            if(response.payload.checkId){\r\n                setisCheckedId(true)\r\n            } else {\r\n                setisCheckedId(false)\r\n            }\r\n        })\r\n    }\r\n    const onCheckNick = (e) => {\r\n        \r\n        e.preventDefault();\r\n        let body = {\r\n            userNickName : NickName,\r\n        }\r\n\r\n        dispatch(checkNick(body))\r\n        .then(response => {\r\n            setNoticeNick(response.payload.message);\r\n            if(response.payload.checkNick){\r\n                setisCheckedNick(true)\r\n            } else {\r\n                setisCheckedNick(false)\r\n            }\r\n        })\r\n    }\r\n    const onCheckPhone = (e) => {\r\n        \r\n        e.preventDefault();\r\n        let body = {\r\n            userPhone : Phone,\r\n        }\r\n\r\n        dispatch(checkPhone(body))\r\n        .then(response => {\r\n            setNoticePhone(response.payload.message);\r\n            if(response.payload.checkPhone){\r\n                setisCheckedPhone(true)\r\n            } else {\r\n                setisCheckedPhone(false)\r\n            }\r\n        })\r\n    }\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        let body = {\r\n            userId : UserId,\r\n            password : Password,\r\n            userNickName : NickName,\r\n            userName : Name,\r\n            userPhone : Phone,\r\n        }\r\n        dispatch(registerUser(body))\r\n        .then(response => {\r\n            if(response.payload.success){\r\n                props.history.push(\"/\");\r\n            }else{\r\n                alert(\"Failed to sign up\");\r\n            }\r\n        })\r\n    }\r\n\r\n    const paperStyle ={\r\n        padding : 20,\r\n        height : '650px',\r\n        width : 280,\r\n        margin : '20px auto',\r\n        // textAlign : 'center',\r\n        position: 'absolute',\r\n        top:'50%',\r\n        left:'50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n    const hrstyle ={\r\n        backgroundColor : 'gray',\r\n        height : '1px'\r\n    }\r\n    const divstyle1 ={\r\n        paddingLeft: '12.5px',\r\n        marginTop: '20px',\r\n    }\r\n    const divstyle2 ={\r\n        marginTop: '10px',\r\n        fontSize: '12px',\r\n    }\r\n    const textStyle1 ={\r\n        width : 175,\r\n        marginBottom : '10px',\r\n    }\r\n    const textStyle2 ={\r\n        width : 250,\r\n        marginBottom : '10px',\r\n    }\r\n    const btnstyle ={\r\n        margin : '18px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#845460'\r\n    }\r\n    const btnstyle2 ={\r\n        margin : '8px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#f6bd63',\r\n        width : '80px',\r\n        height : '40px',\r\n        borderRadius : '15px 15px',\r\n        border : 'none',\r\n        cursor : 'pointer',\r\n    }\r\n    const disablestyle ={\r\n        margin : '18px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : 'rgb(189, 189, 189)',\r\n    }\r\n    const pstyle ={\r\n        margin : '0 0',\r\n        fontWeight : 'bolder',\r\n        fontSize : '10px',\r\n    }\r\n    const linkstyle ={\r\n        color : 'inherit',\r\n    }\r\n    const spanstyle ={\r\n        fontSize : '25px',\r\n        fontWeight : 'bolder',\r\n        marginLeft : '70px',\r\n    }\r\n\r\n    useEffect(()=>{\r\n        // if(Password !== ConfirmPassword){\r\n        //     setcheckPassword(false);\r\n        // }else{\r\n        //     setcheckPassword(true);\r\n        // }\r\n        if(Password.length === 0 && ConfirmPassword.length === 0){\r\n            setcheckPassword(true);\r\n            setisCheckedPassword(false);\r\n        }else if(Password.length < 5 && ConfirmPassword.length < 5){\r\n            setcheckPassword(false);\r\n            setisCheckedPassword(false);\r\n        }else if(Password !== ConfirmPassword){\r\n            setcheckPassword(false);\r\n            setisCheckedPassword(false);\r\n        }else{\r\n            setcheckPassword(true);\r\n            setisCheckedPassword(true);\r\n        }\r\n    },[Password, ConfirmPassword])\r\n\r\n    useEffect(()=>{\r\n        if(Phone.length === 11) {\r\n            setPhone(Phone.replace(/-/g,'').replace(/(\\d{3})(\\d{4})(\\d{4})/, '$1-$2-$3'));\r\n        }\r\n    }, [Phone]);\r\n\r\n    return (\r\n        <Grid>\r\n            <Paper elevation={10} style={paperStyle} >\r\n                <Grid align=\"left\">\r\n                    <Typography>\r\n                        <Link to=\"/\" style={linkstyle}>\r\n                            <ArrowBackIosIcon />\r\n                        </Link>\r\n                        <span style={spanstyle}>회원가입</span>\r\n                    </Typography>\r\n                </Grid>\r\n                <hr style={hrstyle}/>\r\n                <form onSubmit={onSubmitHandler}>\r\n                    <div style={divstyle1}>\r\n                        <TextField style={textStyle1} id=\"standard-basic\" label=\"아이디\" type=\"text\" value={UserId} onChange={onUserIdHandler} />\r\n                        <button type=\"submit\" style={btnstyle2} onClick={onCheckIdHandler}>중복확인</button>\r\n                        {NoticeId.length !== 0 ? <p style={pstyle}>{NoticeId}</p> : null}\r\n                        {checkPassword === true ? <TextField style={textStyle2} id=\"standard-basic\" label=\"비밀번호\" type=\"password\" value={Password} onChange={onPasswordHandler} /> : <TextField error id=\"standard-error-helper-text\" label=\"비밀번호\" type=\"password\" value={Password} onChange={onPasswordHandler} helperText=\"Incorrect entry.\" />}\r\n                        {checkPassword === true ? <TextField style={textStyle2} id=\"standard-basic\" label=\"비밀번호확인\" type=\"password\" value={ConfirmPassword} onChange={onPasswordHandler2} /> : <TextField error id=\"standard-error-helper-text\" label=\"비밀번호확인\" type=\"password\" value={ConfirmPassword} onChange={onPasswordHandler2} helperText=\"최소 5자리 이상 조합\"/>}\r\n                        <TextField style={textStyle1} id=\"standard-basic\" label=\"닉네임\" type=\"text\" value={NickName} onChange={onNickNameHandler} />\r\n                        <button type=\"submit\" style={btnstyle2} onClick={onCheckNick}>중복확인</button>\r\n                        {NoticeNick.length !== 0 ? <p style={pstyle}>{NoticeNick}</p> : null}\r\n                        <TextField style={textStyle2} id=\"standard-basic\" label=\"이름\" type=\"text\" value={Name} onChange={onNameHandler} />\r\n                        <TextField style={textStyle1} id=\"standard-basic\" label=\"휴대폰번호\" type=\"text\" value={Phone} onChange={onPhoneHandler} />\r\n                        <button type=\"submit\" style={btnstyle2} onClick={onCheckPhone}>중복확인</button>\r\n                        {NoticePhone.length !== 0 ? <p style={pstyle}>{NoticePhone}</p> : null}\r\n\r\n                        <div style={divstyle2}>\r\n                            {/* <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                // label=\"모두 동의합니다\"\r\n                            />\r\n                            모두 동의합니다.<br/> */}\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                        required\r\n                                    />\r\n                                }\r\n                                label=\"이용약관 동의\"\r\n                            />\r\n                            {/* 이용약관 동의<br/> */}\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                        required\r\n                                    />\r\n                                }\r\n                                label=\"개인정보 취급방침 동의\"\r\n                            />\r\n                            {/* 개인정보 취급방침 동의<br/> */}\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                        required\r\n                                    />\r\n                                }\r\n                                label=\"마케팅 정보 수신 동의\"\r\n                            />\r\n                            {/* 마케팅 정보 수신 동의<br/> */}\r\n                        </div>\r\n                    </div>\r\n                    {/* {Checking >= 4 ? <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>Sign up</Button> : <Button disabled style={disablestyle} variant=\"contained\" fullWidth>Sign up</Button>} */}\r\n                    {isCheckedId && isCheckedNick && isCheckedPhone && isCheckedPassword ? <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>Sign up</Button> : <Button disabled style={disablestyle} variant=\"contained\" fullWidth>Sign up</Button>}\r\n                    \r\n                </form>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\MainPage\\Main.js",["233","234","235","236"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './Main.scss';\r\nimport LeftPage from '../LeftPage/LeftPage';\r\nimport { getUser } from '../../api/actions/main_action';\r\nimport { getFriendList } from '../../api/actions/friend_action';\r\n\r\nconst Main = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [UserData, setUserData] = useState(\"\");\r\n    // const [ListFriend, setListFriend] = useState(\"\");\r\n    const [Update, setUpdate] = useState(false);\r\n\r\n    const onClickHandler = () =>{\r\n        axios.get('/api/users/logout')\r\n        .then(response => {\r\n            if(response.data.success){\r\n                props.history.push(\"/\");\r\n            }else{\r\n                alert('로그아웃 하는데 실패 했습니다.');\r\n            }\r\n        })\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        dispatch(getUser())\r\n        .then(response => {\r\n            setUserData(response.payload);\r\n        })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        dispatch(getUser())\r\n        .then(response => {\r\n            setUserData(response.payload);\r\n        })\r\n    }, [Update])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"box\">\r\n                <LeftPage props={props} UserData={UserData} Update={Update} setUpdate={setUpdate}/>\r\n                {/* <div className=\"right_side\">\r\n                    dddd\r\n                </div> */}\r\n                {/* <button style={{marginLeft:'10px'}} onClick={onClickHandler}>\r\n                    로그아웃\r\n                </button> */}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(Main);","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\user_reducer.js",["237"],"const LOGIN_USER = \"login_user\";\r\nconst REGISTER_USER = \"register_user\";\r\nconst AUTH_USER = \"auth_user\";\r\nconst CHECK_ID = 'checkid_user';\r\nconst CHECK_NICK = 'checknick_user';\r\nconst GET_USER = \"get_user\";\r\nconst CHECK_PHONE = 'checkphone_user';\r\nconst UPDATE_USER = 'update_user';\r\n\r\nexport default function(state={}, action){\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return { ...state, loginSuccess : action.payload };\r\n        case REGISTER_USER:\r\n            return {...state, register : action.payload };\r\n        case AUTH_USER:\r\n            return {...state, userData : action.payload };\r\n        case CHECK_ID:\r\n            return {...state, chekckId : action.payload};\r\n        case CHECK_NICK:\r\n            return {...state, checkNick : action.payload};    \r\n        case GET_USER:\r\n            return {...state, userData : action.payload};\r\n        case CHECK_PHONE:\r\n            return {...state, checkPhone : action.payload};\r\n        case UPDATE_USER:\r\n            return {...state, updateUser : action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\friend_reducer.js",["238"],"const SEARCH_USER = \"search_user\";\r\nconst ADD_USER = \"add_user\";\r\nconst SHOW_FRIEND = 'show_friend';\r\n\r\nexport default function(state={}, action){\r\n    switch (action.type) {\r\n        case SEARCH_USER:\r\n            return {...state, friend : action.payload}\r\n        case ADD_USER:\r\n            return {...state, plus : action.payload}\r\n        case SHOW_FRIEND:\r\n            return {...state, Myfriend : action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\socket_reducer.js",["239","240"],"const SOCKET_SEND = 'socket_send';\r\nconst SOCKET_RECEIVE = 'socket_receive';\r\nconst SOCKET_LIST = 'socket_list';\r\nconst SOCKET_CHATINFORM = 'socket_chatinform';\r\nconst SOCKET_FRIEND_PROFILE = 'socket_profile';\r\nconst SOCKET_COUNT = 'socket_count';\r\n\r\nexport default function(state={}, action){\r\n    switch (action.type) {\r\n        case SOCKET_SEND:\r\n            return {...state, chats: action.payload }\r\n        // case SOCKET_RECEIVE:\r\n        //     let newChatList = state.chatList.slice();\r\n        //     newChatList.push(action.data);\r\n        //     return { ...state, chatList: newChatList };\r\n        case SOCKET_LIST:\r\n            return {...state, list: action.payload }\r\n        case SOCKET_CHATINFORM:\r\n            return {...state, inform: action.payload}\r\n        case SOCKET_FRIEND_PROFILE:\r\n            return {...state, indid: action.payload}\r\n        case SOCKET_COUNT:\r\n            return {...state, count : action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\reducers\\chat_reducer.js",["241"],"const CHAT_SERVER = 'chat_server';\r\nconst AFTER_POST_MESSAGE = 'after_post_message';\r\nconst CHECK_CHAT = 'check_chat';\r\n\r\nexport default function(state={},action){\r\n    switch(action.type){\r\n        case CHAT_SERVER:\r\n            return { ...state, chats: action.payload }\r\n        case AFTER_POST_MESSAGE:\r\n                return { ...state, chats: state.chats.concat(action.payload) }\r\n        case CHECK_CHAT:\r\n                return { ...state, check: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\main_action.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\user_action.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\friend_action.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\LeftPage.js",["242","243"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\FriendList.js",["244","245","246","247","248"],"import React, { useState, useEffect, useCallback } from 'react';\r\nimport LeftTitle from './Title/LeftTitle';\r\nimport MyProfile from './MyProfile/MyProfile';\r\nimport PlusFriend from './PlusFriend/PlusFriend';\r\nimport { withRouter } from 'react-router-dom';\r\nimport SearchFriend from './PlusFriend/SearchFriend';\r\nimport { searchFriend, friendAdd } from '../../../api/actions/friend_action';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport ShowFriend from './ShowFriend/ShowFriend';\r\nimport { getFriendList } from '../../../api/actions/friend_action';\r\n\r\nconst FriendList = ({UserData}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [Search, setSearch] = useState(false);\r\n    const [Friend, setFriend] = useState(false);\r\n    const [FriendClick, setFriendClick] = useState(false);\r\n    const [InputText, setInputText] = useState(\"\");\r\n    const [InputText2, setInputText2] = useState(\"\");\r\n    const [friendDB, setfriendDB] = useState(\"\");\r\n    const [ListFriend, setListFriend] = useState(\"\");\r\n    const [ClickEvent, setClickEvent] = useState(false);\r\n\r\n    const onToggle = () =>{\r\n        setSearch(!Search);\r\n        setFriend(false);\r\n        setFriendClick(false);\r\n    }\r\n    const onToggle2 = () =>{\r\n        setFriend(!Friend);\r\n        setSearch(false);\r\n        setFriendClick(false);\r\n    }\r\n    const onToggle3 = () =>{\r\n        setFriendClick(!Friend);\r\n        setFriend(!Friend);\r\n        setSearch(false);\r\n    }\r\n    const onInputTextHandler = (e) =>{\r\n        setInputText(e.target.value);\r\n    }\r\n    const onInputTextHandler2 = (e) =>{\r\n        setInputText2(e.target.value);\r\n    }\r\n\r\n    const onPlustHandler = (e) =>{\r\n        let body = {\r\n            data : e,\r\n            user : UserData.userId\r\n        }\r\n        \r\n        dispatch(friendAdd(body))\r\n        .then(response => {\r\n            setClickEvent(!ClickEvent);\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setClickEvent(!ClickEvent);\r\n    },[UserData])\r\n\r\n    useEffect(()=>{\r\n        let body = {\r\n            userId : UserData.userId\r\n        }\r\n\r\n        dispatch(getFriendList(body))\r\n        .then(response => {\r\n            setListFriend(response.payload);\r\n        })\r\n    },[ClickEvent])\r\n\r\n    useEffect(() => {\r\n        if(InputText2 !== \"\"){\r\n            let body = {\r\n                data : InputText2\r\n            }\r\n            \r\n            dispatch(searchFriend(body))\r\n            .then(response => {\r\n                setfriendDB(response.payload);\r\n            })\r\n\r\n        }else{\r\n            setfriendDB(\"\");\r\n        }\r\n    }, [InputText2])\r\n\r\n    \r\n    return (\r\n        <div style={{height:'520px',overflow:'scroll'}}>\r\n            <LeftTitle \r\n                Search={Search}\r\n                Friend={Friend}\r\n                FriendClick={FriendClick}\r\n                InputText={InputText}\r\n                InputText2={InputText2}\r\n                onToggle={onToggle}\r\n                onToggle2={onToggle2}\r\n                onInputTextHandler={onInputTextHandler}\r\n                onInputTextHandler2={onInputTextHandler2}\r\n            />\r\n            <MyProfile\r\n                UserData={UserData}\r\n            />\r\n            <div className=\"line\" />\r\n            {InputText2.length === 0 ?\r\n                <PlusFriend\r\n                    onToggle3={onToggle3}\r\n                />\r\n                :\r\n                <SearchFriend\r\n                    friendDB={friendDB}\r\n                    UserData={UserData}\r\n                    onPlustHandler={onPlustHandler}\r\n                    ListFriend={ListFriend}\r\n                />\r\n            }\r\n            <div className=\"line\" />\r\n            <ShowFriend\r\n                UserData={UserData}\r\n                ListFriend={ListFriend}\r\n                setClickEvent={setClickEvent}\r\n                ClickEvent={ClickEvent}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(FriendList);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\ChatList\\Chat.js",["249","250"],"import React, { useState, Component } from 'react';\r\nimport { Button, Input } from '@material-ui/core';\r\nimport SubdirectoryArrowLeftIcon from '@material-ui/icons/SubdirectoryArrowLeft';\r\nimport io from \"socket.io-client\";\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { getChats, afterPostMessage } from \"../../../api/actions/chat_action\";\r\nimport ChatCard from './Sections/ChatCard';\r\nimport Dropzone from 'react-dropzone';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\n\r\nexport class Chat extends Component {\r\n\r\n    state = {\r\n        chatMessage: \"\",\r\n    }\r\n\r\n    componentDidMount() {\r\n        let server = \"http://localhost:4000\";\r\n\r\n        this.props.dispatch(getChats());\r\n\r\n        this.socket = io(server);\r\n\r\n        this.socket.on(\"Output Chat Message\", messageFromBackEnd => {\r\n            this.props.dispatch(afterPostMessage(messageFromBackEnd));\r\n        })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.messagesEnd.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n\r\n    handleSearchChange = (e) => {\r\n        this.setState({\r\n            chatMessage: e.target.value,\r\n        })\r\n    }\r\n\r\n    renderCards = () =>\r\n        this.props.chats.chats\r\n        && this.props.chats.chats.map((chat) => (\r\n            <ChatCard key={chat._id}  {...chat} />\r\n        ));\r\n\r\n    submitChatMessage = (e) => {\r\n        e.preventDefault();\r\n        if(this.state.chatMessage !== \"\"){\r\n            let chatMessage = this.state.chatMessage;\r\n            let _id = this.props.user.userData._id;\r\n            let userName = this.props.user.userData.userName;\r\n            let userImage = this.props.user.userData.image;\r\n            let nowTime = moment();\r\n            let type = \"Text\";\r\n    \r\n            this.socket.emit(\"Input Chat Message\", {\r\n                chatMessage,\r\n                _id,\r\n                userName,\r\n                userImage,\r\n                nowTime,\r\n                type,\r\n            });\r\n        }\r\n        \r\n        this.setState({ chatMessage: \"\" });\r\n    }\r\n\r\n    onDrop = (files) => {\r\n\r\n        if (this.props.user.userData && !this.props.user.userData.isAuth) {\r\n            return alert('Please Log in first');\r\n        }\r\n\r\n        let formData = new FormData;\r\n\r\n        const config = {\r\n            header: { 'content-type': 'multipart/form-data' }\r\n        }\r\n\r\n        formData.append(\"file\", files[0])\r\n\r\n        axios.post('/api/chats/uploadfiles', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    let chatMessage = response.data.url;\r\n                    let _id = this.props.user.userData._id;\r\n                    let userName = this.props.user.userData.userName;\r\n                    let userImage = this.props.user.userData.image;\r\n                    let nowTime = moment();\r\n                    let type = \"VideoOrImage\";\r\n\r\n                    this.socket.emit(\"Input Chat Message\", {\r\n                        chatMessage,\r\n                        _id,\r\n                        userName,\r\n                        userImage,\r\n                        nowTime,\r\n                        type\r\n                    });\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{height:'300px', overflow:'hidden'}}>\r\n                    <div style={{overflow:'scroll'}}>\r\n                        {\r\n                            this.props.chats && (\r\n                                this.renderCards()\r\n                            )\r\n                        }\r\n                        <div\r\n                            ref={el => {\r\n                                this.messagesEnd = el;\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <form onSubmit={this.submitChatMessage}>\r\n                    <Input\r\n                        id=\"message\"\r\n                        color=\"secondary\"\r\n                        placeholder=\"메세지를 작성하세요\"\r\n                        inputProps={{ 'aria-label': 'description' }}\r\n                        value={this.state.chatMessage}\r\n                        onChange={this.handleSearchChange}\r\n                    />\r\n                    <Dropzone onDrop={this.onDrop}>\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <section>\r\n                                <div {...getRootProps()}>\r\n                                    <input {...getInputProps()} />\r\n                                    <Button>\r\n                                        <DownloadOutlined type=\"upload\" />\r\n                                    </Button>\r\n                                </div>\r\n                            </section>\r\n                        )}\r\n                    </Dropzone>\r\n                    <Button variant=\"outlined\" color=\"secondary\" type=\"submit\" onClick={this.submitChatMessage}>\r\n                        <SubdirectoryArrowLeftIcon />\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user : state.user,\r\n        chats : state.chat,\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Chat);\r\n\r\n\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Internet.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\ViewFriend\\ViewFriend.js",["251","252","253"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getFriend } from '../../../api/actions/chat_action';\r\nimport TelegramIcon from '@material-ui/icons/Telegram';\r\n\r\nconst ViewFriend = ({match, UserData}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const data = match.params.search || null;\r\n\r\n    const [DataFriend, setDataFriend] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n\r\n        let body = {\r\n            data : data\r\n        }\r\n\r\n        dispatch(getFriend(body))\r\n        .then(response => {\r\n            setDataFriend(response.payload);\r\n        })\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"friend_profile\">\r\n            <div>\r\n                <img src={DataFriend.image} />\r\n                <div className=\"friend_name\">{DataFriend.userName}</div>\r\n                <div className=\"friend_say\">{DataFriend.message}</div>\r\n                <Link to={`/main/ChatingRoom/${UserData._id}_${DataFriend._id}`}>\r\n                    <TelegramIcon />\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ViewFriend);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatingRoom.js",["254","255","256","257","258","259","260","261","262","263","264","265"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatingList.js",["266","267","268","269"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ChatTitle from './ChatTitle';\r\nimport AddBaner from './AddBaner';\r\nimport { ListFind } from '../../../api/actions/socket_action';\r\nimport ChatItem from './ChatItem';\r\n\r\nconst ChatingList = ({UserData, checktUpdate, setchecktUpdate}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [roomName, setRoomName ] = useState(\"\");\r\n    const [ListRoom, setListRoom] = useState([]);\r\n\r\n    const handleRoomNameChange = (event) => {\r\n        setRoomName(event.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let body = {\r\n            _id : UserData._id\r\n        }\r\n        dispatch(ListFind(body))\r\n        .then(response => {\r\n            setListRoom(response.payload);\r\n        });\r\n    }, [UserData])\r\n    \r\n    const renderChat = () => \r\n        ListRoom.map( (chat)=>(\r\n            <ChatItem key={chat} chat={chat} UserData={UserData} checktUpdate={checktUpdate}/>\r\n        ))\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <ChatTitle />\r\n            <AddBaner />\r\n            {\r\n                renderChat()\r\n            }\r\n            {/* <input \r\n                type=\"text\"\r\n                placeholder=\"Room\"\r\n                value={roomName}\r\n                onChange={handleRoomNameChange}\r\n                className=\"text-input-field\"\r\n            /> */}\r\n            {/* <Link to={`/main/ChatingRoom/${roomName}`}>\r\n                Join room\r\n            </Link> */}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ChatingList);","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\UpdateUser\\UpdateUser.js",["270","271","272","273","274"],"import React, {useState, useEffect} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { updateUser, uploadImage, uploadImageTmp } from \"../../../api/actions/user_action\";\r\nimport { Button } from '@material-ui/core';\r\nimport '../../MainPage/Main.scss';\r\n\r\nconst UpdateUser = ({UserData, history, setUpdate, Update}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [image, setImage] = useState(UserData.image);\r\n    const [FilePath, setFilePath] = useState(\"\")\r\n    const [inputs, setInputs] = useState({\r\n        nick: UserData.userNickName,\r\n        message: UserData.message,\r\n    })\r\n    const {nick, message} = inputs\r\n\r\n    useEffect(() => {\r\n        setInputs({\r\n            nick: UserData.userNickName,\r\n            message: UserData.message,\r\n        })\r\n    }, [UserData])\r\n    useEffect(() => {\r\n        setImage(UserData.image);\r\n    }, [UserData, image]);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        console.log('온체인지파일',e.target.nick.value, e.target.message.value, e.target.profile_img.files[0])\r\n        formData.append('userId', UserData.userId)\r\n        formData.append('nick', e.target.nick.value)\r\n        formData.append('message', e.target.message.value)\r\n        formData.append('profile_img', e.target.profile_img.files[0])\r\n\r\n        dispatch(updateUser(formData))\r\n        .then(response=>{\r\n            history.push('/main/FriendList')\r\n            setUpdate(!Update)\r\n        })\r\n    }\r\n    const onChange = (e) => {\r\n        const {className, value} = e.target\r\n        const nextInputs = {\r\n            ...inputs,\r\n            [className] : value,\r\n        }\r\n        setInputs(nextInputs)\r\n    }\r\n\r\n    const btnstyle ={\r\n        margin : '18px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#845460'\r\n    }\r\n    const imgStyle = {\r\n        width: '100%',\r\n        overFit: 'cover',\r\n    }\r\n\r\n    return (\r\n        <div className=\"change_update\">\r\n            <div className=\"change\">프로필 수정</div>\r\n            <div className=\"form_change\">\r\n                <form onSubmit={onSubmit} encType=\"multipart/form-data\">\r\n                    <label className=\"profile_img_wrapper\" htmlFor=\"profile_img\">\r\n                        <img style={imgStyle} src={image} />\r\n                    </label>\r\n                    <input type=\"file\" name='profile_img' accept='image/jpg, image/png, image/jpeg, image/gif' multiple={false} />\r\n                    <input className=\"nick\" type=\"text\" value={nick} onChange={onChange} name=\"nick\"/>\r\n                    <input className=\"message\" type=\"text\" value={message} onChange={onChange} name=\"message\"/>\r\n                    <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>수정 완료</Button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(UpdateUser);","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\ShowFriend\\ShowFriend.js",["275","276","277"],"import React, {useEffect} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ShowFriend = React.memo(({UserData, ListFriend, ClickEvent, setClickEvent}) => {\r\n\r\n    if(ListFriend.Myfriend !== undefined){\r\n        return (\r\n            <div>\r\n                {\r\n                    ListFriend.Myfriend.map((friend)=>(\r\n                        <Link key={friend._id} to={`/main/ViewFriend/${friend.friendId}`} style={{textDecoration:'none',color:'#000'}}>\r\n                            <div className=\"myProfile\" key={friend._id}>\r\n                                <img src={friend.friendImage} />\r\n                                <div className=\"text_site\">\r\n                                    <div className=\"top\">{friend.friendName}</div>\r\n                                    <div className=\"bottom\">{friend.friendMessage}</div>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }else{\r\n        return (\r\n            <div>\r\n                <div>친구가 없습니다</div>\r\n            </div>\r\n        )\r\n    }\r\n})\r\n\r\nexport default withRouter(ShowFriend);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\SearchFriend.js",["278"],"import React from 'react';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport '../../../MainPage/Main.scss';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst SearchFriend = React.memo(({friendDB, UserData, onPlustHandler, ListFriend }) => {\r\n\r\n    if(friendDB.friend){\r\n        if(friendDB.friend.length !== 0){ //검색결과 있을 때\r\n            return (\r\n                <div>\r\n                    {\r\n                        friendDB.friend.map((searched) => (\r\n                            // let searched = searched.filter(exceptsearch => exceptsearch.userId === UserData.userId)\r\n                            searched.userId !== UserData.userId ?   //검색결과에서 자신 제외\r\n                                <div className=\"myProfile\" key={searched.userId} onClick={()=>onPlustHandler(searched.userId)}>\r\n                                    <img src={searched.image} />\r\n                                    <div className=\"text_site\">\r\n                                        <div className=\"top\">{searched.userName}</div>\r\n                                        <div className=\"bottom\">{searched.message}</div>\r\n                                    </div>\r\n                                    <AddBoxIcon className=\"plus\"/>\r\n                                </div>\r\n                                :\r\n                                <></>\r\n                        ))           \r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n        else{          //검색결과 없을 때\r\n            return(\r\n                <div>검색 결과가 없습니다</div>\r\n            )\r\n        }\r\n    }else{          //검색결과 없을 때\r\n        return(\r\n            <div>검색 결과가 없습니다</div>\r\n        )\r\n    }\r\n    \r\n    \r\n});\r\n\r\nexport default withRouter(SearchFriend);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\MyProfile\\MyProfile.js",["279","280","281"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst MyProfile = React.memo(({UserData}) => {\r\n\r\n    return (\r\n        <div className=\"myfile\">\r\n            <Link to=\"/main/UpdateUser\">\r\n                <img src={UserData.image} />\r\n                <div className=\"text_site\">\r\n                    <div className=\"top\">{UserData.userName}</div>\r\n                    <div className=\"bottom\">{UserData.message}</div>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default withRouter(MyProfile);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\PlusFriend\\PlusFriend.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\FriendList\\Title\\LeftTitle.js",["282"],"import axios from 'axios';\r\nimport React, { useRef, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../../../MainPage/Main.scss';\r\nimport {\r\n    SearchOutlined,\r\n    UserAddOutlined\r\n} from '@ant-design/icons';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst LeftTitle = React.memo(({\r\n    Search,\r\n    Friend,\r\n    FriendClick,\r\n    InputText,\r\n    InputText2,\r\n    onToggle,\r\n    onToggle2,\r\n    onInputTextHandler,\r\n    onInputTextHandler2\r\n}) => {\r\n\r\n    const inputEl = useRef(null);\r\n    const inputEl2 = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if(Search) inputEl.current.focus();\r\n        if(Friend) inputEl2.current.focus();\r\n        if(FriendClick) inputEl2.current.focus();\r\n    }, [Search, Friend, FriendClick])\r\n\r\n    return (\r\n        <div className=\"left_title\">\r\n            <div>친구</div>\r\n            <div className=\"search_friend\">\r\n                {Search ? <div className=\"input_box\"><input type=\"text\" placeholder=\"친구검색\" value={InputText} ref={inputEl} onChange={onInputTextHandler} /><SearchIcon className=\"search_icon\" /></div> : null}\r\n                {Friend || FriendClick ? <div className=\"input_box\"><input type=\"text\" placeholder=\"친구추가\" value={InputText2} ref={inputEl2} onChange={onInputTextHandler2}/><SearchIcon className=\"search_icon\" /></div> : null}\r\n                <SearchOutlined onClick={onToggle}/>\r\n                <UserAddOutlined onClick={onToggle2} className=\"add_friend\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default withRouter(LeftTitle);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\socket_action.js",["283"],"import axios from 'axios';\r\n\r\nconst SOCKET_SEND = 'socket_send';\r\nconst SOCKET_RECEIVE = 'socket_receive'\r\nconst SOCKET_LIST = 'socket_list';\r\nconst SOCKET_CHATINFORM = 'socket_chatinform';\r\nconst SOCKET_FRIEND_PROFILE = 'socket_profile';\r\nconst SOCKET_COUNT = 'socket_count';\r\n\r\nexport function getChats(dataToSubmit){\r\n    const request = axios.post('/api/chats/getChat',dataToSubmit)\r\n    .then(response => response.data)\r\n\r\n    return {\r\n        type :  SOCKET_SEND,\r\n        payload : request\r\n    }\r\n}\r\n\r\nexport function ListFind(dataToSubmit) {\r\n    const request = axios.post('/api/chats/ListShow', dataToSubmit)\r\n    .then(response => response.data)\r\n\r\n    return {\r\n        type : SOCKET_LIST,\r\n        payload : request\r\n    }\r\n}\r\n\r\nexport function ChatInform(dataToSubmit) {\r\n\r\n    const request = axios.post('/api/chats/textMessage',dataToSubmit)\r\n    .then(response => response.data)\r\n\r\n    return {\r\n        type : SOCKET_CHATINFORM,\r\n        payload : request\r\n    }\r\n}\r\n\r\nexport function FriendProfile(dataToSubmit) {\r\n    const request = axios.post('/api/chats/profiles',dataToSubmit)\r\n    .then(response => response.data)\r\n\r\n    return {\r\n        type : SOCKET_FRIEND_PROFILE,\r\n        payload : request\r\n    }\r\n}\r\n\r\nexport function CountHow(dataToSubmit){\r\n    const request = axios.post('/api/chats/countMessage',dataToSubmit)\r\n    .then(response => response.data )\r\n\r\n    return {\r\n        type : SOCKET_COUNT,\r\n        payload : request\r\n    }\r\n}\r\n\r\n// export function receiveChat(data){\r\n\r\n//     return {\r\n//         type: SOCKET_RECEIVE,\r\n//         data\r\n//     }\r\n// }\r\n\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\AddBaner.js",["284","285"],"import React, { useState, useEffect } from 'react';\r\nimport '../../MainPage/Main.scss';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst AddBaner = () => {\r\n\r\n    const [Image, setImage] = useState(\"\");\r\n\r\n    const data = [\r\n        '/advertise/k-000.png',\r\n        '/advertise/k-001.png',\r\n        '/advertise/k-002.png',\r\n        '/advertise/k-003.png',\r\n        '/advertise/k-004.png',\r\n        '/advertise/k-005.png',\r\n        '/advertise/k-006.png',\r\n        '/advertise/k-007.png',\r\n        '/advertise/k-008.png',\r\n        '/advertise/k-009.png',\r\n        '/advertise/k-0010.png',\r\n        '/advertise/k-0011.png',\r\n    ]\r\n\r\n    useEffect(() => {\r\n        // 0~9 랜덤\r\n        const randomNum = Math.floor(Math.random()*10 + 1);\r\n        setImage(data[randomNum]);\r\n        console.log(randomNum);\r\n    }, [])\r\n    return (\r\n        <div classname=\"big_ad\">\r\n            <img className=\"ad_ver\" src={Image} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(AddBaner);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatTitle.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\useChat.js",["286","287"],"import React, {useEffect, useRef, useState} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport socketIOClient from 'socket.io-client';\r\n\r\nconst NEW_CHAT_MESSAGE_EVENT = 'newChatMessage';\r\nconst SOCKET_SERVER_URL = \"http://localhost:4000\";\r\n\r\nconst useChat = (roomId) => {\r\n\r\n    const [Messages, setMessages] = useState([]);\r\n    const socketRef = useRef();\r\n    \r\n    useEffect(() => {\r\n\r\n        // 웹소켓 연결을 한다\r\n        socketRef.current = socketIOClient(SOCKET_SERVER_URL,{\r\n            query : { roomId },\r\n        });\r\n\r\n        // 들어오는 메시지를 듣는다\r\n        socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, (message) => {\r\n            const incomingMessage = {\r\n                ...message,\r\n                ownedByCurrentUser : message.senderId === socketRef.current.id,\r\n            };\r\n            setMessages((messages)=>[...messages, incomingMessage]);\r\n        });\r\n\r\n        // 소켓 연결이 끝나면 부순다\r\n        return () => { \r\n            socketRef.current.disconnect();\r\n        }\r\n\r\n    }, [roomId])\r\n\r\n    // 같은 방에 있는 유저들에게 메세지를 전송한다\r\n    const sendMessage = (messageBody, Id, roomId, userName, image) => {\r\n        socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\r\n            message: messageBody,\r\n            senderId: socketRef.current.id,\r\n            sendUser : Id,\r\n            roomName : roomId,\r\n            userName : userName,\r\n            image : image,\r\n            user : Id\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return { Messages, sendMessage }\r\n}\r\n\r\nexport default useChat;","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\chat_action.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\News\\News.js",["288"],"import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\nimport usePromise from '../../../../usePromise';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport NewsItem from './NewsItem';\r\n\r\nconst News = ({ UserData }) => {\r\n\r\n    const [Count, setCount] = useState(0);\r\n\r\n\r\n    const [loading, resolved, error] = usePromise(() => {\r\n        return axios.get(\r\n            `https://newsapi.org/v2/top-headlines?country=kr&apiKey=112d8e8b89e94be1a897eaffad725b6a`\r\n        );\r\n    }, [UserData]);\r\n\r\n    // 대기중 일때 실행\r\n    if (loading) {\r\n        return (\r\n            <LoadingOutlined className=\"loading\"/>\r\n        )\r\n    }\r\n    // 값이 없으면 null 값으로 반환\r\n    if (!resolved) {\r\n        return (\r\n            <div>뉴스오류</div>\r\n        );\r\n    }\r\n\r\n    // resolved값이 유효할 때\r\n    const { articles } = resolved.data;\r\n\r\n    return (\r\n        <div className=\"news_top\">\r\n            {articles.map((article)=>(\r\n                <NewsItem key={article.url} article={article} Count={Count} setCount={setCount}/>\r\n                ))}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default withRouter(News);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\ChatList\\Sections\\ChatCard.js",["289","290","291","292","293"],"import React from 'react';\r\nimport moment from 'moment';\r\nimport { Comment, Tooltip, Avatar } from 'antd';\r\n\r\nfunction ChatCard(props) {\r\n\r\n    const profileImgStyle ={\r\n        width: '50px',\r\n        height: '50px',\r\n        // overFit: 'cover',\r\n        borderRadius: '50%',\r\n    }\r\n    const imgStyle ={\r\n        width: '100px',\r\n    }\r\n    return (\r\n        <div>\r\n            <div style={{display: 'flex', flexDirection:'column'}}>\r\n                <div>{props.sender.userName}</div>\r\n                <img src={props.sender.image} style={profileImgStyle}/>\r\n                {/* <p>{props.message}</p> */}\r\n                {\r\n                props.message.substring(0,6)===\"/chats\" ?\r\n                props.message.substring(props.message.length - 3, props.message.length) === 'mp4' ?\r\n                <video \r\n                // src={`http://localhost:4000/${props.message}`} \r\n                src={props.message}\r\n                alt=\"video\"\r\n                type=\"video/mp4\" controls\r\n                />\r\n                :\r\n                <img \r\n                style={imgStyle}\r\n                // src={`http://localhost:4000/${props.message}`} \r\n                src={props.message}\r\n                alt=\"image\"\r\n                />\r\n                :\r\n                <p>{props.message}</p>\r\n                }\r\n                <div title={moment().format('YYYY-MM-DD HH:mm:ss')}>\r\n                        <span>{moment(props.sender.nowTime).format('YYYY-MM-DD HH:mm:ss')}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatCard\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\IntTitle\\IntTitle.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\Shop.js",["294","295"],"import React, { useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport ShopItem from './ShopItem';\r\n\r\nconst Shop = ({location}) => {\r\n    function getUrlParams() {\r\n        var params = {};\r\n        location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(str, key, value) { params[key] = value; });\r\n        return params;\r\n    }\r\n    const query = getUrlParams();\r\n    const dataBase= [\r\n        {\r\n            image: '/shopping/shopping_1.png',\r\n            productName: '오트밀크로 만든 쫀득 수제 생초콜릿 5종(밀크/다크/녹차/인절미/누텔라)',\r\n            productPrice: 15900,\r\n            productDesc: '/shopping/shopping_1_desc.jpg',\r\n        },\r\n        {\r\n            image: '/shopping/shopping_2.jpg',\r\n            productName: '\"고마운분께 감사선물\" 하루견과 고마워요/사랑해요/감사해요 30입세트',\r\n            productPrice: 13900,\r\n            productDesc: '/shopping/shopping_2_desc.jpg',\r\n        },\r\n        {\r\n            image: '/shopping/shopping_3.jpg',\r\n            productName: '[디저트선물] 프랑스 프리미엄 마카롱 (12입)',\r\n            productPrice: 12500,\r\n            productDesc: '/shopping/shopping_3_desc.jpg',\r\n        },\r\n        {\r\n            image: '/shopping/shopping_4.jpg',\r\n            productName: '\"내마음은 하트\" 페레로로쉐 T8 하트 초콜릿',\r\n            productPrice: 8400,\r\n            productDesc: '/shopping/shopping_4_desc.jpg',\r\n        },\r\n    ]\r\n\r\n    const boxStyle = {\r\n      display: \"inline-block\",\r\n      width: \"43%\",\r\n      padding: \"10% 0 0\",\r\n      textDecoration: 'none',\r\n      color: 'inherit',\r\n      fontSize: '13px',\r\n    };\r\n\r\n    const titleStyle = {\r\n      display: \"-webkit-box\",\r\n      fontSize: \"12px\",\r\n      width: \"100%\",\r\n      height: \"35px\",\r\n      overflow: \"hidden\",\r\n      whiteSpace: 'normal',\r\n      textOverflow: \"ellipsis\",\r\n      margin: '3% 0 3%'\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"products_section\" style={{display: 'flex', justifyContent: 'space-around', flexWrap: 'wrap', width: '90%', margin: '0 auto'}}>\r\n                {query.item === undefined ?\r\n                dataBase.map((productBox, index) => (\r\n                    // <Link to={`/main/Internet/Shop/${index+1}`} className=\"products_box\" style={boxStyle}>\r\n                    <Link to={`/main/Internet/Shop?item=${index}`} className=\"products_box\" style={boxStyle}>\r\n                        <img className=\"products_img\" src={productBox.image} style={{width: '100%'}}/>\r\n                        <div className=\"products_title\" style={titleStyle}>{productBox.productName}</div>\r\n                        <div className=\"products_price\" style={{fontWeight: '700'}}>{productBox.productPrice.toLocaleString()}원</div>\r\n                    </Link>\r\n                ))\r\n                :\r\n                <ShopItem productBox={dataBase[query.item]} querynum={query.item}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Shop);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\News\\NewsItem.js",["296","297","298"],"import React, {useEffect} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../../../MainPage/Main.scss';\r\n\r\nconst NewsItem = ({ article, Count, setCount }) => {\r\n\r\n    const { title, description, url, urlToImage } = article;\r\n\r\n    // if (Count % 3 === 0) {\r\n        return (\r\n            <div>\r\n                \r\n                    <div className=\"box_article\">\r\n                        <a href={url} target=\"_blank\" rel=\"noopner noreferrer\">\r\n                        {urlToImage ? \r\n                            <img src={urlToImage} alt=\"해당 기사 사진이 오류입니다\" />\r\n                            :\r\n                            <img src='/gyeran.png'/>\r\n                        }\r\n                            <span>{title}</span>\r\n                        </a>\r\n                    </div>\r\n               \r\n            </div>\r\n        )\r\n    // }else {\r\n    //     return (\r\n    //         <div>\r\n    //             <div>\r\n    //                 <a href={url} target=\"_blank\" rel=\"noopner noreferrer\">\r\n    //                     <span>{title}</span>\r\n    //                 </a>\r\n    //             </div>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n}\r\n\r\nexport default withRouter(NewsItem);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Shop\\ShopItem.js",["299","300","301","302"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n// import { payReady } from '../../../../api/actions/pay_action';\r\n\r\nconst ShopItem = ({productBox, querynum}) => {\r\n  const dispatch = useDispatch();\r\n    const [state, setState] = useState({\r\n      // 응답에서 가져올 값들\r\n      next_redirect_pc_url: \"\",\r\n      tid: \"\",\r\n      // 요청에 넘겨줄 매개변수들\r\n      params: {\r\n        cid: \"TC0ONETIME\",\r\n        partner_order_id: \"partner_order_id\",\r\n        partner_user_id: \"partner_user_id\",\r\n        // item_name: productBox.title,\r\n        item_name: \"choco\",\r\n        quantity: 1,\r\n        // total_amount: productBox.productPrice,\r\n        total_amount: 30000,\r\n        tax_free_amount: 0,\r\n        approval_url: \"http://localhost:3000/payment/approve\",\r\n        fail_url: \"http://localhost:3000/payment/fail\",\r\n        cancel_url: \"http://localhost:3000/payment/cancel\",\r\n      },\r\n    });\r\n\r\n    const { next_redirect_pc_url, params } = state;\r\n    // useEffect(() => {\r\n    //     const {params} = state;\r\n    //     axios({\r\n    //         // 프록시에 카카오 도메인을 설정했으므로 결제 준비 url만 주자\r\n    //         // url: \"https://kapi.kakao.com/kapi/payment/ready\",\r\n    //         url: \"/kapi/payment/ready\",\r\n    //         // 결제 준비 API는 POST 메소드라고 한다.\r\n    //         method: \"POST\",\r\n    //         headers: {\r\n    //           // 카카오 developers에 등록한 admin키를 헤더에 줘야 한다.\r\n    //           Authorization: \"KakaoAK ca4cd7847b43dd1a89e836e3ce896daf\",\r\n    //           \"Content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n    //         },\r\n    //         // 설정한 매개변수들\r\n    //         params,\r\n    //       }).then((response) => {\r\n    //         // 응답에서 필요한 data만 뽑는다.\r\n    //         const {\r\n    //           data: { next_redirect_pc_url, tid }\r\n    //         } = response;\r\n    //         console.log(next_redirect_pc_url);\r\n    //   console.log(tid);\r\n    //   // 응답 data로 state 갱신\r\n    //   setState({ next_redirect_pc_url, tid });\r\n    // });\r\n    // }, [])\r\n    //////여기까지 카카오페이////\r\n\r\n    const onClick = (e) => {\r\n        axios({\r\n          url: \"https://kapi.kakao.com/v1/payment/ready\",\r\n          // 결제 준비 API는 POST 메소드라고 한다.\r\n          method: \"POST\",\r\n          headers: {\r\n            // 카카오 developers에 등록한 admin키를 헤더에 줘야 한다.\r\n            Authorization: \"KakaoAK ca4cd7847b43dd1a89e836e3ce896daf\",\r\n            \"Content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n            // \"Access-Control-Allow-Origin\": \"http://localhost:3000\",\r\n          },\r\n          // 설정한 매개변수들\r\n          params,\r\n        }).then((response) => {\r\n            axios(response.next_redirect_pc_url)\r\n          // 응답에서 필요한 data만 뽑는다.\r\n          const {\r\n            data: { next_redirect_pc_url, tid }\r\n          } = response;\r\n          console.log(next_redirect_pc_url);\r\n          console.log(tid);\r\n          // 응답 data로 state 갱신\r\n          setState({ next_redirect_pc_url, tid });\r\n        });\r\n\r\n        //디스패치를 쓴다면\r\n        //dispatch(payReady(state, state.params))\r\n        // .then((response)=>{\r\n        //   const {\r\n        //     data: { next_redirect_pc_url, tid }\r\n        //   } = response;\r\n        //   console.log(next_redirect_pc_url);\r\n        //   console.log(tid);\r\n        //   setState({ next_redirect_pc_url, tid });\r\n        // })\r\n    }\r\n\r\n    console.log('kakao', next_redirect_pc_url);\r\n    return (\r\n        productBox !== undefined ?\r\n        <div style={{overflow:'scroll',height:'500px'}}>\r\n            <img className=\"products_img\" src={productBox.image} style={{width: '100%'}}/>\r\n            <div className=\"products_title\" style={{fontSize: '13px',  margin: '5% 0 3%', lineHeight: '1.8'}}>{productBox.productName}</div>\r\n            <div className=\"products_price\" style={{fontWeight: '700'}}>{productBox.productPrice.toLocaleString()}원</div>\r\n            <a href={ next_redirect_pc_url }>{ next_redirect_pc_url }</a>\r\n            <button onClick={onClick}>Gyeran PAY</button>\r\n            <img className=\"products_desc\" style={{width: '100%'}} src={productBox.productDesc}/>\r\n        </div>\r\n        :\r\n        <></>\r\n    )\r\n}\r\n\r\nexport default withRouter(ShopItem)\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\usePromise.js",["303","304"],"// usePromise.js\r\nimport {useState, useEffect} from 'react';\r\n\r\nexport default function usePromise(promiseCreator, deps){\r\n\r\n    const [loading, setLoading] = useState(false); // 대기중 일때\r\n    const [resolved, setResolved] = useState(null); // 완료 일때\r\n    const [error, setError] = useState(null); // 실패 일때\r\n\r\n    useEffect(()=>{\r\n        const process = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const resolved = await promiseCreator();\r\n                setResolved(resolved);\r\n            } catch (error) {\r\n                setError(error);\r\n            }\r\n            setLoading(false);\r\n        }\r\n        process();\r\n    },deps);\r\n\r\n    return [loading, resolved, error];\r\n} ","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Options\\Options.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\SocketList\\ChatItem.js",["305","306","307","308","309","310"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { ChatInform } from '../../../api/actions/socket_action';\r\nimport moment from 'moment';\r\nimport { FriendProfile } from '../../../api/actions/socket_action';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../../MainPage/Main.scss';\r\nimport useChat from './useChat';\r\nimport axios from 'axios';\r\nimport { CountHow } from '../../../api/actions/socket_action';\r\n\r\nconst ChatItem = ({ chat, UserData, checktUpdate }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [Mes, setMes] = useState(\"\");\r\n    const [MatchUrl, setMatchUrl] = useState(\"\");\r\n    const [Fri, setFri] = useState(\"\");\r\n    const {Messages} = useChat(chat);\r\n    const [Num, setNum] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        let body ={\r\n            chat : chat\r\n        }\r\n        dispatch(ChatInform(body))\r\n        .then(response => {\r\n            setMes(response.payload[0]);\r\n            setMatchUrl(response.payload[0].roomName.split('_'))\r\n            if(UserData._id===response.payload[0].roomName.split('_')[0]){\r\n                let body ={\r\n                    mem : response.payload[0].roomName.split('_')[1]\r\n                }\r\n                dispatch(FriendProfile(body))\r\n                .then(response => {\r\n                    setFri(response.payload[0])\r\n                })\r\n            }else{\r\n                let body ={\r\n                    mem : response.payload[0].roomName.split('_')[0]\r\n                }\r\n                dispatch(FriendProfile(body))\r\n                .then(response => {\r\n                    setFri(response.payload[0])\r\n                })\r\n            }\r\n        })\r\n    }, [ UserData, chat, Messages ])\r\n\r\n    useEffect(() => {\r\n        let body = {\r\n            roomId : chat,\r\n            _id : UserData._id,\r\n        }\r\n        dispatch(CountHow(body))\r\n        .then(response => {\r\n            setNum(response.payload.number);\r\n            console.log(response.payload.number,'1111111111111111111')\r\n        })\r\n        // axios.post('/api/chats/countMessage',body)\r\n        // .then(response => {\r\n        //     console.log(response)\r\n        // })\r\n    }, [UserData, Messages, checktUpdate, Fri ])\r\n\r\n    return (\r\n        <div className=\"talking\">\r\n            {\r\n                Mes && Fri &&\r\n                <Link to={`/main/ChatingRoom/${chat}`}>\r\n                    <div className=\"talk_site\">\r\n                        <img src={Fri.image} />\r\n                        <div className=\"talk_pro\">\r\n                            <span>\r\n                                {Fri.userName}\r\n                            </span><br/>\r\n                            <span className=\"talk_message\">\r\n                                {Mes.message}\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"talk_div\">\r\n                        <div className=\"talk_time\">\r\n                            {moment(Mes.createdAt).format('A HH:MM분')}\r\n                        </div>\r\n                        {Num}\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ChatItem);\r\n\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Options\\option\\Weather.js",["311","312","313","314"],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\Board.js",["315","316"],"import React, {useState} from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport BoardList from './BoardList';\r\nimport BoardCU from './BoardCU';\r\nimport BoardDetail from './BoardDetail';\r\n\r\nconst Board = ({match, UserData}) => {\r\n    // const [selection, setselection] = useState('BoardList');\r\n    // useEffect(() => {\r\n        //     console.log('selection', selection);\r\n        // }, [selection])\r\n    const selection = match.params.select || 'BoardList';\r\n        return (\r\n        <div>\r\n            {selection === 'BoardList' && <BoardList/>}\r\n            {selection === 'create' && <BoardCU UserData={UserData}/>}\r\n            {selection === 'show' && <BoardDetail/>}            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Board);\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardList.js",["317"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { getPosts } from '../../../../api/actions/post_action'\r\n// import { createPost } from './BoardCU'\r\nimport {Button} from '@material-ui/core'\r\n\r\nconst BoardList = ({match, UserData}) => {\r\n    const dispatch = useDispatch();\r\n    const [posts, setPosts] = useState('');\r\n    // useEffect(()=>{\r\n        console.log('params', match.params);\r\n    // }, [match.params])\r\n\r\n    useEffect(()=>{\r\n        dispatch(getPosts())\r\n        .then(res => {\r\n            console.log('aaaa', res.payload.posts)\r\n            setPosts(res.payload.posts);\r\n            console.log(res.payload.posts);\r\n        })\r\n    }, [match.params]);\r\n    \r\n    console.log('posts', posts);\r\n\r\n    return (\r\n        <div>\r\n            <Link to=\"/main/Internet/posts/create\"><Button>글쓰기</Button></Link>\r\n            {posts.length !== 0 ? \r\n                posts.map(post => (\r\n                    <Link className=\"post_box\" to={`/main/Internet/posts/${post._id}`}>\r\n                        <div className=\"title\">{post.title}</div>\r\n                        {/* <div className=\"body\">{post.body}</div> */}\r\n                        <hr/>\r\n                    </Link>\r\n                ))\r\n                :\r\n                <div>게시글이 없습니다.</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(BoardList)\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardCU.js",["318","319"],"import React, {useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { createPosts } from '../../../../api/actions/post_action';\r\n\r\nconst BoardCU = ({UserData, match, history}) => {\r\n    const dispatch = useDispatch();\r\n    const selection = match.params.select;\r\n\r\n    const [inputs, setInputs] = useState({\r\n        title: '',\r\n        body: '',\r\n    });\r\n    const {title, body} = inputs\r\n\r\n    const onChange = (e) => {\r\n        const {className, value} = e.target\r\n        const nextInputs = {\r\n            ...inputs,\r\n            [className] : value,\r\n        }\r\n        setInputs(nextInputs)\r\n    }\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const Writer = UserData.userNickName;\r\n        // console.log('submit', title, body, UserData.userNickName);\r\n        dispatch(createPosts({title, body}))\r\n        .then(res => {\r\n            history.push('/main/Internet/posts');\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <form action=\"/posts\" method=\"post\"> */}\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"title\">제목</label>\r\n                    <input type=\"text\" id=\"title\" name=\"title\" value={title} className=\"title\"\r\n                    onChange={onChange}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"body\">내용</label>\r\n                    <textarea id=\"body\" name=\"body\" rows=\"5\" value={body} className=\"body\"\r\n                    onChange={onChange}></textarea>\r\n                </div>\r\n                <div>\r\n                    <a className=\"btn btn-primary\" href=\"/posts\">목록으로</a>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">제출</button>\r\n                </div>\r\n            </form>\r\n            {/* BoardCU */}\r\n            {/* {selection === 'create' ? }\r\n            {selection === 'update' ? } */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(BoardCU)\r\n","C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\components\\LeftPage\\Internet\\Board\\BoardDetail.js",[],"C:\\Users\\redqo\\Desktop\\Gy_git\\frontend\\src\\api\\actions\\post_action.js",[],{"ruleId":"320","replacedBy":"321"},{"ruleId":"322","replacedBy":"323"},{"ruleId":"324","severity":1,"message":"325","line":6,"column":31,"nodeType":"326","messageId":"327","endLine":6,"endColumn":40},{"ruleId":"328","severity":1,"message":"329","line":100,"column":21,"nodeType":"330","endLine":100,"endColumn":72},{"ruleId":"328","severity":1,"message":"329","line":101,"column":50,"nodeType":"330","endLine":101,"endColumn":103},{"ruleId":"331","severity":1,"message":"332","line":5,"column":1,"nodeType":"333","endLine":44,"endColumn":2},{"ruleId":"334","severity":1,"message":"335","line":38,"column":12,"nodeType":"336","endLine":38,"endColumn":14,"suggestions":"337"},{"ruleId":"324","severity":1,"message":"338","line":5,"column":23,"nodeType":"326","messageId":"327","endLine":5,"endColumn":29},{"ruleId":"324","severity":1,"message":"339","line":8,"column":10,"nodeType":"326","messageId":"327","endLine":8,"endColumn":23},{"ruleId":"324","severity":1,"message":"340","line":18,"column":11,"nodeType":"326","messageId":"327","endLine":18,"endColumn":25},{"ruleId":"334","severity":1,"message":"341","line":34,"column":7,"nodeType":"336","endLine":34,"endColumn":9,"suggestions":"342"},{"ruleId":"334","severity":1,"message":"341","line":41,"column":8,"nodeType":"336","endLine":41,"endColumn":16,"suggestions":"343"},{"ruleId":"331","severity":1,"message":"332","line":10,"column":1,"nodeType":"333","endLine":31,"endColumn":2},{"ruleId":"331","severity":1,"message":"332","line":5,"column":1,"nodeType":"333","endLine":16,"endColumn":2},{"ruleId":"324","severity":1,"message":"344","line":2,"column":7,"nodeType":"326","messageId":"327","endLine":2,"endColumn":21},{"ruleId":"331","severity":1,"message":"332","line":8,"column":1,"nodeType":"333","endLine":27,"endColumn":2},{"ruleId":"331","severity":1,"message":"332","line":5,"column":1,"nodeType":"333","endLine":16,"endColumn":2},{"ruleId":"324","severity":1,"message":"345","line":2,"column":31,"nodeType":"326","messageId":"327","endLine":2,"endColumn":36},{"ruleId":"324","severity":1,"message":"346","line":9,"column":8,"nodeType":"326","messageId":"327","endLine":9,"endColumn":12},{"ruleId":"324","severity":1,"message":"347","line":1,"column":38,"nodeType":"326","messageId":"327","endLine":1,"endColumn":49},{"ruleId":"324","severity":1,"message":"348","line":8,"column":22,"nodeType":"326","messageId":"327","endLine":8,"endColumn":33},{"ruleId":"334","severity":1,"message":"349","line":61,"column":7,"nodeType":"336","endLine":61,"endColumn":17,"suggestions":"350"},{"ruleId":"334","severity":1,"message":"351","line":72,"column":7,"nodeType":"336","endLine":72,"endColumn":19,"suggestions":"352"},{"ruleId":"334","severity":1,"message":"341","line":88,"column":8,"nodeType":"336","endLine":88,"endColumn":20,"suggestions":"353"},{"ruleId":"324","severity":1,"message":"354","line":1,"column":17,"nodeType":"326","messageId":"327","endLine":1,"endColumn":25},{"ruleId":"355","severity":1,"message":"356","line":76,"column":24,"nodeType":"357","messageId":"358","endLine":76,"endColumn":36,"fix":"359"},{"ruleId":"324","severity":1,"message":"360","line":1,"column":8,"nodeType":"326","messageId":"327","endLine":1,"endColumn":13},{"ruleId":"334","severity":1,"message":"361","line":27,"column":8,"nodeType":"336","endLine":27,"endColumn":10,"suggestions":"362"},{"ruleId":"328","severity":1,"message":"329","line":32,"column":17,"nodeType":"330","endLine":32,"endColumn":47},{"ruleId":"324","severity":1,"message":"363","line":4,"column":8,"nodeType":"326","messageId":"327","endLine":4,"endColumn":19},{"ruleId":"324","severity":1,"message":"348","line":5,"column":23,"nodeType":"326","messageId":"327","endLine":5,"endColumn":34},{"ruleId":"324","severity":1,"message":"364","line":18,"column":36,"nodeType":"326","messageId":"327","endLine":18,"endColumn":41},{"ruleId":"324","severity":1,"message":"365","line":20,"column":12,"nodeType":"326","messageId":"327","endLine":20,"endColumn":17},{"ruleId":"334","severity":1,"message":"366","line":32,"column":8,"nodeType":"336","endLine":32,"endColumn":10,"suggestions":"367"},{"ruleId":"334","severity":1,"message":"368","line":42,"column":8,"nodeType":"336","endLine":42,"endColumn":28,"suggestions":"369"},{"ruleId":"334","severity":1,"message":"370","line":64,"column":7,"nodeType":"336","endLine":64,"endColumn":14,"suggestions":"371"},{"ruleId":"334","severity":1,"message":"341","line":70,"column":7,"nodeType":"336","endLine":70,"endColumn":13,"suggestions":"372"},{"ruleId":"328","severity":1,"message":"329","line":107,"column":37,"nodeType":"330","endLine":107,"endColumn":91},{"ruleId":"328","severity":1,"message":"329","line":111,"column":37,"nodeType":"330","endLine":111,"endColumn":92},{"ruleId":"328","severity":1,"message":"329","line":127,"column":37,"nodeType":"330","endLine":127,"endColumn":86},{"ruleId":"328","severity":1,"message":"329","line":131,"column":37,"nodeType":"330","endLine":131,"endColumn":86},{"ruleId":"324","severity":1,"message":"373","line":3,"column":10,"nodeType":"326","messageId":"327","endLine":3,"endColumn":14},{"ruleId":"324","severity":1,"message":"374","line":14,"column":12,"nodeType":"326","messageId":"327","endLine":14,"endColumn":20},{"ruleId":"324","severity":1,"message":"375","line":17,"column":11,"nodeType":"326","messageId":"327","endLine":17,"endColumn":31},{"ruleId":"334","severity":1,"message":"341","line":29,"column":8,"nodeType":"336","endLine":29,"endColumn":18,"suggestions":"376"},{"ruleId":"324","severity":1,"message":"377","line":4,"column":22,"nodeType":"326","messageId":"327","endLine":4,"endColumn":33},{"ruleId":"324","severity":1,"message":"378","line":4,"column":35,"nodeType":"326","messageId":"327","endLine":4,"endColumn":49},{"ruleId":"324","severity":1,"message":"379","line":12,"column":12,"nodeType":"326","messageId":"327","endLine":12,"endColumn":20},{"ruleId":"324","severity":1,"message":"380","line":12,"column":22,"nodeType":"326","messageId":"327","endLine":12,"endColumn":33},{"ruleId":"328","severity":1,"message":"329","line":70,"column":25,"nodeType":"330","endLine":70,"endColumn":61},{"ruleId":"324","severity":1,"message":"381","line":1,"column":16,"nodeType":"326","messageId":"327","endLine":1,"endColumn":25},{"ruleId":"324","severity":1,"message":"348","line":3,"column":10,"nodeType":"326","messageId":"327","endLine":3,"endColumn":21},{"ruleId":"328","severity":1,"message":"329","line":15,"column":33,"nodeType":"330","endLine":15,"endColumn":65},{"ruleId":"328","severity":1,"message":"329","line":17,"column":37,"nodeType":"330","endLine":17,"endColumn":65},{"ruleId":"324","severity":1,"message":"360","line":2,"column":8,"nodeType":"326","messageId":"327","endLine":2,"endColumn":13},{"ruleId":"324","severity":1,"message":"348","line":4,"column":10,"nodeType":"326","messageId":"327","endLine":4,"endColumn":21},{"ruleId":"328","severity":1,"message":"329","line":11,"column":17,"nodeType":"330","endLine":11,"endColumn":45},{"ruleId":"324","severity":1,"message":"360","line":1,"column":8,"nodeType":"326","messageId":"327","endLine":1,"endColumn":13},{"ruleId":"324","severity":1,"message":"344","line":4,"column":7,"nodeType":"326","messageId":"327","endLine":4,"endColumn":21},{"ruleId":"334","severity":1,"message":"382","line":29,"column":8,"nodeType":"336","endLine":29,"endColumn":10,"suggestions":"383"},{"ruleId":"328","severity":1,"message":"329","line":32,"column":13,"nodeType":"330","endLine":32,"endColumn":51},{"ruleId":"324","severity":1,"message":"384","line":1,"column":8,"nodeType":"326","messageId":"327","endLine":1,"endColumn":13},{"ruleId":"324","severity":1,"message":"348","line":2,"column":10,"nodeType":"326","messageId":"327","endLine":2,"endColumn":21},{"ruleId":"324","severity":1,"message":"385","line":13,"column":31,"nodeType":"326","messageId":"327","endLine":13,"endColumn":36},{"ruleId":"324","severity":1,"message":"386","line":3,"column":10,"nodeType":"326","messageId":"327","endLine":3,"endColumn":17},{"ruleId":"324","severity":1,"message":"387","line":3,"column":19,"nodeType":"326","messageId":"327","endLine":3,"endColumn":26},{"ruleId":"324","severity":1,"message":"338","line":3,"column":28,"nodeType":"326","messageId":"327","endLine":3,"endColumn":34},{"ruleId":"328","severity":1,"message":"329","line":20,"column":17,"nodeType":"330","endLine":20,"endColumn":72},{"ruleId":"388","severity":1,"message":"389","line":32,"column":17,"nodeType":"330","endLine":37,"endColumn":19},{"ruleId":"324","severity":1,"message":"354","line":1,"column":17,"nodeType":"326","messageId":"327","endLine":1,"endColumn":25},{"ruleId":"328","severity":1,"message":"329","line":66,"column":25,"nodeType":"330","endLine":66,"endColumn":103},{"ruleId":"324","severity":1,"message":"381","line":1,"column":16,"nodeType":"326","messageId":"327","endLine":1,"endColumn":25},{"ruleId":"324","severity":1,"message":"390","line":7,"column":20,"nodeType":"326","messageId":"327","endLine":7,"endColumn":31},{"ruleId":"328","severity":1,"message":"329","line":18,"column":29,"nodeType":"330","endLine":18,"endColumn":53},{"ruleId":"324","severity":1,"message":"381","line":2,"column":17,"nodeType":"326","messageId":"327","endLine":2,"endColumn":26},{"ruleId":"324","severity":1,"message":"391","line":8,"column":9,"nodeType":"326","messageId":"327","endLine":8,"endColumn":17},{"ruleId":"328","severity":1,"message":"329","line":100,"column":13,"nodeType":"330","endLine":100,"endColumn":91},{"ruleId":"328","severity":1,"message":"329","line":105,"column":13,"nodeType":"330","endLine":105,"endColumn":98},{"ruleId":"334","severity":1,"message":"392","line":22,"column":7,"nodeType":"326","endLine":22,"endColumn":11},{"ruleId":"334","severity":1,"message":"393","line":22,"column":7,"nodeType":"326","endLine":22,"endColumn":11,"suggestions":"394"},{"ruleId":"324","severity":1,"message":"348","line":2,"column":23,"nodeType":"326","messageId":"327","endLine":2,"endColumn":34},{"ruleId":"324","severity":1,"message":"360","line":10,"column":8,"nodeType":"326","messageId":"327","endLine":10,"endColumn":13},{"ruleId":"324","severity":1,"message":"395","line":18,"column":12,"nodeType":"326","messageId":"327","endLine":18,"endColumn":20},{"ruleId":"334","severity":1,"message":"341","line":49,"column":8,"nodeType":"336","endLine":49,"endColumn":36,"suggestions":"396"},{"ruleId":"334","severity":1,"message":"397","line":65,"column":8,"nodeType":"336","endLine":65,"endColumn":48,"suggestions":"398"},{"ruleId":"328","severity":1,"message":"329","line":73,"column":25,"nodeType":"330","endLine":73,"endColumn":48},{"ruleId":"324","severity":1,"message":"399","line":8,"column":12,"nodeType":"326","messageId":"327","endLine":8,"endColumn":17},{"ruleId":"324","severity":1,"message":"400","line":8,"column":19,"nodeType":"326","messageId":"327","endLine":8,"endColumn":27},{"ruleId":"324","severity":1,"message":"385","line":11,"column":31,"nodeType":"326","messageId":"327","endLine":11,"endColumn":36},{"ruleId":"328","severity":1,"message":"329","line":37,"column":60,"nodeType":"330","endLine":37,"endColumn":131},{"ruleId":"324","severity":1,"message":"354","line":1,"column":16,"nodeType":"326","messageId":"327","endLine":1,"endColumn":24},{"ruleId":"324","severity":1,"message":"373","line":2,"column":10,"nodeType":"326","messageId":"327","endLine":2,"endColumn":14},{"ruleId":"334","severity":1,"message":"341","line":22,"column":8,"nodeType":"336","endLine":22,"endColumn":22,"suggestions":"401"},{"ruleId":"324","severity":1,"message":"402","line":8,"column":11,"nodeType":"326","messageId":"327","endLine":8,"endColumn":20},{"ruleId":"324","severity":1,"message":"403","line":26,"column":15,"nodeType":"326","messageId":"327","endLine":26,"endColumn":21},"no-native-reassign",["404"],"no-negated-in-lhs",["405"],"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["406"],"'Avatar' is defined but never used.","'getFriendList' is defined but never used.","'onClickHandler' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["407"],["408"],"'SOCKET_RECEIVE' is assigned a value but never used.","'Route' is defined but never used.","'Chat' is defined but never used.","'useCallback' is defined but never used.","'useSelector' is defined but never used.","React Hook useEffect has a missing dependency: 'ClickEvent'. Either include it or remove the dependency array. You can also do a functional update 'setClickEvent(C => ...)' if you only need 'ClickEvent' in the 'setClickEvent' call.",["409"],"React Hook useEffect has missing dependencies: 'UserData.userId' and 'dispatch'. Either include them or remove the dependency array.",["410"],["411"],"'useState' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"412","text":"413"},"'axios' is defined but never used.","React Hook useEffect has missing dependencies: 'data' and 'dispatch'. Either include them or remove the dependency array.",["414"],"'TextsmsIcon' is defined but never used.","'setId' is assigned a value but never used.","'Write' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'UserData._id', 'checktUpdate', 'roomId', and 'setchecktUpdate'. Either include them or remove the dependency array. If 'setchecktUpdate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["415"],"React Hook useEffect has missing dependencies: 'checktUpdate', 'roomId', and 'setchecktUpdate'. Either include them or remove the dependency array. If 'setchecktUpdate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["416"],"React Hook useEffect has missing dependencies: 'checkMembers' and 'dispatch'. Either include them or remove the dependency array.",["417"],["418"],"'Link' is defined but never used.","'roomName' is assigned a value but never used.","'handleRoomNameChange' is assigned a value but never used.",["419"],"'uploadImage' is defined but never used.","'uploadImageTmp' is defined but never used.","'FilePath' is assigned a value but never used.","'setFilePath' is assigned a value but never used.","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["420"],"'React' is defined but never used.","'error' is assigned a value but never used.","'Comment' is defined but never used.","'Tooltip' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'description' is assigned a value but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'promiseCreator'. Either include it or remove the dependency array. If 'promiseCreator' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["421"],"'MatchUrl' is assigned a value but never used.",["422"],"React Hook useEffect has missing dependencies: 'chat' and 'dispatch'. Either include them or remove the dependency array.",["423"],"'state' is assigned a value but never used.","'setstate' is assigned a value but never used.",["424"],"'selection' is assigned a value but never used.","'Writer' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"425","fix":"426"},{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},{"desc":"435","fix":"436"},[2277,2277],"()",{"desc":"437","fix":"438"},{"desc":"439","fix":"440"},{"desc":"441","fix":"442"},{"desc":"443","fix":"444"},{"desc":"445","fix":"446"},{"desc":"447","fix":"448"},{"desc":"449","fix":"450"},{"desc":"451","fix":"452"},{"desc":"453","fix":"454"},{"desc":"455","fix":"456"},{"desc":"457","fix":"458"},"Update the dependencies array to be: [dispatch, props.history]",{"range":"459","text":"460"},"Update the dependencies array to be: [dispatch]",{"range":"461","text":"462"},"Update the dependencies array to be: [Update, dispatch]",{"range":"463","text":"464"},"Update the dependencies array to be: [ClickEvent, UserData]",{"range":"465","text":"466"},"Update the dependencies array to be: [ClickEvent, UserData.userId, dispatch]",{"range":"467","text":"468"},"Update the dependencies array to be: [InputText2, dispatch]",{"range":"469","text":"470"},"Update the dependencies array to be: [data, dispatch]",{"range":"471","text":"472"},"Update the dependencies array to be: [UserData._id, checktUpdate, roomId, setchecktUpdate]",{"range":"473","text":"474"},"Update the dependencies array to be: [UserData, Messages, roomId, setchecktUpdate, checktUpdate]",{"range":"475","text":"476"},"Update the dependencies array to be: [checkMembers, dispatch, match]",{"range":"477","text":"478"},"Update the dependencies array to be: [Body, dispatch]",{"range":"479","text":"480"},"Update the dependencies array to be: [UserData, dispatch]",{"range":"481","text":"482"},"Update the dependencies array to be: [data]",{"range":"483","text":"484"},"Update the dependencies array to be: [promiseCreator]",{"range":"485","text":"486"},"Update the dependencies array to be: [UserData, chat, Messages, dispatch]",{"range":"487","text":"488"},"Update the dependencies array to be: [UserData, Messages, checktUpdate, Fri, chat, dispatch]",{"range":"489","text":"490"},"Update the dependencies array to be: [dispatch, match.params]",{"range":"491","text":"492"},[1182,1184],"[dispatch, props.history]",[1029,1031],"[dispatch]",[1180,1188],"[Update, dispatch]",[1961,1971],"[ClickEvent, UserData]",[2202,2214],"[ClickEvent, UserData.userId, dispatch]",[2569,2581],"[InputText2, dispatch]",[709,711],"[data, dispatch]",[1211,1213],"[UserData._id, checktUpdate, roomId, setchecktUpdate]",[1445,1465],"[UserData, Messages, roomId, setchecktUpdate, checktUpdate]",[2113,2120],"[checkMembers, dispatch, match]",[2282,2288],"[Body, dispatch]",[893,903],"[UserData, dispatch]",[820,822],"[data]",[664,668],"[promiseCreator]",[1768,1796],"[UserData, chat, Messages, dispatch]",[2258,2298],"[UserData, Messages, checktUpdate, Fri, chat, dispatch]",[758,772],"[dispatch, match.params]"]