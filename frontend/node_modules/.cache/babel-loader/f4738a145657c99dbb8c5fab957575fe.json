{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redqo\\\\Desktop\\\\Gy_git\\\\frontend\\\\src\\\\components\\\\LeftPage\\\\UpdateUser\\\\UpdateTest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { updateUser, uploadImage } from \"../../../api/actions/user_action\";\nimport { Button } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateUser = ({\n  UserData,\n  history\n}) => {\n  _s();\n\n  function plusData(e) {\n    const formData = new FormData();\n    formData.append('file', e.target.file.files[0]);\n    formData.append('message', Message);\n    return formData;\n  }\n\n  function adds(data) {\n    let body = {};\n\n    for (let value of data.values()) {\n      body.Form = value;\n    }\n  }\n\n  function ax(body) {\n    dispatch(uploadImage(body)).then(response => response.payload);\n  }\n\n  const dispatch = useDispatch();\n  const [Id, setId] = useState(UserData.userId);\n  const [Image, setImage] = useState(UserData.image);\n  const [Message, setMessage] = useState(UserData.message);\n  useEffect(() => {\n    setId(UserData.userId);\n    setImage(UserData.image);\n    setMessage(UserData.message);\n  }, [UserData]);\n\n  const onChangeMessage = e => {\n    setMessage(e.target.value);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (e.target.files !== null) {\n      // const formData = await plusData(e);\n      // // const Data = await plus(formData);\n      // // const sendAxios = await uploadImage(Data);\n      // let body = {\n      //     formData : formData\n      // }\n      ///////////\n      // const formData = new FormData();\n      // formData.append('file',e.target.file.files[0]);\n      // formData.append('message',Message);\n      const Forms = await plusData(e);\n      const add = await add(Forms);\n      const re = await ax(add); ///////////\n      // let body = {}\n      // for (let value of formData.values()) {\n      //     body.Form = value\n      //   }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: Image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      name: \"firm\",\n      onSubmit: handleSubmit,\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        accept: \"image/jpg,impge/png,image/jpeg,image/gif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: Message,\n        onChange: onChangeMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uC81C\\uCD9C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateUser, \"DFagThI06V0TTSxZ7rkNRMac6bE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = UpdateUser;\nexport default _c2 = withRouter(UpdateUser);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UpdateUser\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/redqo/Desktop/Gy_git/frontend/src/components/LeftPage/UpdateUser/UpdateTest.js"],"names":["React","useEffect","useRef","useState","useDispatch","withRouter","updateUser","uploadImage","Button","UpdateUser","UserData","history","plusData","e","formData","FormData","append","target","file","files","Message","adds","data","body","value","values","Form","ax","dispatch","then","response","payload","Id","setId","userId","Image","setImage","image","setMessage","message","onChangeMessage","handleSubmit","preventDefault","Forms","add","re"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { updateUser, uploadImage } from \"../../../api/actions/user_action\";\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nconst UpdateUser = ({UserData, history}) => {\r\n\r\n    function plusData(e) {\r\n        const formData = new FormData();\r\n        formData.append('file',e.target.file.files[0]);\r\n        formData.append('message',Message);\r\n\r\n        return formData;\r\n    }\r\n    function adds(data) {\r\n        let body = {}\r\n        for (let value of data.values()) {\r\n            body.Form = value\r\n        }\r\n    }\r\n    function ax(body) {\r\n        dispatch(uploadImage(body))\r\n            .then(response => response.payload)\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [Id, setId] = useState(UserData.userId)\r\n    const [Image, setImage] = useState(UserData.image)\r\n    const [Message, setMessage] = useState(UserData.message)\r\n\r\n    useEffect(() => {\r\n        setId(UserData.userId);\r\n        setImage(UserData.image);\r\n        setMessage(UserData.message);\r\n    }, [UserData])\r\n\r\n    const onChangeMessage = (e) => {\r\n        setMessage(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n        if(e.target.files !== null){\r\n            // const formData = await plusData(e);\r\n            // // const Data = await plus(formData);\r\n            // // const sendAxios = await uploadImage(Data);\r\n            // let body = {\r\n            //     formData : formData\r\n            // }\r\n            ///////////\r\n            // const formData = new FormData();\r\n            // formData.append('file',e.target.file.files[0]);\r\n            // formData.append('message',Message);\r\n            \r\n            const Forms = await plusData(e);\r\n            const add = await add(Forms);\r\n            const re = await ax(add);\r\n            ///////////\r\n            // let body = {}\r\n            // for (let value of formData.values()) {\r\n            //     body.Form = value\r\n            //   }\r\n\r\n\r\n            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <img src={Image} />\r\n            <form name=\"firm\"  onSubmit={handleSubmit} encType='multipart/form-data'>\r\n                <input type=\"file\" name=\"file\" accept='image/jpg,impge/png,image/jpeg,image/gif' />\r\n                <input type=\"text\" value={Message} onChange={onChangeMessage}/>\r\n                <button type=\"submit\">제출</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(UpdateUser);\r\n"]},"metadata":{},"sourceType":"module"}