{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\redqo\\\\Desktop\\\\Gy_git\\\\frontend\\\\src\\\\components\\\\LeftPage\\\\UpdateUser\\\\UpdateUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { updateUser, uploadImage } from \"../../../api/actions/user_action\";\nimport { Button } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateUser = ({\n  UserData,\n  history\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n\n  function image_get(e) {\n    const formData = new FormData();\n    console.log('1', e.target.nick);\n    console.log('1', e.target.message);\n    console.log('1', e.target.profile_img[0]);\n    formData.append('nickname', e.target.nick);\n    formData.append('message', e.target.message);\n    formData.append('profile_img', e.target.profile_img[0]);\n    return formData;\n  }\n\n  function image_upload(formData) {\n    dispatch(uploadImage(formData)).then(response => console.log('111111111111', response.payload));\n    console.log('2');\n    return console.log(formData);\n  }\n\n  const [inputs, setInputs] = useState({\n    nick: UserData.userNickName,\n    message: UserData.message\n  });\n  useEffect(() => {\n    setInputs({\n      nick: UserData.userNickName,\n      message: UserData.message\n    });\n  }, [UserData]);\n  const [image, setImage] = useState(UserData.image);\n  useEffect(() => {\n    setImage(UserData.image);\n  }, [UserData, image]);\n  const {\n    nick,\n    message\n  } = inputs;\n\n  const onChange = e => {\n    const {\n      className,\n      value\n    } = e.target;\n    const nextInputs = { ...inputs,\n      [className]: value\n    };\n    setInputs(nextInputs);\n  }; // const onChangeImg = (e) => {\n  //     const formData = new FormData();\n  //     formData.append('file', img)\n  // }\n\n\n  const onChangeImg = e => {\n    setImage(e.target.files[0]);\n  };\n\n  const onSubmitHandler = async e => {\n    e.preventDefault();\n    const formData = await image_get(e);\n    await image_upload(formData); // let body = {\n    //     userId : UserData.userId,\n    //     userNickName: inputs.nick,\n    //     message: inputs.message\n    // }\n    // console.log('asd;klfj', body);\n    // dispatch(updateUser(body))\n    // .then(response => {\n    //     if(response.payload.success){\n    //         console.log('성공');\n    //         history.push('/main/FriendList');\n    //     }else{\n    //         alert('Error');\n    //     }\n    // })\n  };\n\n  const btnstyle = {\n    margin: '18px 0',\n    fontWeight: 'bolder',\n    color: '#fff',\n    backgroundColor: '#845460'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"update_user\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uD504\\uB85C\\uD544 \\uC218\\uC815\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitHandler,\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/jpg,impge/png,image/jpeg,image/gif\",\n        onChange: onChangeImg,\n        name: \"profile_img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"nick\",\n        type: \"text\",\n        value: nick,\n        onChange: onChange,\n        name: \"nick\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"message\",\n        type: \"text\",\n        value: message,\n        onChange: onChange,\n        name: \"message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        style: btnstyle,\n        variant: \"contained\",\n        fullWidth: true,\n        children: \"\\uC218\\uC815 \\uC644\\uB8CC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateUser, \"8+2j59d9Lr0ny4P979PM5Fqk6XA=\", false, function () {\n  return [useDispatch];\n});\n\n_c = UpdateUser;\nexport default _c2 = withRouter(UpdateUser);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UpdateUser\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["c:/Users/redqo/Desktop/Gy_git/frontend/src/components/LeftPage/UpdateUser/UpdateUser.js"],"names":["React","useEffect","useRef","useState","useDispatch","withRouter","updateUser","uploadImage","Button","UpdateUser","UserData","history","dispatch","image_get","e","formData","FormData","console","log","target","nick","message","profile_img","append","image_upload","then","response","payload","inputs","setInputs","userNickName","image","setImage","onChange","className","value","nextInputs","onChangeImg","files","onSubmitHandler","preventDefault","btnstyle","margin","fontWeight","color","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { updateUser, uploadImage } from \"../../../api/actions/user_action\";\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nconst UpdateUser = ({UserData, history}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    function image_get(e) {\r\n        \r\n        const formData = new FormData();\r\n        console.log('1',e.target.nick)\r\n        console.log('1',e.target.message)\r\n        console.log('1',e.target.profile_img[0])\r\n        formData.append('nickname',e.target.nick);\r\n        formData.append('message',e.target.message);\r\n        formData.append('profile_img',e.target.profile_img[0]);\r\n        return formData;\r\n    }\r\n    \r\n    function image_upload(formData) {\r\n        dispatch(uploadImage(formData))\r\n        .then(response => console.log('111111111111',response.payload))\r\n        console.log('2');\r\n        return console.log(formData);\r\n    }\r\n\r\n    const [inputs, setInputs] = useState({\r\n        nick: UserData.userNickName,\r\n        message: UserData.message,\r\n    })\r\n    useEffect(() => {\r\n        setInputs({\r\n            nick: UserData.userNickName,\r\n            message: UserData.message,\r\n        })\r\n    }, [UserData])\r\n\r\n    const [image, setImage] = useState(UserData.image);\r\n\r\n    useEffect(() => {\r\n        setImage(UserData.image)\r\n    }, [UserData, image])\r\n\r\n    const {nick, message} = inputs\r\n\r\n    const onChange = (e) => {\r\n        const {className, value} = e.target\r\n        const nextInputs = {\r\n            ...inputs,\r\n            [className] : value,\r\n        }\r\n        setInputs(nextInputs)\r\n    }\r\n    // const onChangeImg = (e) => {\r\n    //     const formData = new FormData();\r\n    //     formData.append('file', img)\r\n    // }\r\n    const onChangeImg = (e) => {\r\n        setImage(e.target.files[0]);\r\n    }\r\n    const onSubmitHandler = async (e) => {\r\n        e.preventDefault();\r\n        const formData = await image_get(e);\r\n        await image_upload(formData);\r\n        // let body = {\r\n        //     userId : UserData.userId,\r\n        //     userNickName: inputs.nick,\r\n        //     message: inputs.message\r\n        // }\r\n        // console.log('asd;klfj', body);\r\n        // dispatch(updateUser(body))\r\n        // .then(response => {\r\n        //     if(response.payload.success){\r\n        //         console.log('성공');\r\n        //         history.push('/main/FriendList');\r\n        //     }else{\r\n        //         alert('Error');\r\n        //     }\r\n        // })\r\n    }\r\n\r\n    const btnstyle ={\r\n        margin : '18px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#845460'\r\n    }\r\n\r\n    return (\r\n        <div className=\"update_user\">\r\n            <div>프로필 수정</div>\r\n            <form onSubmit={onSubmitHandler} encType=\"multipart/form-data\">\r\n                {/* <label className=\"profile_img_wrapper\" for=\"profile_img\">\r\n                    <img src={image} />\r\n                </label> */}\r\n                <img src={image} />\r\n                {/* <input type=\"file\" name=\"uploadfile\" class=\"uploadfile\" accept='image/jpg,impge/png,image/jpeg,image/gif' value=\"\" />\r\n                 <input type=\"text\" placeholder={userNick} value={Input1} ref={inputEl1}/>\r\n                <input type=\"text\" placeholder={userMessage} value={Input2} ref={inputEl2}/> */}\r\n                <input type=\"file\" accept='image/jpg,impge/png,image/jpeg,image/gif' onChange={onChangeImg} name='profile_img'/>\r\n                <input className=\"nick\" type=\"text\" value={nick} onChange={onChange} name=\"nick\"/>\r\n                <input className=\"message\" type=\"text\" value={message} onChange={onChange} name=\"message\"/>\r\n                <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>수정 완료</Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(UpdateUser);\r\n"]},"metadata":{},"sourceType":"module"}