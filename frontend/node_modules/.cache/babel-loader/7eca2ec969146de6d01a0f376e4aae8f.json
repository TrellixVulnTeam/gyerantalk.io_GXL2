{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redqo\\\\Desktop\\\\Gy_git\\\\frontend\\\\src\\\\components\\\\LeftPage\\\\UpdateUser\\\\UpdateUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { updateUser } from \"../../../api/actions/user_action\";\nimport { Button } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction image_get(e) {\n  console.log('1');\n  const formData = new FormData();\n  formData.append('nickname', e.target.nick);\n  formData.append('message', e.target.message);\n  formData.append('img', e.target.profile_img[0]);\n  return formData;\n}\n\nfunction image_upload(data) {\n  console.log('2');\n  return console.log(data);\n}\n\nconst UpdateUser = ({\n  UserData,\n  history\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const userNick = UserData.userNickName;\n  const userMessage = UserData.message;\n  const [inputs, setInputs] = useState({\n    nick: '',\n    message: ''\n  }); // const [img, setImage] = useState(null)\n\n  const {\n    nick,\n    message\n  } = inputs;\n\n  const onChange = e => {\n    const {\n      className,\n      value\n    } = e.target;\n    const nextInputs = { ...inputs,\n      [className]: value\n    };\n    setInputs(nextInputs);\n  }; // const onChangeImg = (e) => {\n  //     const formData = new FormData();\n  //     formData.append('file', img)\n  // }\n\n\n  const onSubmitHandler = async e => {\n    e.preventDefault();\n    const formData = await image_get(e);\n    await image_upload(formData); // let body = {\n    //     userId : UserData.userId,\n    //     userNickName: inputs.nick,\n    //     message: inputs.message\n    // }\n    // console.log('asd;klfj', body);\n    // dispatch(updateUser(body))\n    // .then(response => {\n    //     if(response.payload.success){\n    //         console.log('성공');\n    //         history.push('/main/FriendList');\n    //     }else{\n    //         alert('Error');\n    //     }\n    // })\n  };\n\n  const btnstyle = {\n    margin: '18px 0',\n    fontWeight: 'bolder',\n    color: '#fff',\n    backgroundColor: '#845460'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"update_user\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uD504\\uB85C\\uD544 \\uC218\\uC815\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitHandler,\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"profile_img_wrapper\",\n        for: \"uploadfile\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: UserData.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"nick\",\n        type: \"text\",\n        placeholder: userNick,\n        value: nick,\n        onChange: onChange,\n        name: \"nick\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"message\",\n        type: \"text\",\n        placeholder: userMessage,\n        value: message,\n        onChange: onChange,\n        name: \"message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        style: btnstyle,\n        variant: \"contained\",\n        fullWidth: true,\n        children: \"\\uC218\\uC815 \\uC644\\uB8CC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateUser, \"uDH7fTm1V/QqyGzOB0NKKoN9ZL4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = UpdateUser;\nexport default _c2 = withRouter(UpdateUser);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UpdateUser\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/redqo/Desktop/Gy_git/frontend/src/components/LeftPage/UpdateUser/UpdateUser.js"],"names":["React","useRef","useState","useDispatch","withRouter","updateUser","Button","image_get","e","console","log","formData","FormData","append","target","nick","message","profile_img","image_upload","data","UpdateUser","UserData","history","dispatch","userNick","userNickName","userMessage","inputs","setInputs","onChange","className","value","nextInputs","onSubmitHandler","preventDefault","btnstyle","margin","fontWeight","color","backgroundColor","image"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { updateUser } from \"../../../api/actions/user_action\";\r\nimport { Button } from '@material-ui/core';\r\n\r\nfunction image_get(e) {\r\n    console.log('1')\r\n    const formData = new FormData();\r\n\r\n    formData.append('nickname',e.target.nick);\r\n    formData.append('message',e.target.message);\r\n    formData.append('img',e.target.profile_img[0]);\r\n\r\n    return formData;\r\n}\r\n\r\nfunction image_upload(data) {\r\n    console.log('2');\r\n    return console.log(data);\r\n}\r\n\r\nconst UpdateUser = ({UserData, history}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const userNick = UserData.userNickName;\r\n    const userMessage = UserData.message;\r\n    const [inputs, setInputs] = useState({\r\n        nick: '',\r\n        message: '',\r\n    })\r\n    // const [img, setImage] = useState(null)\r\n\r\n    const {nick, message} = inputs\r\n\r\n    const onChange = (e) => {\r\n        const {className, value} = e.target\r\n        const nextInputs = {\r\n            ...inputs,\r\n            [className] : value,\r\n        }\r\n        setInputs(nextInputs)\r\n    }\r\n    // const onChangeImg = (e) => {\r\n    //     const formData = new FormData();\r\n    //     formData.append('file', img)\r\n    // }\r\n    const onSubmitHandler = async (e) => {\r\n        e.preventDefault();\r\n        const formData = await image_get(e);\r\n        await image_upload(formData);\r\n        // let body = {\r\n        //     userId : UserData.userId,\r\n        //     userNickName: inputs.nick,\r\n        //     message: inputs.message\r\n        // }\r\n        // console.log('asd;klfj', body);\r\n        // dispatch(updateUser(body))\r\n        // .then(response => {\r\n        //     if(response.payload.success){\r\n        //         console.log('성공');\r\n        //         history.push('/main/FriendList');\r\n        //     }else{\r\n        //         alert('Error');\r\n        //     }\r\n        // })\r\n    }\r\n\r\n    const btnstyle ={\r\n        margin : '18px 0',\r\n        fontWeight : 'bolder',\r\n        color : '#fff',\r\n        backgroundColor : '#845460'\r\n    }\r\n\r\n    return (\r\n        <div className=\"update_user\">\r\n            <div>프로필 수정</div>\r\n            <form onSubmit={onSubmitHandler} encType=\"multipart/form-data\">\r\n                <label className=\"profile_img_wrapper\" for=\"uploadfile\">\r\n                    <img src={UserData.image} />\r\n                </label>\r\n                {/* <input type=\"file\" name=\"uploadfile\" class=\"uploadfile\" accept='image/jpg,impge/png,image/jpeg,image/gif' value=\"\" />\r\n                 <input type=\"text\" placeholder={userNick} value={Input1} ref={inputEl1}/>\r\n                <input type=\"text\" placeholder={userMessage} value={Input2} ref={inputEl2}/>\r\n                <input type=\"file\" accept='image/jpg,impge/png,image/jpeg,image/gif' name='profile_img'/> */}\r\n                <input className=\"nick\" type=\"text\" placeholder={userNick} value={nick} onChange={onChange} name=\"nick\"/>\r\n                <input className=\"message\" type=\"text\" placeholder={userMessage} value={message} onChange={onChange} name=\"message\"/>\r\n                <Button type=\"submit\" style={btnstyle} variant=\"contained\" fullWidth>수정 완료</Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(UpdateUser);\r\n"]},"metadata":{},"sourceType":"module"}