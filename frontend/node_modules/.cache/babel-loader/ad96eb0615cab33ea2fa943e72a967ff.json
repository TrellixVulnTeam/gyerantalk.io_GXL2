{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redqo\\\\Desktop\\\\Gy_git\\\\frontend\\\\src\\\\components\\\\LeftPage\\\\Internet\\\\News\\\\News.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport usePromise from '../../../../usePromise';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport NewsItem from './NewsItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst News = ({\n  UserData\n}) => {\n  _s();\n\n  const [loading, resolved, error] = usePromise(() => {\n    return axios.get(`https://newsapi.org/v2/top-headlines?country=kr&apiKey=112d8e8b89e94be1a897eaffad725b6a`);\n  }, [UserData]); // 대기중 일때 실행\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  } // 값이 없으면 null 값으로 반환\n\n\n  if (!resolved) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB274\\uC2A4\\uC624\\uB958\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  } // resolved값이 유효할 때\n\n\n  const {\n    articles\n  } = resolved.data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u3147\\u3147\\u3147\\u3147\\u3147\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this); // // 데이터를 그대로 NewsItem파일로 전송해준다\n  // return ( // article 값이 유효하면\n  //     <NewsListBlock>\n  //         {articles.map((article) => (\n  //             <NewsItem key={article.url} article={article} />\n  //         ))}\n  //     </NewsListBlock>\n  // )\n};\n\n_s(News, \"PjTcPvPOed5p2QKuwxe9JkSuc9g=\", false, function () {\n  return [usePromise];\n});\n\n_c = News;\nexport default _c2 = withRouter(News);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"News\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/redqo/Desktop/Gy_git/frontend/src/components/LeftPage/Internet/News/News.js"],"names":["React","axios","withRouter","usePromise","LoadingOutlined","NewsItem","News","UserData","loading","resolved","error","get","articles","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAE3B,QAAM,CAACC,OAAD,EAAUC,QAAV,EAAoBC,KAApB,IAA6BP,UAAU,CAAC,MAAM;AAChD,WAAOF,KAAK,CAACU,GAAN,CACF,yFADE,CAAP;AAGH,GAJ4C,EAI1C,CAACJ,QAAD,CAJ0C,CAA7C,CAF2B,CAQ3B;;AACA,MAAIC,OAAJ,EAAa;AACT,wBACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAb0B,CAc3B;;;AACA,MAAI,CAACC,QAAL,EAAe;AACX,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAnB0B,CAqB3B;;;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAeH,QAAQ,CAACI,IAA9B;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAxB2B,CAgC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,CAzCD;;GAAMP,I;UAEiCH,U;;;KAFjCG,I;AA4CN,qBAAeJ,UAAU,CAACI,IAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\nimport usePromise from '../../../../usePromise';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport NewsItem from './NewsItem';\r\n\r\nconst News = ({ UserData }) => {\r\n\r\n    const [loading, resolved, error] = usePromise(() => {\r\n        return axios.get(\r\n            `https://newsapi.org/v2/top-headlines?country=kr&apiKey=112d8e8b89e94be1a897eaffad725b6a`\r\n        );\r\n    }, [UserData]);\r\n\r\n    // 대기중 일때 실행\r\n    if (loading) {\r\n        return (\r\n            <LoadingOutlined />\r\n        )\r\n    }\r\n    // 값이 없으면 null 값으로 반환\r\n    if (!resolved) {\r\n        return (\r\n            <div>뉴스오류</div>\r\n        );\r\n    }\r\n\r\n    // resolved값이 유효할 때\r\n    const { articles } = resolved.data;\r\n\r\n    return (\r\n        <div>\r\n            {/* {articles.map((article)=>{\r\n                <NewsItem key={article.key} article={article}/>\r\n            })} */}ㅇㅇㅇㅇㅇ\r\n        </div>\r\n    )\r\n\r\n    // // 데이터를 그대로 NewsItem파일로 전송해준다\r\n    // return ( // article 값이 유효하면\r\n    //     <NewsListBlock>\r\n    //         {articles.map((article) => (\r\n    //             <NewsItem key={article.url} article={article} />\r\n    //         ))}\r\n    //     </NewsListBlock>\r\n    // )\r\n\r\n}\r\n\r\n\r\nexport default withRouter(News);\r\n"]},"metadata":{},"sourceType":"module"}